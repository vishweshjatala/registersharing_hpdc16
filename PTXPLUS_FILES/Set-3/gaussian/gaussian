//HEADER
.version 1.4+
.target sm_10, map_f64_to_f32
//END HEADER


//INSTRUCTIONS

.const .u32 constant1_Z4Fan1PfS_ii[2] = {
          0x7e800000, 0x3e800000
};

.const .u32 constant1_Z4Fan2PfS_S_iii[1] = {
          0x000003ff
};





.entry  _Z4Fan2PfS_S_iii (
	.param  .u64 __cudaparm__Z4Fan2PfS_S_iii_m_cuda ,
	.param  .u64 __cudaparm__Z4Fan2PfS_S_iii_a_cuda ,
	.param  .u64 __cudaparm__Z4Fan2PfS_S_iii_b_cuda ,
	.param  .s32 __cudaparm__Z4Fan2PfS_S_iii_Size ,
	.param  .s32 __cudaparm__Z4Fan2PfS_S_iii_j1 ,
	.param  .s32 __cudaparm__Z4Fan2PfS_S_iii_t )
{
	.reg .u32 $r<7>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	mov.half.u32 $r1, s[0x0030];
	mov.half.u16 $r2.lo, %ntid.x;
	cvt.u32.u16 $r3, $r0.lo;
	add.u32 $r1, s[0x0028], -$r1;
	mad.wide.u16 $r2, %ctaid.x, $r2.lo, $r3;
	add.u32 $r3, $r1, 0xffffffff;
	set.lt.u32.u32 $p0/$o127, $r2, $r3;
	@$p0.equ retp;
	and.u16 $r0.hi, $r0.hi, constant1_Z4Fan2PfS_S_iii[0x0000];
	mov.u16 $r0.lo, %ntid.y;
	cvt.u32.u16 $r3, $r0.hi;
	mad.wide.u16 $r4, %ctaid.y, $r0.lo, $r3;
	set.gt.u32.u32 $p0/$o127, $r1, $r4;
	@$p0.equ retp;
	add.half.u32 $r2, s[0x0030], $r2;
	mov.half.u32 $r1, s[0x0028];
	mov.u32 $r0, s[0x0030];
	add.u32 $r3, $r2, 0x00000001;
	mul.half.lo.u16 $r6, $r1.hi, $r0.lo;
	mul.half.lo.u16 $r5, $r3.lo, $r1.hi;
	mad.wide.u16 $r6, $r1.lo, $r0.hi, $r6;
	mad.wide.u16 $r5, $r3.hi, $r1.lo, $r5;
	shl.u32 $r6, $r6, 0x00000010;
	shl.u32 $r5, $r5, 0x00000010;
	mad.wide.u16 $r6, $r1.lo, $r0.lo, $r6;
	add.u32 $r0, s[0x0030], $r4;
	mad.wide.u16 $r1, $r3.lo, $r1.lo, $r5;
	add.half.u32 $r5, $r0, $r6;
	add.half.u32 $r3, s[0x0030], $r1;
	add.u32 $r0, $r1, $r0;
	shl.u32 $r5, $r5, 0x00000002;
	shl.u32 $r1, $r3, 0x00000002;
	shl.u32 $r0, $r0, 0x00000002;
	add.half.u32 $r6, s[0x0018], $r5;
	add.half.u32 $r3, s[0x0010], $r1;
	set.ne.s32.s32 $p0/$o127, $r4, $r124;
	add.u32 $r5, s[0x0018], $r0;
	ld.global.u32 $r1, [$r6];
	ld.global.u32 $r3, [$r3];
	ld.global.u32 $r4, [$r5];
	mad.f32 $r1, -$r3, $r1, $r4;
	st.global.u32 [$r5], $r1;
	@$p0.ne retp;
	shl.u32 $r2, $r2, 0x00000002;
	shl.u32 $r1, s[0x0030], 0x00000002;
	add.half.u32 $r3, s[0x0020], $r2;
	add.half.u32 $r2, s[0x0010], $r0;
	add.u32 $r0, s[0x0020], $r1;
	add.u32 $r3, $r3, 0x00000004;
	ld.global.u32 $r1, [$r2];
	ld.global.u32 $r0, [$r0];
	ld.global.u32 $r2, [$r3];
	mad.f32 $r0, -$r1, $r0, $r2;
	st.global.u32 [$r3], $r0;

	l_exit: exit;
}

.entry  _Z4Fan1PfS_ii (
	.param  .u64 __cudaparm__Z4Fan1PfS_ii_m_cuda ,
	.param  .u64 __cudaparm__Z4Fan1PfS_ii_a_cuda ,
	.param  .s32 __cudaparm__Z4Fan1PfS_ii_Size ,
	.param  .s32 __cudaparm__Z4Fan1PfS_ii_t )
{
	.reg .u32 $r<6>;
	.reg .pred $p<4>;

	.reg .u32 $o127;

	
	mov.half.u32 $r1, s[0x0024];
	mov.half.u16 $r0.hi, %ntid.x;
	cvt.u32.u16 $r2, $r0.lo;
	add.u32 $r1, s[0x0020], -$r1;
	mad.wide.u16 $r0, %ctaid.x, $r0.hi, $r2;
	add.u32 $r1, $r1, 0xffffffff;
	set.lt.u32.u32 $p0/$o127, $r0, $r1;
	@$p0.equ retp;
	add.half.u32 $r3, s[0x0024], $r0;
	mov.half.u32 $r1, s[0x0020];
	mov.half.u32 $r0, s[0x0024];
	mov.half.u32 $r2, s[0x0020];
	add.u32 $r3, $r3, 0x00000001;
	mul.half.lo.u16 $r5, $r0.lo, $r2.hi;
	mul.half.lo.u16 $r4, $r1.lo, $r3.hi;
	mad.wide.u16 $r5, $r0.hi, $r2.lo, $r5;
	mad.wide.u16 $r4, $r1.hi, $r3.lo, $r4;
	shl.u32 $r5, $r5, 0x00000010;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r2, $r0.lo, $r2.lo, $r5;
	mad.wide.u16 $r0, $r1.lo, $r3.lo, $r4;
	add.half.u32 $r1, s[0x0024], $r2;
	add.half.u32 $r0, s[0x0024], $r0;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r0, $r0, 0x00000002;
	add.half.u32 $r2, s[0x0018], $r1;
	add.half.u32 $r1, s[0x0018], $r0;
	ld.global.u32 $r2, [$r2];
	ld.global.u32 $r1, [$r1];
	set.abs.gt.f32.f32 $p0/$o127, $r2, constant1_Z4Fan1PfS_ii[0x0000];
	@$p0.neu mul.f32 $r1, $r1, constant1_Z4Fan1PfS_ii[0x0004];
	@$p0.neu mul.f32 $r2, $r2, constant1_Z4Fan1PfS_ii[0x0004];
	rcp.half.f32 $r2, $r2;
	mul.half.f32 $r1, $r1, $r2;
	add.u32 $r0, s[0x0010], $r0;
	st.global.u32 [$r0], $r1;

	l_exit: exit;
}
//END INSTRUCTIONS
