//HEADER
.version 1.4+
.target sm_10, map_f64_to_f32
//END HEADER


//INSTRUCTIONS

.const .u32 constant1_Z11md5_overlapPhiiiiS_[3] = {
          0x0000003f, 0x0000001f, 0x00000034
};

.const .u32 constant1_Z12sha1_overlapPhiiiiS_[2] = {
          0x0000001f, 0x00000034
};

.const .u32 constant1_Z3md5PhiiiS_[3] = {
          0x00000001, 0x0000003f, 0x0000001f
};

.const .u32 constant1_Z4sha1PhiiiS_[2] = {
          0x00000001, 0x0000001f
};


.global .b8 sha1_padding[64];
.global .b8 md5_padding[64];



.entry  _Z4sha1PhiiiS_ (
	.param  .u64 __cudaparm__Z4sha1PhiiiS__input ,
	.param  .s32 __cudaparm__Z4sha1PhiiiS__chunkSize ,
	.param  .s32 __cudaparm__Z4sha1PhiiiS__totalThreads ,
	.param  .s32 __cudaparm__Z4sha1PhiiiS__padSize ,
	.param  .u64 __cudaparm__Z4sha1PhiiiS__scratch )
{
	.reg .u32 $r<51>;
	.reg .u32 $ofs<5>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	mov.u16 $r0.hi, %ntid.x;
	cvt.u32.u16 $r1, $r0.lo;
	mad.wide.u16 $r50, %ctaid.x, $r0.hi, $r1;
	set.gt.s32.s32 $p0/$o127, s[0x001c], $r50;
	@$p0.equ retp;
	add.u32 $r2, s[0x001c], 0xffffffff;
	set.gt.s32.s32 $p0/$r0, s[0x0020], $r124;
	set.eq.s32.s32 $r2, $r50, $r2;
	and.b32 $r3, $r0, constant1_Z4sha1PhiiiS_[0x0000];
	cvt.s32.s32 $r0, -$r2;
	and.b32 $p1|$o127, $r3, $r0;
	ssy 0x000000d8;
	@$p1.eq bra l0x000000d8;
	@$p0.eq bra l0x000000d8;
	mov.u32 $r0, s[0x0018];
	mul.wide.u16 $r2, $r0.lo, $r50.hi;
	mad.wide.u16 $r2, $r0.hi, $r50.lo, $r2;
	shl.u32 $r2, $r2, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r50.lo, $r2;
	add.half.u32 $r2, s[0x0018], $r0;
	add.half.u32 $r3, -s[0x0020], $r2;
	add.u32 $r0, s[0x0010], $r3;
	l0x000000a8: mov.u16 $r4.lo, 0x00000000;
	add.u32 $r3, $r3, 0x00000001;
	st.global.u8 [$r0], $r4;
	set.ne.s32.s32 $p0/$o127, $r3, $r2;
	add.u32 $r0, $r0, 0x00000001;
	@$p0.ne bra l0x000000a8;
	l0x000000d8: shr.u32 $r2, s[0x0018], 0x00000006;
	add.u32 $r3, $r2, 0x00000001;
	set.le.s32.s32 $p0/$o127, $r3, $r124;
	@$p0.ne bra l0x00004408;
	mov.u32 $r0, s[0x0018];
	shr.u32 $r4, $r1, 0x00000005;
	mul.wide.u16 $r5, $r0.lo, $r50.hi;
	and.b32 $r1, $r1, constant1_Z4sha1PhiiiS_[0x0004];
	shl.u32 $r4, $r4, 0x0000000b;
	mad.wide.u16 $r6, $r0.hi, $r50.lo, $r5;
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r1, $r4, 0x00000030;
	shl.u32 $r4, $r6, 0x00000010;
	add.u32 $r1, $r5, $r1;
	mad.wide.u16 $r0, $r0.lo, $r50.lo, $r4;
	shl.b32 $ofs1, $r1, 0x0;
	shl.u32 $r48, $r2, 0x00000004;
	shl.u32 $r5, $r3, 0x00000004;
	mov.u32 $r4, $r124;
	mov.u32 $r7, $r124;
	mov.u32 $r11, 0xc3d2e1f0;
	mov.u32 $r10, 0x10325476;
	add.u32 $r47, s[0x0010], $r0;
	mov.u32 $r8, 0x98badcfe;
	mov.u32 $r9, 0xefcdab89;
	mov.u32 $r49, 0x67452301;
	mov.u32 $r1, $r47;
	l0x000001b0: ld.global.u32 $r2, [$r1];
	add.u32 $r0, $r1, 0x00000004;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x0000], $r2;
	add.u32 $r2, $r1, 0x00000008;
	ld.global.u32 $r3, [$r2];
	mov.u32 s[$ofs1+0x0080], $r0;
	add.u32 $r0, $r1, 0x0000000c;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, $r1, 0x00000010;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x0100], $r3;
	mov.u32 s[$ofs1+0x0180], $r2;
	mov.u32 s[$ofs1+0x0200], $r0;
	add.u32 $r0, $r1, 0x00000014;
	ld.global.u32 $r6, [$r0];
	add.u32 $r0, $r1, 0x00000018;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, $r1, 0x0000001c;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, $r1, 0x00000020;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x0280], $r6;
	mov.u32 s[$ofs1+0x0300], $r3;
	mov.u32 s[$ofs1+0x0380], $r2;
	mov.u32 s[$ofs1+0x0400], $r0;
	add.u32 $r0, $r1, 0x00000024;
	ld.global.u32 $r6, [$r0];
	add.u32 $r0, $r1, 0x00000028;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, $r1, 0x0000002c;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, $r1, 0x00000030;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x0480], $r6;
	mov.u32 s[$ofs1+0x0500], $r3;
	mov.u32 s[$ofs1+0x0580], $r2;
	set.ne.s32.s32 $p0/$o127, $r4, $r48;
	mov.u32 s[$ofs1+0x0600], $r0;
	@$p0.ne bra l0x00000378;
	mov.u32 $r0, 0x00000080;
	mov.u32 s[$ofs1+0x0680], $r0;
	mov.u16 $r0.lo, 0x00000000;
	mov.u8 s[$ofs1+0x1c00], $r0.lo;
	mov.u8 s[$ofs1+0x1c04], $r0.lo;
	mov.u8 s[$ofs1+0x1c08], $r0.lo;
	shr.u32 $r0, s[0x0018], 0x0000001d;
	shl.u32 $r2, s[0x0018], 0x00000003;
	mov.u8 s[$ofs1+0x1c0c], $r0.lo;
	shr.u32 $r0, $r2, 0x00000018;
	mov.u8 s[$ofs1+0x1e00], $r0.lo;
	shr.u32 $r0, $r2, 0x00000010;
	mov.u8 s[$ofs1+0x1e04], $r0.lo;
	shr.u32 $r0, $r2, 0x00000008;
	mov.u8 s[$ofs1+0x1e08], $r0.lo;
	mov.u8 s[$ofs1+0x1e0c], $r2.lo;
	bra l0x000003c8;
	l0x00000378: add.u32 $r0, $r7, $r47;
	add.u32 $r2, $r0, 0x00000034;
	ld.global.u32 $r3, [$r2];
	add.u32 $r2, $r0, 0x00000038;
	ld.global.u32 $r2, [$r2];
	add.u32 $r0, $r0, 0x0000003c;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x0680], $r3;
	mov.u32 s[$ofs1+0x0700], $r2;
	mov.u32 s[$ofs1+0x0780], $r0;
	l0x000003c8: cvt.u32.u8 $r2, s[$ofs1+0x0002];
	cvt.u32.u8 $r3, s[$ofs1+0x0000];
	cvt.u32.u8 $r6, s[$ofs1+0x0001];
	cvt.u32.u8 $r0, s[$ofs1+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r3, $r3, 0x00000018;
	shl.u32 $r6, $r6, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r3, $r6;
	or.b32 $r0, $r0, $r2;
	mov.u32 s[$ofs1+0x0000], $r0;
	add.u32 $ofs2, $ofs1, 0x00000080;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r3, s[$ofs2+0x0000];
	cvt.u32.u8 $r6, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r3, $r3, 0x00000018;
	shl.u32 $r6, $r6, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r3, $r6;
	or.b32 $r21, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000100;
	mov.u32 s[$ofs1+0x0080], $r21;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r3, s[$ofs2+0x0000];
	cvt.u32.u8 $r6, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r3, $r3, 0x00000018;
	shl.u32 $r6, $r6, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r3, $r6;
	or.b32 $r3, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000180;
	mov.u32 s[$ofs1+0x0100], $r3;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r6, s[$ofs2+0x0000];
	cvt.u32.u8 $r12, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r6, $r6, 0x00000018;
	shl.u32 $r12, $r12, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r6, $r12;
	or.b32 $r22, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000200;
	mov.u32 s[$ofs1+0x0180], $r22;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r6, s[$ofs2+0x0000];
	cvt.u32.u8 $r12, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r6, $r6, 0x00000018;
	shl.u32 $r12, $r12, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r6, $r12;
	or.b32 $r20, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000280;
	mov.u32 s[$ofs1+0x0200], $r20;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r6, s[$ofs2+0x0000];
	cvt.u32.u8 $r12, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r6, $r6, 0x00000018;
	shl.u32 $r12, $r12, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r6, $r12;
	or.b32 $r19, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000300;
	mov.u32 s[$ofs1+0x0280], $r19;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r6, s[$ofs2+0x0000];
	cvt.u32.u8 $r12, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r6, $r6, 0x00000018;
	shl.u32 $r12, $r12, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r6, $r12;
	or.b32 $r18, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000380;
	mov.u32 s[$ofs1+0x0300], $r18;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r6, s[$ofs2+0x0000];
	cvt.u32.u8 $r12, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r6, $r6, 0x00000018;
	shl.u32 $r12, $r12, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r6, $r12;
	or.b32 $r17, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000400;
	mov.u32 s[$ofs1+0x0380], $r17;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r6, s[$ofs2+0x0000];
	cvt.u32.u8 $r12, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r6, $r6, 0x00000018;
	shl.u32 $r12, $r12, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r6, $r12;
	or.b32 $r6, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000480;
	mov.u32 s[$ofs1+0x0400], $r6;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r12, s[$ofs2+0x0000];
	cvt.u32.u8 $r13, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r12, $r12, 0x00000018;
	shl.u32 $r13, $r13, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r12, $r13;
	or.b32 $r16, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000500;
	mov.u32 s[$ofs1+0x0480], $r16;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r12, s[$ofs2+0x0000];
	cvt.u32.u8 $r13, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r12, $r12, 0x00000018;
	shl.u32 $r13, $r13, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r12, $r13;
	or.b32 $r15, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000580;
	mov.u32 s[$ofs1+0x0500], $r15;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r12, s[$ofs2+0x0000];
	cvt.u32.u8 $r13, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r12, $r12, 0x00000018;
	shl.u32 $r13, $r13, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r12, $r13;
	or.b32 $r14, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000600;
	mov.u32 s[$ofs1+0x0580], $r14;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r12, s[$ofs2+0x0000];
	cvt.u32.u8 $r13, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r12, $r12, 0x00000018;
	shl.u32 $r13, $r13, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r12, $r13;
	or.b32 $r13, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000680;
	mov.u32 s[$ofs1+0x0600], $r13;
	cvt.u32.u8 $r2, s[$ofs2+0x0002];
	cvt.u32.u8 $r12, s[$ofs2+0x0000];
	cvt.u32.u8 $r23, s[$ofs2+0x0001];
	cvt.u32.u8 $r0, s[$ofs2+0x0003];
	shl.u32 $r2, $r2, 0x00000008;
	shl.u32 $r12, $r12, 0x00000018;
	shl.u32 $r23, $r23, 0x00000010;
	or.b32 $r0, $r0, $r2;
	or.b32 $r2, $r12, $r23;
	or.b32 $r0, $r0, $r2;
	add.u32 $ofs2, $ofs1, 0x00000700;
	mov.u32 s[$ofs1+0x0680], $r0;
	cvt.u32.u8 $r12, s[$ofs2+0x0002];
	cvt.u32.u8 $r23, s[$ofs2+0x0000];
	cvt.u32.u8 $r24, s[$ofs2+0x0001];
	cvt.u32.u8 $r2, s[$ofs2+0x0003];
	shl.u32 $r12, $r12, 0x00000008;
	shl.u32 $r23, $r23, 0x00000018;
	shl.u32 $r24, $r24, 0x00000010;
	or.b32 $r2, $r2, $r12;
	or.b32 $r12, $r23, $r24;
	or.b32 $r12, $r2, $r12;
	add.u32 $ofs2, $ofs1, 0x00000780;
	mov.u32 s[$ofs1+0x0700], $r12;
	cvt.u32.u8 $r23, s[$ofs2+0x0002];
	cvt.u32.u8 $r2, s[$ofs2+0x0003];
	shl.u32 $r23, $r23, 0x00000008;
	mov.u32 $r24, 0xffffffff;
	or.b32 $r23, $r2, $r23;
	cvt.u32.u32 $p0|$o127, $r24;
	cvt.u32.u8 $r24, s[$ofs2+0x0000];
	cvt.u32.u8 $r25, s[$ofs2+0x0001];
	mov.u32 $r2, $r124;
	xor.b32 $r27, $r8, $r10;
	shl.u32 $r24, $r24, 0x00000018;
	shl.u32 $r25, $r25, 0x00000010;
	shl.u32 $r26, $r49, 0x00000005;
	@$p0.ne shr.u32 $r2, $r49, 0x0000001b;
	and.b32 $r27, $r9, $r27;
	or.b32 $r24, $r24, $r25;
	or.b32 $r25, $r26, $r2;
	xor.b32 $r26, $r10, $r27;
	or.b32 $r2, $r23, $r24;
	add.u32 $r24, $r25, $r26;
	mov.u32 s[$ofs1+0x0780], $r2;
	mov.u32 $r23, $r124;
	add.u32 $r25, s[$ofs1+0x0000], $r24;
	shl.u32 $r24, $r9, 0x0000001e;
	@$p0.ne shr.u32 $r23, $r9, 0x00000002;
	add.u32 $r25, $r11, $r25;
	or.b32 $r23, $r24, $r23;
	add.u32 $r24, $r25, 0x5a827999;
	mov.u32 $r25, $r124;
	xor.b32 $r27, $r23, $r8;
	shl.u32 $r26, $r24, 0x00000005;
	@$p0.ne shr.u32 $r25, $r24, 0x0000001b;
	and.b32 $r27, $r49, $r27;
	or.b32 $r25, $r26, $r25;
	xor.b32 $r26, $r8, $r27;
	add.u32 $r26, $r25, $r26;
	mov.u32 $r25, $r124;
	add.u32 $r26, $r21, $r26;
	shl.u32 $r21, $r49, 0x0000001e;
	@$p0.ne shr.u32 $r25, $r49, 0x00000002;
	add.u32 $r26, $r10, $r26;
	or.b32 $r21, $r21, $r25;
	add.u32 $r25, $r26, 0x5a827999;
	mov.u32 $r26, $r124;
	xor.b32 $r28, $r21, $r23;
	shl.u32 $r27, $r25, 0x00000005;
	@$p0.ne shr.u32 $r26, $r25, 0x0000001b;
	and.b32 $r28, $r24, $r28;
	or.b32 $r26, $r27, $r26;
	xor.b32 $r27, $r23, $r28;
	add.u32 $r27, $r26, $r27;
	mov.u32 $r26, $r124;
	add.u32 $r27, $r3, $r27;
	@$p0.ne shr.u32 $r26, $r24, 0x00000002;
	shl.u32 $r24, $r24, 0x0000001e;
	add.u32 $r27, $r8, $r27;
	or.b32 $r24, $r24, $r26;
	add.u32 $r26, $r27, 0x5a827999;
	mov.u32 $r27, $r124;
	xor.b32 $r29, $r21, $r24;
	shl.u32 $r28, $r26, 0x00000005;
	@$p0.ne shr.u32 $r27, $r26, 0x0000001b;
	and.b32 $r29, $r25, $r29;
	or.b32 $r27, $r28, $r27;
	xor.b32 $r28, $r21, $r29;
	add.u32 $r28, $r27, $r28;
	mov.u32 $r27, $r124;
	add.u32 $r22, $r22, $r28;
	@$p0.ne shr.u32 $r27, $r25, 0x00000002;
	shl.u32 $r25, $r25, 0x0000001e;
	add.u32 $r23, $r23, $r22;
	or.b32 $r22, $r25, $r27;
	add.u32 $r23, $r23, 0x5a827999;
	mov.u32 $r25, $r124;
	xor.b32 $r28, $r24, $r22;
	shl.u32 $r27, $r23, 0x00000005;
	@$p0.ne shr.u32 $r25, $r23, 0x0000001b;
	and.b32 $r28, $r26, $r28;
	or.b32 $r25, $r27, $r25;
	xor.b32 $r27, $r24, $r28;
	add.u32 $r27, $r25, $r27;
	mov.u32 $r25, $r124;
	add.u32 $r20, $r20, $r27;
	@$p0.ne shr.u32 $r25, $r26, 0x00000002;
	shl.u32 $r26, $r26, 0x0000001e;
	add.u32 $r21, $r21, $r20;
	or.b32 $r20, $r26, $r25;
	add.u32 $r21, $r21, 0x5a827999;
	mov.u32 $r25, $r124;
	xor.b32 $r27, $r22, $r20;
	shl.u32 $r26, $r21, 0x00000005;
	@$p0.ne shr.u32 $r25, $r21, 0x0000001b;
	and.b32 $r27, $r23, $r27;
	or.b32 $r25, $r26, $r25;
	xor.b32 $r26, $r22, $r27;
	add.u32 $r26, $r25, $r26;
	mov.u32 $r25, $r124;
	add.u32 $r26, $r19, $r26;
	@$p0.ne shr.u32 $r25, $r23, 0x00000002;
	shl.u32 $r19, $r23, 0x0000001e;
	add.u32 $r23, $r24, $r26;
	or.b32 $r19, $r19, $r25;
	add.u32 $r23, $r23, 0x5a827999;
	mov.u32 $r24, $r124;
	xor.b32 $r26, $r19, $r20;
	shl.u32 $r25, $r23, 0x00000005;
	@$p0.ne shr.u32 $r24, $r23, 0x0000001b;
	and.b32 $r26, $r21, $r26;
	or.b32 $r24, $r25, $r24;
	xor.b32 $r25, $r20, $r26;
	add.u32 $r25, $r24, $r25;
	mov.u32 $r24, $r124;
	add.u32 $r25, $r18, $r25;
	@$p0.ne shr.u32 $r24, $r21, 0x00000002;
	shl.u32 $r18, $r21, 0x0000001e;
	add.u32 $r21, $r22, $r25;
	or.b32 $r18, $r18, $r24;
	add.u32 $r21, $r21, 0x5a827999;
	mov.u32 $r22, $r124;
	xor.b32 $r25, $r18, $r19;
	shl.u32 $r24, $r21, 0x00000005;
	@$p0.ne shr.u32 $r22, $r21, 0x0000001b;
	and.b32 $r25, $r23, $r25;
	or.b32 $r22, $r24, $r22;
	xor.b32 $r24, $r19, $r25;
	add.u32 $r24, $r22, $r24;
	mov.u32 $r22, $r124;
	add.u32 $r17, $r17, $r24;
	@$p0.ne shr.u32 $r22, $r23, 0x00000002;
	shl.u32 $r23, $r23, 0x0000001e;
	add.u32 $r20, $r20, $r17;
	or.b32 $r17, $r23, $r22;
	add.u32 $r20, $r20, 0x5a827999;
	mov.u32 $r22, $r124;
	xor.b32 $r24, $r18, $r17;
	shl.u32 $r23, $r20, 0x00000005;
	@$p0.ne shr.u32 $r22, $r20, 0x0000001b;
	and.b32 $r24, $r21, $r24;
	or.b32 $r22, $r23, $r22;
	xor.b32 $r23, $r18, $r24;
	add.u32 $r23, $r22, $r23;
	mov.u32 $r22, $r124;
	add.u32 $r23, $r6, $r23;
	@$p0.ne shr.u32 $r22, $r21, 0x00000002;
	shl.u32 $r24, $r21, 0x0000001e;
	add.u32 $r21, $r19, $r23;
	or.b32 $r19, $r24, $r22;
	add.u32 $r21, $r21, 0x5a827999;
	mov.u32 $r22, $r124;
	xor.b32 $r24, $r17, $r19;
	shl.u32 $r23, $r21, 0x00000005;
	@$p0.ne shr.u32 $r22, $r21, 0x0000001b;
	and.b32 $r24, $r20, $r24;
	or.b32 $r22, $r23, $r22;
	xor.b32 $r23, $r17, $r24;
	add.u32 $r23, $r22, $r23;
	mov.u32 $r22, $r124;
	add.u32 $r16, $r16, $r23;
	@$p0.ne shr.u32 $r22, $r20, 0x00000002;
	shl.u32 $r20, $r20, 0x0000001e;
	add.u32 $r18, $r18, $r16;
	or.b32 $r16, $r20, $r22;
	add.u32 $r18, $r18, 0x5a827999;
	mov.u32 $r20, $r124;
	xor.b32 $r23, $r19, $r16;
	shl.u32 $r22, $r18, 0x00000005;
	@$p0.ne shr.u32 $r20, $r18, 0x0000001b;
	and.b32 $r23, $r21, $r23;
	or.b32 $r20, $r22, $r20;
	xor.b32 $r22, $r19, $r23;
	add.u32 $r22, $r20, $r22;
	mov.u32 $r20, $r124;
	add.u32 $r22, $r15, $r22;
	@$p0.ne shr.u32 $r20, $r21, 0x00000002;
	shl.u32 $r15, $r21, 0x0000001e;
	add.u32 $r17, $r17, $r22;
	or.b32 $r15, $r15, $r20;
	add.u32 $r17, $r17, 0x5a827999;
	mov.u32 $r20, $r124;
	xor.b32 $r22, $r15, $r16;
	shl.u32 $r21, $r17, 0x00000005;
	@$p0.ne shr.u32 $r20, $r17, 0x0000001b;
	and.b32 $r22, $r18, $r22;
	or.b32 $r20, $r21, $r20;
	xor.b32 $r21, $r16, $r22;
	add.u32 $r21, $r20, $r21;
	mov.u32 $r20, $r124;
	add.u32 $r21, $r14, $r21;
	@$p0.ne shr.u32 $r20, $r18, 0x00000002;
	shl.u32 $r14, $r18, 0x0000001e;
	add.u32 $r19, $r19, $r21;
	or.b32 $r18, $r14, $r20;
	add.u32 $r14, $r19, 0x5a827999;
	mov.u32 $r19, $r124;
	xor.b32 $r21, $r18, $r15;
	shl.u32 $r20, $r14, 0x00000005;
	@$p0.ne shr.u32 $r19, $r14, 0x0000001b;
	and.b32 $r21, $r17, $r21;
	or.b32 $r19, $r20, $r19;
	xor.b32 $r20, $r15, $r21;
	add.u32 $r20, $r19, $r20;
	mov.u32 $r19, $r124;
	add.u32 $r13, $r13, $r20;
	@$p0.ne shr.u32 $r19, $r17, 0x00000002;
	shl.u32 $r17, $r17, 0x0000001e;
	add.u32 $r16, $r16, $r13;
	or.b32 $r13, $r17, $r19;
	add.u32 $r16, $r16, 0x5a827999;
	mov.u32 $r17, $r124;
	xor.b32 $r20, $r18, $r13;
	shl.u32 $r19, $r16, 0x00000005;
	@$p0.ne shr.u32 $r17, $r16, 0x0000001b;
	and.b32 $r20, $r14, $r20;
	or.b32 $r17, $r19, $r17;
	xor.b32 $r19, $r18, $r20;
	add.u32 $r19, $r17, $r19;
	mov.u32 $r17, $r124;
	add.u32 $r19, $r0, $r19;
	@$p0.ne shr.u32 $r17, $r14, 0x00000002;
	shl.u32 $r14, $r14, 0x0000001e;
	add.u32 $r15, $r15, $r19;
	or.b32 $r14, $r14, $r17;
	add.u32 $r17, $r15, 0x5a827999;
	mov.u32 $r15, $r124;
	xor.b32 $r20, $r13, $r14;
	shl.u32 $r19, $r17, 0x00000005;
	@$p0.ne shr.u32 $r15, $r17, 0x0000001b;
	and.b32 $r20, $r16, $r20;
	or.b32 $r15, $r19, $r15;
	xor.b32 $r19, $r13, $r20;
	add.u32 $r19, $r15, $r19;
	mov.u32 $r15, $r124;
	add.u32 $r12, $r12, $r19;
	@$p0.ne shr.u32 $r15, $r16, 0x00000002;
	shl.u32 $r19, $r16, 0x0000001e;
	add.u32 $r16, $r18, $r12;
	or.b32 $r12, $r19, $r15;
	add.u32 $r15, $r16, 0x5a827999;
	mov.u32 $r16, $r124;
	xor.b32 $r19, $r14, $r12;
	shl.u32 $r18, $r15, 0x00000005;
	@$p0.ne shr.u32 $r16, $r15, 0x0000001b;
	and.b32 $r19, $r17, $r19;
	or.b32 $r16, $r18, $r16;
	xor.b32 $r18, $r14, $r19;
	add.u32 $r18, $r16, $r18;
	mov.u32 $r16, $r124;
	xor.b32 $r6, $r6, $r0;
	xor.b32 $r0, s[$ofs1+0x0000], $r3;
	add.u32 $r18, $r2, $r18;
	@$p0.ne shr.u32 $r16, $r17, 0x00000002;
	shl.u32 $r3, $r17, 0x0000001e;
	xor.b32 $r2, $r0, $r6;
	mov.u32 $r0, $r124;
	add.u32 $r6, $r13, $r18;
	or.b32 $r13, $r3, $r16;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	add.u32 $r16, $r6, 0x5a827999;
	shl.u32 $r2, $r2, 0x00000001;
	shl.u32 $r17, $r16, 0x00000005;
	@$p0.ne shr.u32 $r3, $r16, 0x0000001b;
	or.b32 $r6, $r0, $r2;
	xor.b32 $r0, $r13, $r12;
	or.b32 $r3, $r17, $r3;
	add.u32 $ofs2, $ofs1, 0x00000180;
	mov.u32 $r29, $ofs2;
	add.u32 $ofs2, $ofs1, 0x00000480;
	mov.u32 $r30, $ofs2;
	and.b32 $r0, $r15, $r0;
	mov.u32 s[$ofs1+0x0000], $r6;
	add.u32 $ofs2, $ofs1, 0x00000700;
	mov.u32 $r31, $ofs2;
	add.u32 $ofs2, $ofs1, 0x00000080;
	mov.u32 $r32, $ofs2;
	xor.b32 $r17, $r12, $r0;
	shl.b32 $ofs2, $r29, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.half.u32 $r2, s[$ofs2+0x0000];
	add.half.u32 $r3, $r3, $r17;
	shl.b32 $ofs2, $r32, 0x0;
	xor.b32 $r0, s[$ofs2+0x0000], $r0;
	shl.b32 $ofs2, $r30, 0x0;
	xor.b32 $r2, s[$ofs2+0x0000], $r2;
	add.u32 $r3, $r6, $r3;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r14, $r14, $r3;
	mov.u32 $r6, $r124;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	add.u32 $r14, $r14, 0x5a827999;
	shl.u32 $r2, $r2, 0x00000001;
	@$p0.ne shr.u32 $r6, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	shl.u32 $r18, $r14, 0x00000005;
	@$p0.ne shr.u32 $r3, $r14, 0x0000001b;
	or.b32 $r17, $r0, $r2;
	or.b32 $r15, $r15, $r6;
	or.b32 $r18, $r18, $r3;
	shl.b32 $ofs2, $r29, 0x0;
	mov.u32 $r2, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.u32 $r6, s[$ofs2+0x0000];
	xor.b32 $r0, $r15, $r13;
	shl.b32 $ofs2, $r30, 0x0;
	mov.u32 $r28, s[$ofs2+0x0000];
	add.u32 $ofs2, $ofs1, 0x00000200;
	mov.u32 $r33, $ofs2;
	add.u32 $ofs2, $ofs1, 0x00000500;
	mov.u32 $r34, $ofs2;
	and.b32 $r0, $r16, $r0;
	mov.u32 s[$ofs1+0x0080], $r17;
	add.u32 $ofs2, $ofs1, 0x00000780;
	mov.u32 $r35, $ofs2;
	add.u32 $ofs2, $ofs1, 0x00000100;
	mov.u32 $r36, $ofs2;
	xor.b32 $r19, $r13, $r0;
	shl.b32 $ofs2, $r33, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	mov.half.u32 $r3, s[$ofs2+0x0000];
	add.half.u32 $r18, $r18, $r19;
	shl.b32 $ofs2, $r36, 0x0;
	xor.b32 $r0, s[$ofs2+0x0000], $r0;
	shl.b32 $ofs2, $r34, 0x0;
	xor.b32 $r3, s[$ofs2+0x0000], $r3;
	add.u32 $r18, $r17, $r18;
	xor.b32 $r3, $r0, $r3;
	mov.u32 $r0, $r124;
	add.u32 $r18, $r12, $r18;
	mov.u32 $r12, $r124;
	@$p0.ne shr.u32 $r0, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	@$p0.ne shr.u32 $r12, $r16, 0x00000002;
	shl.u32 $r16, $r16, 0x0000001e;
	or.b32 $r22, $r0, $r3;
	or.b32 $r42, $r16, $r12;
	mov.u32 $r3, $r124;
	shl.b32 $ofs2, $r33, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	mov.u32 $r12, s[$ofs2+0x0000];
	add.u32 $r23, $r18, 0x5a827999;
	shl.b32 $ofs2, $r34, 0x0;
	mov.u32 $r45, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	xor.b32 $r20, s[$ofs2+0x0000], $r17;
	xor.b32 $r18, $r15, $r42;
	shl.u32 $r16, $r23, 0x00000005;
	@$p0.ne shr.u32 $r3, $r23, 0x0000001b;
	add.u32 $ofs2, $ofs1, 0x00000280;
	mov.u32 $r37, $ofs2;
	and.b32 $r19, $r14, $r18;
	mov.u32 s[$ofs1+0x0100], $r22;
	or.b32 $r18, $r16, $r3;
	add.u32 $ofs2, $ofs1, 0x00000580;
	mov.u32 $r41, $ofs2;
	xor.b32 $r19, $r15, $r19;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r3, s[$ofs2+0x0000];
	mov.half.u32 $r16, s[$ofs1+0x0000];
	add.u32 $r18, $r18, $r19;
	xor.b32 $r2, $r2, $r3;
	shl.b32 $ofs2, $r41, 0x0;
	xor.b32 $r3, s[$ofs2+0x0000], $r16;
	add.u32 $r18, $r22, $r18;
	xor.b32 $r16, $r2, $r3;
	mov.u32 $r3, $r124;
	add.u32 $r2, $r13, $r18;
	mov.u32 $r13, $r124;
	@$p0.ne shr.u32 $r3, $r16, 0x0000001f;
	shl.u32 $r16, $r16, 0x00000001;
	@$p0.ne shr.u32 $r13, $r14, 0x00000002;
	shl.u32 $r14, $r14, 0x0000001e;
	or.b32 $r24, $r3, $r16;
	or.b32 $r13, $r14, $r13;
	add.u32 $ofs2, $ofs1, 0x00000300;
	mov.u32 $r38, $ofs2;
	mov.u32 $r18, $r124;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r16, s[$ofs2+0x0000];
	mov.half.u32 $r19, s[$ofs1+0x0000];
	shl.b32 $ofs2, $r41, 0x0;
	mov.half.u32 $r40, s[$ofs2+0x0000];
	mov.half.u32 $r43, s[$ofs2+0x0000];
	add.u32 $r2, $r2, 0x5a827999;
	mov.u32 $r3, s[$ofs1+0x0000];
	xor.b32 $r14, $r42, $r13;
	xor.b32 $r21, s[$ofs1+0x0000], $r22;
	shl.u32 $r25, $r2, 0x00000005;
	@$p0.ne shr.u32 $r18, $r2, 0x0000001b;
	and.b32 $r14, $r23, $r14;
	mov.u32 s[$ofs1+0x0180], $r24;
	or.b32 $r18, $r25, $r18;
	xor.b32 $r25, $r42, $r14;
	shl.b32 $ofs2, $r38, 0x0;
	mov.u32 $r14, s[$ofs2+0x0000];
	add.u32 $ofs3, $ofs1, 0x00000600;
	add.u32 $r18, $r18, $r25;
	xor.b32 $r14, $r0, $r14;
	xor.b32 $r0, s[$ofs3+0x0000], $r17;
	add.u32 $r18, $r24, $r18;
	xor.b32 $r14, $r0, $r14;
	mov.u32 $r0, $r124;
	add.u32 $r18, $r15, $r18;
	mov.u32 $r15, $r124;
	@$p0.ne shr.u32 $r0, $r14, 0x0000001f;
	shl.u32 $r14, $r14, 0x00000001;
	@$p0.ne shr.u32 $r15, $r23, 0x00000002;
	shl.u32 $r23, $r23, 0x0000001e;
	or.b32 $r26, $r0, $r14;
	add.u32 $r14, $r18, 0x5a827999;
	mov.u32 $r18, $r124;
	or.b32 $r44, $r23, $r15;
	mov.u32 $r25, s[$ofs2+0x0000];
	shl.u32 $r15, $r14, 0x00000005;
	@$p0.ne shr.u32 $r18, $r14, 0x0000001b;
	mov.u32 $r23, s[$ofs3+0x0000];
	xor.b32 $r0, $r2, $r44;
	mov.u32 $r27, s[$ofs3+0x0000];
	or.b32 $r15, $r15, $r18;
	add.u32 $ofs2, $ofs1, 0x00000380;
	mov.u32 $r39, $ofs2;
	xor.b32 $r0, $r13, $r0;
	mov.u32 s[$ofs1+0x0200], $r26;
	add.half.u32 $r15, $r15, $r0;
	mov.half.u32 $r0, s[$ofs2+0x0000];
	add.u32 $ofs4, $ofs1, 0x00000680;
	mov.u32 $r18, $r124;
	xor.b32 $r0, $r16, $r0;
	xor.b32 $r16, s[$ofs4+0x0000], $r22;
	@$p0.ne shr.u32 $r18, $r2, 0x00000002;
	add.u32 $r15, $r26, $r15;
	shl.u32 $r2, $r2, 0x0000001e;
	xor.b32 $r16, $r16, $r0;
	mov.u32 $r0, $r124;
	add.u32 $r15, $r42, $r15;
	or.b32 $r42, $r2, $r18;
	mov.u32 $r2, $r124;
	@$p0.ne shr.u32 $r0, $r16, 0x0000001f;
	add.u32 $r15, $r15, 0x6ed9eba1;
	shl.u32 $r16, $r16, 0x00000001;
	shl.u32 $r18, $r15, 0x00000005;
	@$p0.ne shr.u32 $r2, $r15, 0x0000001b;
	or.b32 $r16, $r0, $r16;
	xor.b32 $r0, $r14, $r42;
	or.b32 $r2, $r18, $r2;
	mov.u32 $r18, s[$ofs2+0x0000];
	xor.b32 $r0, $r44, $r0;
	xor.b32 $r46, $r28, $r40;
	xor.b32 $r18, $r28, $r18;
	add.u32 $r0, $r2, $r0;
	mov.u32 $r28, s[$ofs4+0x0000];
	mov.u32 $r2, s[$ofs4+0x0000];
	add.u32 $ofs2, $ofs1, 0x00000400;
	mov.u32 $r40, $ofs2;
	add.u32 $r0, $r16, $r0;
	mov.u32 s[$ofs1+0x0280], $r16;
	add.half.u32 $r0, $r13, $r0;
	mov.half.u32 $r13, s[$ofs2+0x0000];
	xor.b32 $r25, $r25, $r13;
	xor.b32 $r13, $r6, $r24;
	xor.b32 $r25, $r13, $r25;
	mov.u32 $r13, $r124;
	@$p0.ne shr.u32 $r13, $r25, 0x0000001f;
	shl.u32 $r25, $r25, 0x00000001;
	or.b32 $r13, $r13, $r25;
	xor.b32 $r25, $r17, $r13;
	mov.u32 $r17, s[$ofs2+0x0000];
	xor.b32 $r25, $r25, $r46;
	xor.b32 $r19, $r19, $r16;
	xor.b32 $r17, $r45, $r17;
	mov.u32 $r46, $r124;
	xor.b32 $r19, $r19, $r17;
	@$p0.ne shr.u32 $r46, $r14, 0x00000002;
	shl.u32 $r17, $r14, 0x0000001e;
	add.u32 $r14, $r0, 0x6ed9eba1;
	mov.u32 $r0, $r124;
	or.b32 $r46, $r17, $r46;
	shl.u32 $r17, $r14, 0x00000005;
	@$p0.ne shr.u32 $r0, $r14, 0x0000001b;
	or.b32 $r17, $r17, $r0;
	xor.b32 $r0, $r46, $r15;
	xor.b32 $r0, $r42, $r0;
	add.u32 $r0, $r17, $r0;
	xor.b32 $r17, $r12, $r26;
	add.u32 $r0, $r13, $r0;
	xor.b32 $r18, $r17, $r18;
	mov.u32 $r17, $r124;
	add.u32 $r0, $r44, $r0;
	mov.u32 $r44, $r124;
	@$p0.ne shr.u32 $r17, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r17, $r17, $r18;
	@$p0.ne shr.u32 $r44, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	add.u32 $r18, $r0, 0x6ed9eba1;
	mov.u32 $r0, $r124;
	or.b32 $r44, $r15, $r44;
	shl.u32 $r15, $r18, 0x00000005;
	@$p0.ne shr.u32 $r0, $r18, 0x0000001b;
	or.b32 $r15, $r15, $r0;
	xor.b32 $r0, $r14, $r44;
	xor.b32 $r0, $r46, $r0;
	add.half.u32 $r0, $r15, $r0;
	add.half.u32 $r0, $r17, $r0;
	mov.u32 $r15, $r124;
	add.u32 $r0, $r42, $r0;
	mov.u32 $r42, $r124;
	@$p0.ne shr.u32 $r15, $r19, 0x0000001f;
	shl.u32 $r19, $r19, 0x00000001;
	or.b32 $r15, $r15, $r19;
	@$p0.ne shr.u32 $r42, $r14, 0x00000002;
	shl.u32 $r14, $r14, 0x0000001e;
	add.u32 $r19, $r0, 0x6ed9eba1;
	mov.u32 $r0, $r124;
	or.b32 $r42, $r14, $r42;
	shl.u32 $r14, $r19, 0x00000005;
	@$p0.ne shr.u32 $r0, $r19, 0x0000001b;
	or.b32 $r14, $r14, $r0;
	xor.b32 $r0, $r18, $r42;
	xor.b32 $r0, $r44, $r0;
	add.half.u32 $r0, $r14, $r0;
	add.half.u32 $r0, $r15, $r0;
	mov.u32 $r14, $r124;
	add.u32 $r0, $r46, $r0;
	mov.u32 $r46, $r124;
	@$p0.ne shr.u32 $r14, $r25, 0x0000001f;
	shl.u32 $r25, $r25, 0x00000001;
	or.b32 $r14, $r14, $r25;
	@$p0.ne shr.u32 $r46, $r18, 0x00000002;
	shl.u32 $r25, $r18, 0x0000001e;
	add.u32 $r18, $r0, 0x6ed9eba1;
	mov.u32 $r0, $r124;
	or.b32 $r25, $r25, $r46;
	shl.u32 $r46, $r18, 0x00000005;
	@$p0.ne shr.u32 $r0, $r18, 0x0000001b;
	or.b32 $r46, $r46, $r0;
	xor.b32 $r0, $r19, $r25;
	xor.b32 $r0, $r42, $r0;
	add.half.u32 $r0, $r46, $r0;
	add.half.u32 $r0, $r14, $r0;
	xor.b32 $r23, $r45, $r23;
	xor.b32 $r22, $r22, $r17;
	add.u32 $r0, $r44, $r0;
	mov.u32 $r46, $r124;
	xor.b32 $r45, $r22, $r23;
	add.u32 $r0, $r0, 0x6ed9eba1;
	mov.u32 $r22, $r124;
	@$p0.ne shr.u32 $r46, $r19, 0x00000002;
	shl.u32 $r23, $r19, 0x0000001e;
	shl.u32 $r44, $r0, 0x00000005;
	@$p0.ne shr.u32 $r22, $r0, 0x0000001b;
	mov.u32 $r19, $r124;
	or.b32 $r23, $r23, $r46;
	or.b32 $r44, $r44, $r22;
	@$p0.ne shr.u32 $r19, $r45, 0x0000001f;
	xor.b32 $r22, $r18, $r23;
	shl.u32 $r45, $r45, 0x00000001;
	xor.b32 $r22, $r25, $r22;
	or.b32 $r19, $r19, $r45;
	add.half.u32 $r22, $r44, $r22;
	add.half.u32 $r22, $r19, $r22;
	xor.b32 $r28, $r43, $r28;
	xor.b32 $r24, $r24, $r15;
	add.u32 $r22, $r42, $r22;
	mov.u32 $r44, $r124;
	xor.b32 $r43, $r24, $r28;
	add.u32 $r24, $r22, 0x6ed9eba1;
	mov.u32 $r42, $r124;
	@$p0.ne shr.u32 $r44, $r18, 0x00000002;
	shl.u32 $r22, $r18, 0x0000001e;
	shl.u32 $r28, $r24, 0x00000005;
	@$p0.ne shr.u32 $r42, $r24, 0x0000001b;
	mov.u32 $r18, $r124;
	or.b32 $r22, $r22, $r44;
	or.b32 $r42, $r28, $r42;
	@$p0.ne shr.u32 $r18, $r43, 0x0000001f;
	xor.b32 $r28, $r22, $r0;
	shl.u32 $r43, $r43, 0x00000001;
	xor.b32 $r28, $r23, $r28;
	or.b32 $r18, $r18, $r43;
	add.half.u32 $r28, $r42, $r28;
	add.half.u32 $r28, $r18, $r28;
	xor.b32 $r27, $r6, $r27;
	xor.b32 $r26, $r26, $r14;
	add.u32 $r25, $r25, $r28;
	mov.u32 $r43, $r124;
	xor.b32 $r42, $r26, $r27;
	add.u32 $r25, $r25, 0x6ed9eba1;
	mov.u32 $r28, $r124;
	@$p0.ne shr.u32 $r43, $r0, 0x00000002;
	shl.u32 $r27, $r0, 0x0000001e;
	shl.u32 $r26, $r25, 0x00000005;
	@$p0.ne shr.u32 $r28, $r25, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r27, $r27, $r43;
	or.b32 $r26, $r26, $r28;
	@$p0.ne shr.u32 $r0, $r42, 0x0000001f;
	xor.b32 $r28, $r24, $r27;
	shl.u32 $r42, $r42, 0x00000001;
	xor.b32 $r28, $r22, $r28;
	or.b32 $r0, $r0, $r42;
	add.half.u32 $r26, $r26, $r28;
	add.half.u32 $r26, $r0, $r26;
	xor.b32 $r2, $r12, $r2;
	xor.b32 $r12, $r16, $r19;
	add.u32 $r16, $r23, $r26;
	mov.u32 $r26, $r124;
	xor.b32 $r2, $r12, $r2;
	add.u32 $r23, $r16, 0x6ed9eba1;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r26, $r24, 0x00000002;
	shl.u32 $r28, $r24, 0x0000001e;
	shl.u32 $r24, $r23, 0x00000005;
	@$p0.ne shr.u32 $r16, $r23, 0x0000001b;
	mov.u32 $r12, $r124;
	or.b32 $r26, $r28, $r26;
	or.b32 $r16, $r24, $r16;
	@$p0.ne shr.u32 $r12, $r2, 0x0000001f;
	xor.b32 $r24, $r25, $r26;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r24, $r27, $r24;
	or.b32 $r2, $r12, $r2;
	add.u32 $r12, $r16, $r24;
	xor.b32 $r16, $r6, $r3;
	xor.b32 $r3, $r13, $r18;
	add.u32 $r6, $r2, $r12;
	mov.u32 s[$ofs1+0x0300], $r13;
	xor.b32 $r3, $r3, $r16;
	add.u32 $r6, $r22, $r6;
	mov.u32 s[$ofs1+0x0380], $r17;
	mov.u32 $r16, $r124;
	mov.u32 $r12, $r124;
	add.u32 $r13, $r6, 0x6ed9eba1;
	mov.u32 s[$ofs1+0x0400], $r15;
	@$p0.ne shr.u32 $r16, $r25, 0x00000002;
	shl.u32 $r24, $r25, 0x0000001e;
	shl.u32 $r22, $r13, 0x00000005;
	@$p0.ne shr.u32 $r12, $r13, 0x0000001b;
	mov.u32 $r6, $r124;
	or.b32 $r16, $r24, $r16;
	mov.u32 s[$ofs1+0x0480], $r14;
	or.b32 $r12, $r22, $r12;
	@$p0.ne shr.u32 $r6, $r3, 0x0000001f;
	xor.b32 $r14, $r23, $r16;
	shl.u32 $r3, $r3, 0x00000001;
	xor.b32 $r14, $r26, $r14;
	or.b32 $r3, $r6, $r3;
	add.u32 $r6, $r12, $r14;
	mov.u32 s[$ofs1+0x0500], $r19;
	add.u32 $r6, $r3, $r6;
	mov.u32 s[$ofs1+0x0580], $r18;
	mov.u32 $r14, $r124;
	add.u32 $r12, $r27, $r6;
	xor.b32 $r6, $r17, $r0;
	mov.u32 s[$ofs1+0x0600], $r0;
	@$p0.ne shr.u32 $r14, $r23, 0x00000002;
	shl.u32 $r0, $r23, 0x0000001e;
	add.u32 $r12, $r12, 0x6ed9eba1;
	mov.u32 $r17, $r124;
	xor.b32 $r6, $r20, $r6;
	or.b32 $r19, $r0, $r14;
	shl.u32 $r18, $r12, 0x00000005;
	@$p0.ne shr.u32 $r17, $r12, 0x0000001b;
	mov.u32 $r0, $r124;
	xor.b32 $r14, $r15, $r2;
	mov.u32 s[$ofs1+0x0680], $r2;
	or.b32 $r2, $r18, $r17;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	xor.b32 $r15, $r13, $r19;
	shl.u32 $r6, $r6, 0x00000001;
	xor.b32 $r15, $r16, $r15;
	or.b32 $r0, $r0, $r6;
	mov.u32 $r6, $r124;
	add.u32 $r15, $r2, $r15;
	xor.b32 $r2, $r21, $r14;
	mov.u32 s[$ofs1+0x0700], $r3;
	@$p0.ne shr.u32 $r6, $r13, 0x00000002;
	add.u32 $r14, $r0, $r15;
	shl.u32 $r3, $r13, 0x0000001e;
	mov.u32 s[$ofs1+0x0780], $r0;
	mov.u32 $r0, $r124;
	add.u32 $r13, $r26, $r14;
	or.b32 $r18, $r3, $r6;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	add.u32 $r6, $r13, 0x6ed9eba1;
	or.b32 $r13, $r0, $r2;
	shl.u32 $r0, $r6, 0x00000005;
	@$p0.ne shr.u32 $r3, $r6, 0x0000001b;
	xor.b32 $r2, $r18, $r12;
	mov.u32 s[$ofs1+0x0000], $r13;
	or.b32 $r3, $r0, $r3;
	xor.b32 $r14, $r19, $r2;
	shl.b32 $ofs2, $r29, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.half.u32 $r2, s[$ofs2+0x0000];
	add.half.u32 $r3, $r3, $r14;
	shl.b32 $ofs2, $r32, 0x0;
	xor.b32 $r0, s[$ofs2+0x0000], $r0;
	shl.b32 $ofs2, $r30, 0x0;
	xor.b32 $r2, s[$ofs2+0x0000], $r2;
	add.u32 $r3, $r13, $r3;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r14, $r16, $r3;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	@$p0.ne shr.u32 $r3, $r12, 0x00000002;
	shl.u32 $r12, $r12, 0x0000001e;
	or.b32 $r17, $r0, $r2;
	or.b32 $r13, $r12, $r3;
	mov.u32 $r0, $r124;
	add.u32 $r14, $r14, 0x6ed9eba1;
	shl.b32 $ofs2, $r29, 0x0;
	mov.u32 $r12, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.u32 $r3, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r30, 0x0;
	mov.u32 $r28, s[$ofs2+0x0000];
	shl.u32 $r2, $r14, 0x00000005;
	@$p0.ne shr.u32 $r0, $r14, 0x0000001b;
	xor.b32 $r16, $r6, $r13;
	mov.u32 s[$ofs1+0x0080], $r17;
	or.b32 $r15, $r2, $r0;
	xor.b32 $r16, $r18, $r16;
	shl.b32 $ofs2, $r33, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	mov.half.u32 $r2, s[$ofs2+0x0000];
	add.half.u32 $r15, $r15, $r16;
	shl.b32 $ofs2, $r36, 0x0;
	xor.b32 $r0, s[$ofs2+0x0000], $r0;
	shl.b32 $ofs2, $r34, 0x0;
	xor.b32 $r2, s[$ofs2+0x0000], $r2;
	add.u32 $r15, $r17, $r15;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r15, $r19, $r15;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	@$p0.ne shr.u32 $r16, $r6, 0x00000002;
	shl.u32 $r6, $r6, 0x0000001e;
	or.b32 $r44, $r0, $r2;
	or.b32 $r43, $r6, $r16;
	mov.u32 $r0, $r124;
	shl.b32 $ofs2, $r33, 0x0;
	mov.u32 $r16, s[$ofs2+0x0000];
	add.u32 $r15, $r15, 0x6ed9eba1;
	shl.b32 $ofs2, $r35, 0x0;
	mov.u32 $r6, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r34, 0x0;
	mov.u32 $r26, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	xor.b32 $r20, s[$ofs2+0x0000], $r17;
	shl.u32 $r19, $r15, 0x00000005;
	@$p0.ne shr.u32 $r0, $r15, 0x0000001b;
	xor.b32 $r2, $r14, $r43;
	mov.u32 s[$ofs1+0x0100], $r44;
	or.b32 $r21, $r19, $r0;
	xor.b32 $r19, $r13, $r2;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r2, s[$ofs2+0x0000];
	mov.half.u32 $r0, s[$ofs1+0x0000];
	add.u32 $r19, $r21, $r19;
	xor.b32 $r2, $r12, $r2;
	shl.b32 $ofs2, $r41, 0x0;
	xor.b32 $r12, s[$ofs2+0x0000], $r0;
	add.u32 $r0, $r44, $r19;
	xor.b32 $r12, $r2, $r12;
	mov.u32 $r2, $r124;
	add.u32 $r0, $r18, $r0;
	mov.u32 $r18, $r124;
	@$p0.ne shr.u32 $r2, $r12, 0x0000001f;
	shl.u32 $r12, $r12, 0x00000001;
	@$p0.ne shr.u32 $r18, $r14, 0x00000002;
	shl.u32 $r14, $r14, 0x0000001e;
	or.b32 $r22, $r2, $r12;
	or.b32 $r18, $r14, $r18;
	mov.u32 $r25, $r124;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r21, s[$ofs2+0x0000];
	mov.half.u32 $r23, s[$ofs1+0x0000];
	shl.b32 $ofs2, $r41, 0x0;
	mov.u32 $r24, s[$ofs2+0x0000];
	add.u32 $r14, $r0, 0x6ed9eba1;
	mov.half.u32 $r42, s[$ofs2+0x0000];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	xor.b32 $r19, s[$ofs1+0x0000], $r44;
	shl.u32 $r12, $r14, 0x00000005;
	@$p0.ne shr.u32 $r25, $r14, 0x0000001b;
	xor.b32 $r0, $r15, $r18;
	mov.u32 s[$ofs1+0x0180], $r22;
	or.b32 $r25, $r12, $r25;
	xor.b32 $r0, $r43, $r0;
	shl.b32 $ofs2, $r38, 0x0;
	mov.half.u32 $r12, s[$ofs2+0x0000];
	add.half.u32 $r0, $r25, $r0;
	xor.b32 $r12, $r16, $r12;
	xor.b32 $r16, s[$ofs3+0x0000], $r17;
	add.u32 $r0, $r22, $r0;
	xor.b32 $r16, $r16, $r12;
	mov.u32 $r12, $r124;
	add.u32 $r0, $r13, $r0;
	mov.u32 $r13, $r124;
	@$p0.ne shr.u32 $r12, $r16, 0x0000001f;
	shl.u32 $r16, $r16, 0x00000001;
	@$p0.ne shr.u32 $r13, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	or.b32 $r12, $r12, $r16;
	or.b32 $r27, $r15, $r13;
	add.u32 $r16, $r0, 0x6ed9eba1;
	mov.u32 $r25, $r124;
	mov.half.u32 $r45, s[$ofs2+0x0000];
	mov.half.u32 $r46, s[$ofs3+0x0000];
	shl.u32 $r15, $r16, 0x00000005;
	@$p0.ne shr.u32 $r25, $r16, 0x0000001b;
	mov.u32 $r13, s[$ofs3+0x0000];
	xor.b32 $r0, $r14, $r27;
	or.b32 $r25, $r15, $r25;
	mov.u32 s[$ofs1+0x0200], $r12;
	xor.b32 $r15, $r18, $r0;
	shl.b32 $ofs2, $r39, 0x0;
	mov.half.u32 $r0, s[$ofs2+0x0000];
	add.half.u32 $r15, $r25, $r15;
	mov.u32 $r25, $r124;
	xor.b32 $r21, $r21, $r0;
	xor.b32 $r0, s[$ofs4+0x0000], $r44;
	@$p0.ne shr.u32 $r25, $r14, 0x00000002;
	add.u32 $r15, $r12, $r15;
	shl.u32 $r14, $r14, 0x0000001e;
	xor.b32 $r21, $r0, $r21;
	mov.u32 $r0, $r124;
	add.u32 $r15, $r43, $r15;
	or.b32 $r43, $r14, $r25;
	mov.u32 $r14, $r124;
	@$p0.ne shr.u32 $r0, $r21, 0x0000001f;
	add.u32 $r15, $r15, 0x6ed9eba1;
	shl.u32 $r25, $r21, 0x00000001;
	shl.u32 $r21, $r15, 0x00000005;
	@$p0.ne shr.u32 $r14, $r15, 0x0000001b;
	or.b32 $r25, $r0, $r25;
	xor.b32 $r0, $r43, $r16;
	or.b32 $r14, $r21, $r14;
	mov.u32 $r21, s[$ofs2+0x0000];
	xor.b32 $r0, $r27, $r0;
	xor.b32 $r24, $r28, $r24;
	xor.b32 $r21, $r28, $r21;
	add.u32 $r14, $r14, $r0;
	mov.u32 $r28, s[$ofs4+0x0000];
	mov.u32 $r0, s[$ofs4+0x0000];
	add.u32 $r14, $r25, $r14;
	mov.u32 s[$ofs1+0x0280], $r25;
	add.u32 $r14, $r18, $r14;
	shl.b32 $ofs2, $r40, 0x0;
	mov.u32 $r18, s[$ofs2+0x0000];
	xor.b32 $r45, $r45, $r18;
	xor.b32 $r18, $r3, $r22;
	xor.b32 $r45, $r18, $r45;
	mov.u32 $r18, $r124;
	@$p0.ne shr.u32 $r18, $r45, 0x0000001f;
	shl.u32 $r45, $r45, 0x00000001;
	or.b32 $r18, $r18, $r45;
	xor.b32 $r17, $r17, $r18;
	xor.b32 $r24, $r17, $r24;
	mov.u32 $r17, s[$ofs2+0x0000];
	mov.u32 $r45, $r124;
	xor.b32 $r46, $r26, $r46;
	xor.b32 $r26, $r26, $r17;
	@$p0.ne shr.u32 $r45, $r16, 0x00000002;
	shl.u32 $r17, $r16, 0x0000001e;
	add.u32 $r16, $r14, 0x6ed9eba1;
	mov.u32 $r14, $r124;
	or.b32 $r45, $r17, $r45;
	shl.u32 $r17, $r16, 0x00000005;
	@$p0.ne shr.u32 $r14, $r16, 0x0000001b;
	or.b32 $r17, $r17, $r14;
	xor.b32 $r14, $r15, $r45;
	xor.b32 $r14, $r43, $r14;
	add.u32 $r14, $r17, $r14;
	xor.b32 $r17, $r6, $r12;
	add.u32 $r14, $r18, $r14;
	xor.b32 $r21, $r17, $r21;
	mov.u32 $r17, $r124;
	add.u32 $r14, $r27, $r14;
	mov.u32 $r27, $r124;
	@$p0.ne shr.u32 $r17, $r21, 0x0000001f;
	shl.u32 $r21, $r21, 0x00000001;
	or.b32 $r17, $r17, $r21;
	@$p0.ne shr.u32 $r27, $r15, 0x00000002;
	shl.u32 $r21, $r15, 0x0000001e;
	add.u32 $r14, $r14, 0x6ed9eba1;
	mov.u32 $r15, $r124;
	or.b32 $r21, $r21, $r27;
	shl.u32 $r27, $r14, 0x00000005;
	@$p0.ne shr.u32 $r15, $r14, 0x0000001b;
	or.b32 $r27, $r27, $r15;
	xor.b32 $r15, $r16, $r21;
	xor.b32 $r15, $r45, $r15;
	add.u32 $r15, $r27, $r15;
	xor.b32 $r23, $r23, $r25;
	mov.u32 $r27, $r124;
	xor.b32 $r23, $r23, $r26;
	@$p0.ne shr.u32 $r27, $r16, 0x00000002;
	add.u32 $r15, $r17, $r15;
	shl.u32 $r26, $r16, 0x0000001e;
	mov.u32 $r16, $r124;
	add.u32 $r15, $r43, $r15;
	or.b32 $r43, $r26, $r27;
	@$p0.ne shr.u32 $r16, $r23, 0x0000001f;
	shl.u32 $r26, $r23, 0x00000001;
	or.b32 $r23, $r14, $r43;
	or.b32 $r16, $r16, $r26;
	and.b32 $r27, $r14, $r43;
	and.b32 $r26, $r21, $r23;
	add.u32 $r23, $r15, 0x6ed9eba1;
	mov.u32 $r15, $r124;
	or.b32 $r26, $r26, $r27;
	shl.u32 $r27, $r23, 0x00000005;
	@$p0.ne shr.u32 $r15, $r23, 0x0000001b;
	or.b32 $r15, $r27, $r15;
	mov.u32 $r27, $r124;
	add.u32 $r15, $r26, $r15;
	@$p0.ne shr.u32 $r27, $r14, 0x00000002;
	add.u32 $r15, $r16, $r15;
	shl.u32 $r26, $r14, 0x0000001e;
	mov.u32 $r14, $r124;
	add.u32 $r15, $r45, $r15;
	or.b32 $r27, $r26, $r27;
	@$p0.ne shr.u32 $r14, $r24, 0x0000001f;
	shl.u32 $r26, $r24, 0x00000001;
	or.b32 $r24, $r23, $r27;
	or.b32 $r14, $r14, $r26;
	and.b32 $r45, $r23, $r27;
	and.b32 $r26, $r43, $r24;
	add.u32 $r24, $r15, 0x8f1bbcdc;
	mov.u32 $r15, $r124;
	or.b32 $r45, $r26, $r45;
	shl.u32 $r26, $r24, 0x00000005;
	@$p0.ne shr.u32 $r15, $r24, 0x0000001b;
	or.b32 $r15, $r26, $r15;
	mov.u32 $r26, $r124;
	add.u32 $r15, $r45, $r15;
	@$p0.ne shr.u32 $r26, $r23, 0x00000002;
	shl.u32 $r23, $r23, 0x0000001e;
	add.u32 $r15, $r14, $r15;
	or.b32 $r26, $r23, $r26;
	add.u32 $r21, $r21, $r15;
	mov.u32 $r15, $r124;
	or.b32 $r23, $r26, $r24;
	xor.b32 $r44, $r44, $r17;
	add.u32 $r21, $r21, 0x8f1bbcdc;
	and.b32 $r45, $r26, $r24;
	and.b32 $r23, $r27, $r23;
	xor.b32 $r46, $r44, $r46;
	shl.u32 $r44, $r21, 0x00000005;
	@$p0.ne shr.u32 $r15, $r21, 0x0000001b;
	or.b32 $r45, $r23, $r45;
	mov.u32 $r23, $r124;
	or.b32 $r15, $r44, $r15;
	mov.u32 $r44, $r124;
	@$p0.ne shr.u32 $r23, $r46, 0x0000001f;
	shl.u32 $r46, $r46, 0x00000001;
	or.b32 $r23, $r23, $r46;
	add.u32 $r15, $r45, $r15;
	@$p0.ne shr.u32 $r44, $r24, 0x00000002;
	shl.u32 $r24, $r24, 0x0000001e;
	add.u32 $r15, $r23, $r15;
	or.b32 $r24, $r24, $r44;
	add.u32 $r15, $r43, $r15;
	xor.b32 $r44, $r42, $r28;
	mov.u32 $r28, $r124;
	or.b32 $r42, $r24, $r21;
	add.u32 $r15, $r15, 0x8f1bbcdc;
	xor.b32 $r22, $r22, $r16;
	and.b32 $r45, $r24, $r21;
	and.b32 $r43, $r26, $r42;
	shl.u32 $r42, $r15, 0x00000005;
	@$p0.ne shr.u32 $r28, $r15, 0x0000001b;
	xor.b32 $r44, $r22, $r44;
	mov.u32 $r22, $r124;
	or.b32 $r43, $r45, $r43;
	or.b32 $r28, $r42, $r28;
	mov.u32 $r42, $r124;
	@$p0.ne shr.u32 $r22, $r44, 0x0000001f;
	shl.u32 $r44, $r44, 0x00000001;
	or.b32 $r22, $r22, $r44;
	add.u32 $r28, $r43, $r28;
	@$p0.ne shr.u32 $r42, $r21, 0x00000002;
	shl.u32 $r21, $r21, 0x0000001e;
	add.u32 $r28, $r22, $r28;
	or.b32 $r21, $r21, $r42;
	add.u32 $r27, $r27, $r28;
	mov.u32 $r28, $r124;
	xor.b32 $r43, $r3, $r13;
	or.b32 $r13, $r21, $r15;
	add.u32 $r27, $r27, 0x8f1bbcdc;
	xor.b32 $r12, $r12, $r14;
	and.b32 $r42, $r21, $r15;
	and.b32 $r44, $r24, $r13;
	shl.u32 $r13, $r27, 0x00000005;
	@$p0.ne shr.u32 $r28, $r27, 0x0000001b;
	xor.b32 $r43, $r12, $r43;
	mov.u32 $r12, $r124;
	or.b32 $r42, $r44, $r42;
	or.b32 $r28, $r13, $r28;
	mov.u32 $r13, $r124;
	@$p0.ne shr.u32 $r12, $r43, 0x0000001f;
	shl.u32 $r43, $r43, 0x00000001;
	or.b32 $r12, $r12, $r43;
	add.u32 $r28, $r42, $r28;
	@$p0.ne shr.u32 $r13, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	add.u32 $r28, $r12, $r28;
	or.b32 $r13, $r15, $r13;
	xor.b32 $r0, $r6, $r0;
	add.u32 $r28, $r26, $r28;
	mov.u32 $r6, $r124;
	or.b32 $r15, $r27, $r13;
	xor.b32 $r26, $r25, $r23;
	add.u32 $r25, $r28, 0x8f1bbcdc;
	and.b32 $r28, $r27, $r13;
	and.b32 $r15, $r21, $r15;
	xor.b32 $r0, $r26, $r0;
	shl.u32 $r26, $r25, 0x00000005;
	@$p0.ne shr.u32 $r6, $r25, 0x0000001b;
	or.b32 $r28, $r15, $r28;
	mov.u32 $r15, $r124;
	mov.u32 s[$ofs1+0x0300], $r18;
	or.b32 $r26, $r26, $r6;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r15, $r0, 0x0000001f;
	mov.u32 s[$ofs1+0x0380], $r17;
	shl.u32 $r0, $r0, 0x00000001;
	or.b32 $r0, $r15, $r0;
	add.u32 $r15, $r28, $r26;
	mov.u32 s[$ofs1+0x0400], $r16;
	@$p0.ne shr.u32 $r6, $r27, 0x00000002;
	shl.u32 $r26, $r27, 0x0000001e;
	add.u32 $r15, $r0, $r15;
	mov.u32 s[$ofs1+0x0480], $r14;
	xor.b32 $r2, $r3, $r2;
	or.b32 $r3, $r26, $r6;
	add.u32 $r14, $r24, $r15;
	mov.u32 s[$ofs1+0x0500], $r23;
	mov.u32 $r6, $r124;
	or.b32 $r15, $r25, $r3;
	add.u32 $r14, $r14, 0x8f1bbcdc;
	xor.b32 $r24, $r18, $r22;
	and.b32 $r18, $r25, $r3;
	and.b32 $r15, $r13, $r15;
	shl.u32 $r23, $r14, 0x00000005;
	@$p0.ne shr.u32 $r6, $r14, 0x0000001b;
	xor.b32 $r24, $r24, $r2;
	mov.u32 $r2, $r124;
	or.b32 $r15, $r15, $r18;
	or.b32 $r18, $r23, $r6;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r2, $r24, 0x0000001f;
	shl.u32 $r23, $r24, 0x00000001;
	or.b32 $r2, $r2, $r23;
	add.u32 $r15, $r15, $r18;
	mov.u32 s[$ofs1+0x0580], $r22;
	@$p0.ne shr.u32 $r6, $r25, 0x00000002;
	shl.u32 $r18, $r25, 0x0000001e;
	add.u32 $r22, $r2, $r15;
	xor.b32 $r15, $r17, $r12;
	mov.u32 s[$ofs1+0x0600], $r12;
	or.b32 $r6, $r18, $r6;
	add.u32 $r17, $r21, $r22;
	xor.b32 $r15, $r20, $r15;
	mov.u32 $r12, $r124;
	or.b32 $r20, $r6, $r14;
	add.u32 $r17, $r17, 0x8f1bbcdc;
	mov.u32 $r18, $r124;
	and.b32 $r21, $r6, $r14;
	and.b32 $r20, $r3, $r20;
	shl.u32 $r22, $r17, 0x00000005;
	@$p0.ne shr.u32 $r18, $r17, 0x0000001b;
	xor.b32 $r16, $r16, $r0;
	mov.u32 s[$ofs1+0x0680], $r0;
	or.b32 $r0, $r20, $r21;
	or.b32 $r20, $r22, $r18;
	@$p0.ne shr.u32 $r12, $r15, 0x0000001f;
	shl.u32 $r15, $r15, 0x00000001;
	or.b32 $r18, $r12, $r15;
	mov.u32 $r15, $r124;
	add.u32 $r0, $r0, $r20;
	xor.b32 $r12, $r19, $r16;
	mov.u32 s[$ofs1+0x0700], $r2;
	@$p0.ne shr.u32 $r15, $r14, 0x00000002;
	add.u32 $r16, $r18, $r0;
	shl.u32 $r2, $r14, 0x0000001e;
	mov.u32 $r0, $r124;
	mov.u32 s[$ofs1+0x0780], $r18;
	add.u32 $r16, $r13, $r16;
	or.b32 $r14, $r2, $r15;
	@$p0.ne shr.u32 $r0, $r12, 0x0000001f;
	shl.u32 $r2, $r12, 0x00000001;
	or.b32 $r13, $r0, $r2;
	or.b32 $r15, $r14, $r17;
	add.u32 $r12, $r16, 0x8f1bbcdc;
	mov.u32 $r0, $r124;
	and.b32 $r2, $r14, $r17;
	and.b32 $r15, $r6, $r15;
	shl.u32 $r16, $r12, 0x00000005;
	@$p0.ne shr.u32 $r0, $r12, 0x0000001b;
	mov.u32 s[$ofs1+0x0000], $r13;
	or.b32 $r15, $r2, $r15;
	or.b32 $r16, $r16, $r0;
	shl.b32 $ofs2, $r29, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.half.u32 $r2, s[$ofs2+0x0000];
	add.half.u32 $r15, $r15, $r16;
	shl.b32 $ofs2, $r32, 0x0;
	xor.b32 $r0, s[$ofs2+0x0000], $r0;
	shl.b32 $ofs2, $r30, 0x0;
	xor.b32 $r2, s[$ofs2+0x0000], $r2;
	add.u32 $r13, $r13, $r15;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r3, $r3, $r13;
	mov.u32 $r13, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	@$p0.ne shr.u32 $r13, $r17, 0x00000002;
	shl.u32 $r15, $r17, 0x0000001e;
	or.b32 $r43, $r0, $r2;
	or.b32 $r23, $r15, $r13;
	mov.u32 $r2, $r124;
	shl.b32 $ofs2, $r29, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.u32 $r45, s[$ofs2+0x0000];
	or.b32 $r13, $r23, $r12;
	add.u32 $r15, $r3, 0x8f1bbcdc;
	shl.b32 $ofs2, $r30, 0x0;
	mov.u32 $r46, s[$ofs2+0x0000];
	and.b32 $r16, $r23, $r12;
	and.b32 $r3, $r14, $r13;
	shl.u32 $r17, $r15, 0x00000005;
	@$p0.ne shr.u32 $r2, $r15, 0x0000001b;
	mov.u32 s[$ofs1+0x0080], $r43;
	or.b32 $r13, $r3, $r16;
	or.b32 $r16, $r17, $r2;
	shl.b32 $ofs2, $r33, 0x0;
	mov.u32 $r2, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	mov.half.u32 $r3, s[$ofs2+0x0000];
	add.half.u32 $r13, $r13, $r16;
	shl.b32 $ofs2, $r36, 0x0;
	xor.b32 $r2, s[$ofs2+0x0000], $r2;
	shl.b32 $ofs2, $r34, 0x0;
	xor.b32 $r3, s[$ofs2+0x0000], $r3;
	add.u32 $r13, $r43, $r13;
	xor.b32 $r3, $r2, $r3;
	mov.u32 $r2, $r124;
	add.u32 $r18, $r6, $r13;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r2, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	@$p0.ne shr.u32 $r6, $r12, 0x00000002;
	shl.u32 $r13, $r12, 0x0000001e;
	or.b32 $r12, $r2, $r3;
	or.b32 $r24, $r13, $r6;
	mov.u32 $r6, $r124;
	shl.b32 $ofs2, $r33, 0x0;
	mov.u32 $r16, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r35, 0x0;
	mov.u32 $r3, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r34, 0x0;
	mov.u32 $r17, s[$ofs2+0x0000];
	or.b32 $r13, $r15, $r24;
	add.u32 $r2, $r18, 0x8f1bbcdc;
	shl.b32 $ofs2, $r35, 0x0;
	xor.b32 $r21, s[$ofs2+0x0000], $r43;
	and.b32 $r19, $r15, $r24;
	and.b32 $r18, $r23, $r13;
	shl.u32 $r13, $r2, 0x00000005;
	@$p0.ne shr.u32 $r6, $r2, 0x0000001b;
	mov.u32 s[$ofs1+0x0100], $r12;
	or.b32 $r18, $r18, $r19;
	or.b32 $r19, $r13, $r6;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r13, s[$ofs2+0x0000];
	mov.half.u32 $r6, s[$ofs1+0x0000];
	add.u32 $r18, $r18, $r19;
	xor.b32 $r0, $r0, $r13;
	shl.b32 $ofs2, $r41, 0x0;
	xor.b32 $r6, s[$ofs2+0x0000], $r6;
	add.u32 $r13, $r12, $r18;
	xor.b32 $r6, $r0, $r6;
	mov.u32 $r0, $r124;
	add.u32 $r14, $r14, $r13;
	mov.u32 $r13, $r124;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000001;
	@$p0.ne shr.u32 $r13, $r15, 0x00000002;
	shl.u32 $r18, $r15, 0x0000001e;
	or.b32 $r15, $r0, $r6;
	or.b32 $r25, $r18, $r13;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r28, s[$ofs2+0x0000];
	mov.half.u32 $r0, s[$ofs1+0x0000];
	shl.b32 $ofs2, $r41, 0x0;
	mov.half.u32 $r6, s[$ofs2+0x0000];
	mov.half.u32 $r27, s[$ofs2+0x0000];
	mov.u32 $r20, s[$ofs1+0x0000];
	xor.b32 $r22, s[$ofs1+0x0000], $r12;
	mov.u32 $r19, $r124;
	or.b32 $r13, $r2, $r25;
	add.u32 $r18, $r14, 0x8f1bbcdc;
	mov.u32 s[$ofs1+0x0180], $r15;
	and.b32 $r26, $r2, $r25;
	and.b32 $r42, $r24, $r13;
	shl.u32 $r14, $r18, 0x00000005;
	@$p0.ne shr.u32 $r19, $r18, 0x0000001b;
	shl.b32 $ofs2, $r38, 0x0;
	mov.u32 $r13, s[$ofs2+0x0000];
	or.b32 $r26, $r42, $r26;
	or.b32 $r14, $r14, $r19;
	xor.b32 $r13, $r16, $r13;
	xor.b32 $r19, s[$ofs3+0x0000], $r43;
	mov.u32 $r16, $r124;
	add.u32 $r14, $r26, $r14;
	xor.b32 $r13, $r19, $r13;
	@$p0.ne shr.u32 $r16, $r2, 0x00000002;
	add.u32 $r19, $r15, $r14;
	shl.u32 $r14, $r2, 0x0000001e;
	mov.u32 $r2, $r124;
	add.u32 $r19, $r23, $r19;
	or.b32 $r23, $r14, $r16;
	@$p0.ne shr.u32 $r2, $r13, 0x0000001f;
	shl.u32 $r13, $r13, 0x00000001;
	or.b32 $r14, $r2, $r13;
	or.b32 $r26, $r23, $r18;
	mov.u32 $r2, $r124;
	mov.u32 $r16, s[$ofs2+0x0000];
	and.b32 $r13, $r23, $r18;
	and.b32 $r44, $r25, $r26;
	add.u32 $r26, $r19, 0x8f1bbcdc;
	mov.half.u32 $r42, s[$ofs3+0x0000];
	mov.half.u32 $r19, s[$ofs3+0x0000];
	or.b32 $r44, $r44, $r13;
	shl.u32 $r13, $r26, 0x00000005;
	@$p0.ne shr.u32 $r2, $r26, 0x0000001b;
	mov.u32 s[$ofs1+0x0200], $r14;
	or.b32 $r2, $r13, $r2;
	shl.b32 $ofs2, $r39, 0x0;
	mov.half.u32 $r13, s[$ofs2+0x0000];
	add.half.u32 $r2, $r44, $r2;
	xor.b32 $r28, $r28, $r13;
	xor.b32 $r13, s[$ofs4+0x0000], $r12;
	add.u32 $r2, $r14, $r2;
	xor.b32 $r28, $r13, $r28;
	mov.u32 $r13, $r124;
	add.u32 $r2, $r24, $r2;
	mov.u32 $r24, $r124;
	@$p0.ne shr.u32 $r13, $r28, 0x0000001f;
	shl.u32 $r28, $r28, 0x00000001;
	@$p0.ne shr.u32 $r24, $r18, 0x00000002;
	shl.u32 $r18, $r18, 0x0000001e;
	or.b32 $r13, $r13, $r28;
	or.b32 $r24, $r18, $r24;
	mov.u32 $r28, s[$ofs2+0x0000];
	mov.u32 $r18, s[$ofs4+0x0000];
	xor.b32 $r44, $r46, $r6;
	or.b32 $r6, $r24, $r26;
	xor.b32 $r46, $r46, $r28;
	xor.b32 $r18, $r27, $r18;
	and.b32 $r28, $r24, $r26;
	and.b32 $r6, $r23, $r6;
	add.u32 $r27, $r2, 0x8f1bbcdc;
	mov.u32 $r2, $r124;
	or.b32 $r28, $r28, $r6;
	shl.u32 $r6, $r27, 0x00000005;
	@$p0.ne shr.u32 $r2, $r27, 0x0000001b;
	or.b32 $r6, $r6, $r2;
	mov.u32 $r2, s[$ofs4+0x0000];
	mov.u32 s[$ofs1+0x0280], $r13;
	add.u32 $r28, $r28, $r6;
	shl.b32 $ofs2, $r40, 0x0;
	mov.u32 $r6, s[$ofs2+0x0000];
	xor.b32 $r16, $r16, $r6;
	xor.b32 $r6, $r45, $r15;
	xor.b32 $r16, $r6, $r16;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r6, $r16, 0x0000001f;
	shl.u32 $r16, $r16, 0x00000001;
	or.b32 $r16, $r6, $r16;
	mov.u32 $r6, s[$ofs2+0x0000];
	xor.b32 $r42, $r17, $r42;
	xor.b32 $r17, $r17, $r6;
	xor.b32 $r6, $r3, $r14;
	xor.b32 $r46, $r6, $r46;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r6, $r46, 0x0000001f;
	shl.u32 $r46, $r46, 0x00000001;
	or.b32 $r6, $r6, $r46;
	xor.b32 $r20, $r45, $r20;
	xor.b32 $r0, $r0, $r13;
	xor.b32 $r19, $r45, $r19;
	xor.b32 $r43, $r43, $r16;
	xor.b32 $r12, $r12, $r6;
	xor.b32 $r17, $r0, $r17;
	mov.u32 $r0, $r124;
	xor.b32 $r43, $r43, $r44;
	xor.b32 $r42, $r12, $r42;
	mov.u32 $r12, $r124;
	@$p0.ne shr.u32 $r0, $r17, 0x0000001f;
	shl.u32 $r17, $r17, 0x00000001;
	or.b32 $r17, $r0, $r17;
	mov.u32 $r0, $r124;
	@$p0.ne shr.u32 $r12, $r43, 0x0000001f;
	shl.u32 $r43, $r43, 0x00000001;
	or.b32 $r12, $r12, $r43;
	@$p0.ne shr.u32 $r0, $r42, 0x0000001f;
	shl.u32 $r42, $r42, 0x00000001;
	or.b32 $r0, $r0, $r42;
	xor.b32 $r15, $r15, $r17;
	xor.b32 $r2, $r3, $r2;
	xor.b32 $r3, $r14, $r12;
	xor.b32 $r14, $r13, $r0;
	xor.b32 $r18, $r15, $r18;
	mov.u32 $r15, $r124;
	xor.b32 $r3, $r3, $r19;
	xor.b32 $r2, $r14, $r2;
	mov.u32 $r14, $r124;
	@$p0.ne shr.u32 $r15, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r15, $r15, $r18;
	mov.u32 $r19, $r124;
	mov.u32 s[$ofs1+0x0300], $r16;
	@$p0.ne shr.u32 $r14, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	or.b32 $r18, $r14, $r3;
	@$p0.ne shr.u32 $r19, $r2, 0x0000001f;
	mov.u32 s[$ofs1+0x0380], $r6;
	shl.u32 $r3, $r2, 0x00000001;
	mov.u32 s[$ofs1+0x0400], $r17;
	xor.b32 $r2, $r16, $r15;
	or.b32 $r19, $r19, $r3;
	xor.b32 $r3, $r6, $r18;
	mov.u32 s[$ofs1+0x0480], $r12;
	xor.b32 $r2, $r2, $r20;
	xor.b32 $r14, $r17, $r19;
	xor.b32 $r3, $r21, $r3;
	mov.u32 s[$ofs1+0x0500], $r0;
	mov.u32 $r21, $r124;
	xor.b32 $r14, $r22, $r14;
	mov.u32 $r20, $r124;
	mov.u32 s[$ofs1+0x0580], $r15;
	@$p0.ne shr.u32 $r21, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	or.b32 $r21, $r21, $r2;
	mov.u32 $r2, $r124;
	mov.u32 s[$ofs1+0x0600], $r18;
	@$p0.ne shr.u32 $r20, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	or.b32 $r20, $r20, $r3;
	@$p0.ne shr.u32 $r2, $r14, 0x0000001f;
	mov.u32 s[$ofs1+0x0680], $r19;
	shl.u32 $r3, $r14, 0x00000001;
	mov.u32 s[$ofs1+0x0700], $r21;
	or.b32 $r22, $r2, $r3;
	mov.u32 s[$ofs1+0x0780], $r20;
	mov.u32 s[$ofs1+0x0000], $r22;
	shl.b32 $ofs2, $r29, 0x0;
	mov.half.u32 $r14, s[$ofs2+0x0000];
	mov.half.u32 $r2, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r31, 0x0;
	mov.half.u32 $r29, s[$ofs2+0x0000];
	mov.half.u32 $r3, s[$ofs2+0x0000];
	shl.b32 $ofs2, $r32, 0x0;
	xor.b32 $r31, s[$ofs2+0x0000], $r14;
	shl.b32 $ofs2, $r30, 0x0;
	xor.b32 $r29, s[$ofs2+0x0000], $r29;
	mov.u32 $r14, s[$ofs2+0x0000];
	xor.b32 $r30, $r31, $r29;
	mov.u32 $r29, $r124;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001f;
	shl.u32 $r30, $r30, 0x00000001;
	or.b32 $r31, $r29, $r30;
	mov.u32 s[$ofs1+0x0080], $r31;
	shl.b32 $ofs2, $r33, 0x0;
	mov.half.u32 $r30, s[$ofs2+0x0000];
	mov.half.u32 $r29, s[$ofs2+0x0000];
	mov.u32 $r32, $r124;
	@$p0.ne shr.u32 $r32, $r26, 0x00000002;
	shl.u32 $r26, $r26, 0x0000001e;
	add.u32 $r28, $r13, $r28;
	or.b32 $r13, $r26, $r32;
	add.u32 $r25, $r25, $r28;
	or.b32 $r26, $r13, $r27;
	add.u32 $r32, $r25, 0x8f1bbcdc;
	mov.u32 $r25, $r124;
	and.b32 $r28, $r13, $r27;
	and.b32 $r26, $r24, $r26;
	shl.u32 $r33, $r32, 0x00000005;
	@$p0.ne shr.u32 $r25, $r32, 0x0000001b;
	or.b32 $r26, $r26, $r28;
	or.b32 $r28, $r33, $r25;
	mov.u32 $r25, $r124;
	add.u32 $r26, $r26, $r28;
	@$p0.ne shr.u32 $r25, $r27, 0x00000002;
	shl.u32 $r27, $r27, 0x0000001e;
	add.u32 $r16, $r16, $r26;
	or.b32 $r25, $r27, $r25;
	add.u32 $r16, $r23, $r16;
	or.b32 $r23, $r32, $r25;
	add.u32 $r26, $r16, 0x8f1bbcdc;
	mov.u32 $r16, $r124;
	and.b32 $r28, $r32, $r25;
	and.b32 $r27, $r13, $r23;
	shl.u32 $r23, $r26, 0x00000005;
	@$p0.ne shr.u32 $r16, $r26, 0x0000001b;
	or.b32 $r27, $r27, $r28;
	or.b32 $r28, $r23, $r16;
	shl.b32 $ofs2, $r35, 0x0;
	mov.half.u32 $r23, s[$ofs2+0x0000];
	mov.half.u32 $r16, s[$ofs2+0x0000];
	xor.b32 $r33, s[$ofs2+0x0000], $r31;
	shl.b32 $ofs2, $r36, 0x0;
	xor.b32 $r30, s[$ofs2+0x0000], $r30;
	add.u32 $r28, $r27, $r28;
	mov.u32 $r27, $r124;
	@$p0.ne shr.u32 $r27, $r32, 0x00000002;
	shl.u32 $r32, $r32, 0x0000001e;
	or.b32 $r27, $r32, $r27;
	add.u32 $r6, $r6, $r28;
	or.b32 $r28, $r26, $r27;
	add.u32 $r6, $r24, $r6;
	and.b32 $r32, $r26, $r27;
	and.b32 $r28, $r25, $r28;
	add.u32 $r24, $r6, 0x8f1bbcdc;
	mov.u32 $r6, $r124;
	or.b32 $r32, $r28, $r32;
	shl.u32 $r28, $r24, 0x00000005;
	@$p0.ne shr.u32 $r6, $r24, 0x0000001b;
	or.b32 $r6, $r28, $r6;
	shl.b32 $ofs2, $r34, 0x0;
	mov.u32 $r28, s[$ofs2+0x0000];
	xor.b32 $r23, s[$ofs2+0x0000], $r23;
	add.u32 $r6, $r32, $r6;
	mov.u32 $r32, $r124;
	add.u32 $r17, $r17, $r6;
	xor.b32 $r6, $r30, $r23;
	@$p0.ne shr.u32 $r32, $r26, 0x00000002;
	shl.u32 $r26, $r26, 0x0000001e;
	mov.u32 $r23, $r124;
	add.u32 $r17, $r13, $r17;
	or.b32 $r13, $r26, $r32;
	@$p0.ne shr.u32 $r23, $r6, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000001;
	or.b32 $r6, $r23, $r6;
	or.b32 $r30, $r13, $r24;
	add.u32 $r23, $r17, 0x8f1bbcdc;
	mov.u32 $r17, $r124;
	and.b32 $r26, $r13, $r24;
	and.b32 $r32, $r27, $r30;
	shl.u32 $r30, $r23, 0x00000005;
	@$p0.ne shr.u32 $r17, $r23, 0x0000001b;
	mov.u32 s[$ofs1+0x0100], $r6;
	or.b32 $r26, $r32, $r26;
	or.b32 $r30, $r30, $r17;
	shl.b32 $ofs2, $r37, 0x0;
	mov.half.u32 $r17, s[$ofs2+0x0000];
	mov.half.u32 $r32, s[$ofs2+0x0000];
	add.u32 $r26, $r26, $r30;
	mov.u32 $r30, $r124;
	@$p0.ne shr.u32 $r30, $r24, 0x00000002;
	shl.u32 $r24, $r24, 0x0000001e;
	or.b32 $r24, $r24, $r30;
	add.u32 $r12, $r12, $r26;
	or.b32 $r26, $r24, $r23;
	add.u32 $r25, $r25, $r12;
	and.b32 $r12, $r24, $r23;
	and.b32 $r30, $r13, $r26;
	add.u32 $r25, $r25, 0x8f1bbcdc;
	mov.u32 $r26, $r124;
	or.b32 $r12, $r12, $r30;
	shl.u32 $r30, $r25, 0x00000005;
	@$p0.ne shr.u32 $r26, $r25, 0x0000001b;
	or.b32 $r30, $r30, $r26;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r12, $r30;
	@$p0.ne shr.u32 $r26, $r23, 0x00000002;
	shl.u32 $r12, $r23, 0x0000001e;
	add.u32 $r0, $r0, $r30;
	or.b32 $r23, $r12, $r26;
	add.u32 $r0, $r27, $r0;
	or.b32 $r26, $r23, $r25;
	add.u32 $r30, $r0, 0x8f1bbcdc;
	mov.u32 $r0, $r124;
	and.b32 $r12, $r23, $r25;
	and.b32 $r27, $r24, $r26;
	shl.u32 $r26, $r30, 0x00000005;
	@$p0.ne shr.u32 $r0, $r30, 0x0000001b;
	or.b32 $r12, $r27, $r12;
	or.b32 $r0, $r26, $r0;
	mov.half.u32 $r27, s[$ofs1+0x0000];
	add.half.u32 $r26, $r12, $r0;
	shl.b32 $ofs2, $r41, 0x0;
	mov.half.u32 $r0, s[$ofs2+0x0000];
	mov.half.u32 $r12, s[$ofs2+0x0000];
	xor.b32 $r34, s[$ofs2+0x0000], $r27;
	add.u32 $r26, $r15, $r26;
	mov.u32 $r15, $r124;
	add.u32 $r13, $r13, $r26;
	@$p0.ne shr.u32 $r15, $r25, 0x00000002;
	shl.u32 $r25, $r25, 0x0000001e;
	add.u32 $r26, $r13, 0x8f1bbcdc;
	mov.u32 $r13, $r124;
	or.b32 $r27, $r25, $r15;
	shl.u32 $r15, $r26, 0x00000005;
	@$p0.ne shr.u32 $r13, $r26, 0x0000001b;
	or.b32 $r13, $r15, $r13;
	xor.b32 $r15, $r30, $r27;
	xor.b32 $r15, $r23, $r15;
	add.u32 $r13, $r13, $r15;
	mov.u32 $r15, $r124;
	xor.b32 $r2, $r2, $r17;
	add.u32 $r18, $r18, $r13;
	@$p0.ne shr.u32 $r15, $r30, 0x00000002;
	shl.u32 $r17, $r30, 0x0000001e;
	xor.b32 $r13, $r2, $r34;
	mov.u32 $r2, $r124;
	add.u32 $r18, $r24, $r18;
	or.b32 $r30, $r17, $r15;
	mov.u32 $r15, $r124;
	@$p0.ne shr.u32 $r2, $r13, 0x0000001f;
	shl.u32 $r13, $r13, 0x00000001;
	add.u32 $r17, $r18, 0xca62c1d6;
	or.b32 $r25, $r2, $r13;
	shl.u32 $r18, $r17, 0x00000005;
	@$p0.ne shr.u32 $r15, $r17, 0x0000001b;
	xor.b32 $r24, $r26, $r30;
	mov.half.u32 $r13, s[$ofs1+0x0000];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	or.b32 $r15, $r18, $r15;
	xor.b32 $r18, $r27, $r24;
	mov.u32 s[$ofs1+0x0180], $r25;
	add.u32 $r18, $r15, $r18;
	shl.b32 $ofs2, $r38, 0x0;
	mov.half.u32 $r24, s[$ofs2+0x0000];
	mov.half.u32 $r15, s[$ofs2+0x0000];
	add.u32 $r19, $r19, $r18;
	mov.u32 $r18, $r124;
	add.u32 $r19, $r23, $r19;
	@$p0.ne shr.u32 $r18, $r26, 0x00000002;
	shl.u32 $r23, $r26, 0x0000001e;
	add.u32 $r19, $r19, 0xca62c1d6;
	mov.u32 $r26, $r124;
	or.b32 $r23, $r23, $r18;
	shl.u32 $r18, $r19, 0x00000005;
	@$p0.ne shr.u32 $r26, $r19, 0x0000001b;
	or.b32 $r18, $r18, $r26;
	xor.b32 $r26, $r23, $r17;
	xor.b32 $r26, $r30, $r26;
	add.half.u32 $r18, $r18, $r26;
	add.half.u32 $r21, $r21, $r18;
	mov.u32 $r18, $r124;
	add.u32 $r21, $r27, $r21;
	@$p0.ne shr.u32 $r18, $r17, 0x00000002;
	shl.u32 $r27, $r17, 0x0000001e;
	add.u32 $r26, $r21, 0xca62c1d6;
	mov.u32 $r17, $r124;
	or.b32 $r27, $r27, $r18;
	shl.u32 $r18, $r26, 0x00000005;
	@$p0.ne shr.u32 $r17, $r26, 0x0000001b;
	xor.b32 $r21, $r19, $r27;
	or.b32 $r17, $r18, $r17;
	xor.b32 $r18, $r23, $r21;
	add.half.u32 $r17, $r17, $r18;
	add.half.u32 $r21, $r20, $r17;
	xor.b32 $r20, s[$ofs3+0x0000], $r31;
	mov.half.u32 $r17, s[$ofs3+0x0000];
	mov.half.u32 $r18, s[$ofs3+0x0000];
	xor.b32 $r34, $r29, $r24;
	mov.u32 $r24, $r124;
	@$p0.ne shr.u32 $r24, $r19, 0x00000002;
	shl.u32 $r29, $r19, 0x0000001e;
	xor.b32 $r20, $r20, $r34;
	mov.u32 $r19, $r124;
	add.u32 $r30, $r30, $r21;
	or.b32 $r29, $r29, $r24;
	mov.u32 $r21, $r124;
	@$p0.ne shr.u32 $r19, $r20, 0x0000001f;
	shl.u32 $r24, $r20, 0x00000001;
	add.u32 $r20, $r30, 0xca62c1d6;
	or.b32 $r24, $r19, $r24;
	shl.u32 $r19, $r20, 0x00000005;
	@$p0.ne shr.u32 $r21, $r20, 0x0000001b;
	xor.b32 $r30, $r26, $r29;
	or.b32 $r19, $r19, $r21;
	xor.b32 $r21, $r27, $r30;
	mov.u32 s[$ofs1+0x0200], $r24;
	add.u32 $r30, $r19, $r21;
	shl.b32 $ofs2, $r39, 0x0;
	mov.half.u32 $r19, s[$ofs2+0x0000];
	mov.half.u32 $r21, s[$ofs2+0x0000];
	add.u32 $r30, $r22, $r30;
	mov.u32 $r22, $r124;
	add.u32 $r23, $r23, $r30;
	@$p0.ne shr.u32 $r22, $r26, 0x00000002;
	shl.u32 $r30, $r26, 0x0000001e;
	add.u32 $r26, $r23, 0xca62c1d6;
	mov.u32 $r23, $r124;
	or.b32 $r22, $r30, $r22;
	shl.u32 $r30, $r26, 0x00000005;
	@$p0.ne shr.u32 $r23, $r26, 0x0000001b;
	or.b32 $r23, $r30, $r23;
	xor.b32 $r30, $r20, $r22;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r23, $r23, $r30;
	add.half.u32 $r23, $r31, $r23;
	mov.u32 $r30, $r124;
	add.u32 $r23, $r27, $r23;
	@$p0.ne shr.u32 $r30, $r20, 0x00000002;
	shl.u32 $r20, $r20, 0x0000001e;
	add.u32 $r23, $r23, 0xca62c1d6;
	mov.u32 $r27, $r124;
	or.b32 $r20, $r20, $r30;
	shl.u32 $r30, $r23, 0x00000005;
	@$p0.ne shr.u32 $r27, $r23, 0x0000001b;
	or.b32 $r27, $r30, $r27;
	xor.b32 $r30, $r26, $r20;
	xor.b32 $r30, $r22, $r30;
	add.half.u32 $r27, $r27, $r30;
	add.half.u32 $r30, $r6, $r27;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r29, $r30;
	@$p0.ne shr.u32 $r27, $r26, 0x00000002;
	shl.u32 $r29, $r26, 0x0000001e;
	add.u32 $r30, $r30, 0xca62c1d6;
	mov.u32 $r26, $r124;
	or.b32 $r29, $r29, $r27;
	shl.u32 $r27, $r30, 0x00000005;
	@$p0.ne shr.u32 $r26, $r30, 0x0000001b;
	or.b32 $r26, $r27, $r26;
	xor.b32 $r27, $r29, $r23;
	xor.b32 $r27, $r20, $r27;
	add.half.u32 $r26, $r26, $r27;
	add.half.u32 $r27, $r25, $r26;
	mov.u32 $r26, $r124;
	add.u32 $r22, $r22, $r27;
	@$p0.ne shr.u32 $r26, $r23, 0x00000002;
	shl.u32 $r23, $r23, 0x0000001e;
	add.u32 $r27, $r22, 0xca62c1d6;
	mov.u32 $r22, $r124;
	or.b32 $r26, $r23, $r26;
	shl.u32 $r23, $r27, 0x00000005;
	@$p0.ne shr.u32 $r22, $r27, 0x0000001b;
	or.b32 $r22, $r23, $r22;
	xor.b32 $r23, $r30, $r26;
	xor.b32 $r23, $r29, $r23;
	add.half.u32 $r22, $r22, $r23;
	add.half.u32 $r34, $r24, $r22;
	xor.b32 $r23, $r32, $r19;
	xor.b32 $r22, s[$ofs4+0x0000], $r6;
	add.u32 $r32, $r20, $r34;
	mov.u32 $r20, s[$ofs4+0x0000];
	mov.u32 $r19, s[$ofs4+0x0000];
	xor.b32 $r23, $r22, $r23;
	mov.u32 $r22, $r124;
	@$p0.ne shr.u32 $r22, $r23, 0x0000001f;
	shl.u32 $r23, $r23, 0x00000001;
	or.b32 $r22, $r22, $r23;
	mov.u32 $r34, $r124;
	xor.b32 $r23, $r14, $r0;
	xor.b32 $r21, $r14, $r21;
	@$p0.ne shr.u32 $r34, $r30, 0x00000002;
	shl.u32 $r14, $r30, 0x0000001e;
	add.u32 $r32, $r32, 0xca62c1d6;
	mov.u32 $r0, $r124;
	or.b32 $r30, $r14, $r34;
	shl.u32 $r14, $r32, 0x00000005;
	@$p0.ne shr.u32 $r0, $r32, 0x0000001b;
	or.b32 $r0, $r14, $r0;
	xor.b32 $r14, $r27, $r30;
	xor.b32 $r14, $r26, $r14;
	mov.u32 s[$ofs1+0x0280], $r22;
	add.u32 $r34, $r0, $r14;
	shl.b32 $ofs2, $r40, 0x0;
	mov.u32 $r0, s[$ofs2+0x0000];
	xor.b32 $r14, $r15, $r0;
	xor.b32 $r0, $r3, $r25;
	add.u32 $r34, $r22, $r34;
	xor.b32 $r15, $r0, $r14;
	mov.u32 $r14, $r124;
	add.half.u32 $r29, $r29, $r34;
	mov.half.u32 $r0, s[$ofs2+0x0000];
	@$p0.ne shr.u32 $r14, $r15, 0x0000001f;
	shl.u32 $r15, $r15, 0x00000001;
	or.b32 $r14, $r14, $r15;
	xor.b32 $r13, $r13, $r22;
	xor.b32 $r0, $r28, $r0;
	mov.u32 $r15, $r124;
	xor.b32 $r0, $r13, $r0;
	@$p0.ne shr.u32 $r15, $r27, 0x00000002;
	shl.u32 $r34, $r27, 0x0000001e;
	add.u32 $r27, $r29, 0xca62c1d6;
	mov.u32 $r13, $r124;
	or.b32 $r29, $r34, $r15;
	shl.u32 $r15, $r27, 0x00000005;
	@$p0.ne shr.u32 $r13, $r27, 0x0000001b;
	or.b32 $r13, $r15, $r13;
	xor.b32 $r15, $r32, $r29;
	xor.b32 $r15, $r30, $r15;
	add.u32 $r15, $r13, $r15;
	xor.b32 $r13, $r16, $r24;
	add.u32 $r34, $r14, $r15;
	xor.b32 $r15, $r13, $r21;
	mov.u32 $r13, $r124;
	add.u32 $r26, $r26, $r34;
	mov.u32 $r21, $r124;
	@$p0.ne shr.u32 $r13, $r15, 0x0000001f;
	shl.u32 $r15, $r15, 0x00000001;
	or.b32 $r15, $r13, $r15;
	@$p0.ne shr.u32 $r21, $r32, 0x00000002;
	shl.u32 $r34, $r32, 0x0000001e;
	add.u32 $r32, $r26, 0xca62c1d6;
	mov.u32 $r13, $r124;
	or.b32 $r21, $r34, $r21;
	shl.u32 $r26, $r32, 0x00000005;
	@$p0.ne shr.u32 $r13, $r32, 0x0000001b;
	or.b32 $r13, $r26, $r13;
	xor.b32 $r26, $r27, $r21;
	xor.b32 $r26, $r29, $r26;
	add.half.u32 $r13, $r13, $r26;
	add.half.u32 $r26, $r15, $r13;
	mov.u32 $r13, $r124;
	add.u32 $r30, $r30, $r26;
	mov.u32 $r34, $r124;
	@$p0.ne shr.u32 $r13, $r0, 0x0000001f;
	shl.u32 $r0, $r0, 0x00000001;
	or.b32 $r26, $r13, $r0;
	@$p0.ne shr.u32 $r34, $r27, 0x00000002;
	shl.u32 $r13, $r27, 0x0000001e;
	add.u32 $r30, $r30, 0xca62c1d6;
	mov.u32 $r0, $r124;
	or.b32 $r27, $r13, $r34;
	shl.u32 $r13, $r30, 0x00000005;
	@$p0.ne shr.u32 $r0, $r30, 0x0000001b;
	or.b32 $r0, $r13, $r0;
	xor.b32 $r13, $r27, $r32;
	xor.b32 $r13, $r21, $r13;
	add.half.u32 $r0, $r0, $r13;
	add.half.u32 $r13, $r26, $r0;
	mov.u32 $r0, $r124;
	add.u32 $r29, $r29, $r13;
	xor.b32 $r13, $r31, $r14;
	@$p0.ne shr.u32 $r0, $r32, 0x00000002;
	shl.u32 $r32, $r32, 0x0000001e;
	add.u32 $r29, $r29, 0xca62c1d6;
	mov.u32 $r31, $r124;
	xor.b32 $r13, $r13, $r23;
	or.b32 $r23, $r32, $r0;
	shl.u32 $r32, $r29, 0x00000005;
	@$p0.ne shr.u32 $r31, $r29, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r31, $r32, $r31;
	@$p0.ne shr.u32 $r0, $r13, 0x0000001f;
	xor.b32 $r32, $r30, $r23;
	shl.u32 $r13, $r13, 0x00000001;
	xor.b32 $r32, $r27, $r32;
	or.b32 $r13, $r0, $r13;
	add.half.u32 $r0, $r31, $r32;
	add.half.u32 $r31, $r13, $r0;
	xor.b32 $r17, $r28, $r17;
	xor.b32 $r0, $r6, $r15;
	add.u32 $r28, $r21, $r31;
	mov.u32 $r21, $r124;
	xor.b32 $r6, $r0, $r17;
	add.u32 $r17, $r28, 0xca62c1d6;
	mov.u32 $r28, $r124;
	@$p0.ne shr.u32 $r21, $r30, 0x00000002;
	shl.u32 $r31, $r30, 0x0000001e;
	shl.u32 $r30, $r17, 0x00000005;
	@$p0.ne shr.u32 $r28, $r17, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r21, $r31, $r21;
	or.b32 $r30, $r30, $r28;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	xor.b32 $r28, $r29, $r21;
	shl.u32 $r6, $r6, 0x00000001;
	xor.b32 $r31, $r23, $r28;
	or.b32 $r28, $r0, $r6;
	add.half.u32 $r0, $r30, $r31;
	add.half.u32 $r30, $r28, $r0;
	xor.b32 $r6, $r12, $r20;
	xor.b32 $r0, $r25, $r26;
	add.u32 $r12, $r27, $r30;
	mov.u32 $r20, $r124;
	xor.b32 $r6, $r0, $r6;
	add.u32 $r25, $r12, 0xca62c1d6;
	mov.u32 $r12, $r124;
	@$p0.ne shr.u32 $r20, $r29, 0x00000002;
	shl.u32 $r27, $r29, 0x0000001e;
	shl.u32 $r29, $r25, 0x00000005;
	@$p0.ne shr.u32 $r12, $r25, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r20, $r27, $r20;
	or.b32 $r27, $r29, $r12;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	xor.b32 $r12, $r17, $r20;
	shl.u32 $r6, $r6, 0x00000001;
	xor.b32 $r29, $r21, $r12;
	or.b32 $r12, $r0, $r6;
	add.half.u32 $r0, $r27, $r29;
	add.half.u32 $r27, $r12, $r0;
	xor.b32 $r6, $r3, $r18;
	xor.b32 $r0, $r24, $r13;
	add.u32 $r18, $r23, $r27;
	mov.u32 $r24, $r124;
	xor.b32 $r6, $r0, $r6;
	add.u32 $r18, $r18, 0xca62c1d6;
	mov.u32 $r23, $r124;
	@$p0.ne shr.u32 $r24, $r17, 0x00000002;
	shl.u32 $r17, $r17, 0x0000001e;
	shl.u32 $r27, $r18, 0x00000005;
	@$p0.ne shr.u32 $r23, $r18, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r17, $r17, $r24;
	or.b32 $r24, $r27, $r23;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	xor.b32 $r23, $r25, $r17;
	shl.u32 $r6, $r6, 0x00000001;
	xor.b32 $r27, $r20, $r23;
	or.b32 $r23, $r0, $r6;
	add.half.u32 $r0, $r24, $r27;
	add.half.u32 $r24, $r23, $r0;
	xor.b32 $r6, $r16, $r19;
	xor.b32 $r0, $r22, $r28;
	add.u32 $r19, $r21, $r24;
	mov.u32 $r16, $r124;
	xor.b32 $r6, $r0, $r6;
	add.u32 $r19, $r19, 0xca62c1d6;
	mov.u32 $r21, $r124;
	@$p0.ne shr.u32 $r16, $r25, 0x00000002;
	shl.u32 $r22, $r25, 0x0000001e;
	shl.u32 $r24, $r19, 0x00000005;
	@$p0.ne shr.u32 $r21, $r19, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r16, $r22, $r16;
	or.b32 $r22, $r24, $r21;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	xor.b32 $r21, $r16, $r18;
	shl.u32 $r6, $r6, 0x00000001;
	xor.b32 $r24, $r17, $r21;
	or.b32 $r21, $r0, $r6;
	add.u32 $r0, $r22, $r24;
	mov.u32 s[$ofs1+0x0300], $r14;
	add.u32 $r0, $r21, $r0;
	mov.u32 s[$ofs1+0x0380], $r15;
	xor.b32 $r3, $r3, $r2;
	xor.b32 $r2, $r14, $r12;
	add.u32 $r6, $r20, $r0;
	mov.u32 s[$ofs1+0x0400], $r26;
	mov.u32 $r0, $r124;
	xor.b32 $r3, $r2, $r3;
	add.u32 $r14, $r6, 0xca62c1d6;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r0, $r18, 0x00000002;
	shl.u32 $r20, $r18, 0x0000001e;
	shl.u32 $r18, $r14, 0x00000005;
	@$p0.ne shr.u32 $r6, $r14, 0x0000001b;
	mov.u32 $r2, $r124;
	or.b32 $r0, $r20, $r0;
	mov.u32 s[$ofs1+0x0480], $r13;
	or.b32 $r6, $r18, $r6;
	@$p0.ne shr.u32 $r2, $r3, 0x0000001f;
	xor.b32 $r13, $r19, $r0;
	shl.u32 $r3, $r3, 0x00000001;
	xor.b32 $r18, $r16, $r13;
	or.b32 $r13, $r2, $r3;
	add.u32 $r2, $r6, $r18;
	mov.u32 s[$ofs1+0x0500], $r28;
	add.u32 $r3, $r13, $r2;
	mov.u32 s[$ofs1+0x0580], $r12;
	xor.b32 $r2, $r15, $r23;
	add.u32 $r6, $r17, $r3;
	mov.u32 s[$ofs1+0x0600], $r23;
	mov.u32 $r12, $r124;
	xor.b32 $r3, $r33, $r2;
	add.u32 $r6, $r6, 0xca62c1d6;
	mov.u32 $r15, $r124;
	@$p0.ne shr.u32 $r12, $r19, 0x00000002;
	shl.u32 $r18, $r19, 0x0000001e;
	shl.u32 $r17, $r6, 0x00000005;
	@$p0.ne shr.u32 $r15, $r6, 0x0000001b;
	mov.u32 $r2, $r124;
	or.b32 $r12, $r18, $r12;
	mov.u32 s[$ofs1+0x0680], $r21;
	or.b32 $r15, $r17, $r15;
	@$p0.ne shr.u32 $r2, $r3, 0x0000001f;
	xor.b32 $r17, $r14, $r12;
	shl.u32 $r3, $r3, 0x00000001;
	xor.b32 $r17, $r0, $r17;
	or.b32 $r2, $r2, $r3;
	add.u32 $r3, $r15, $r17;
	mov.u32 s[$ofs1+0x0700], $r13;
	add.half.u32 $r3, $r2, $r3;
	add.half.u32 $r11, $r11, $r0;
	mov.u32 s[$ofs1+0x0780], $r2;
	add.u32 $r0, $r16, $r3;
	mov.u32 $r2, $r124;
	add.u32 $r9, $r9, $r6;
	@$p0.ne shr.u32 $r2, $r14, 0x00000002;
	shl.u32 $r3, $r14, 0x0000001e;
	add.u32 $r0, $r0, 0xca62c1d6;
	add.u32 $r10, $r10, $r12;
	or.b32 $r2, $r3, $r2;
	add.u32 $r4, $r4, 0x00000010;
	add.u32 $r49, $r49, $r0;
	set.ne.s32.s32 $p0/$o127, $r4, $r5;
	add.u32 $r8, $r8, $r2;
	add.u32 $r7, $r7, 0x00000040;
	add.u32 $r1, $r1, 0x00000040;
	@$p0.ne bra l0x000001b0;
	bra l0x00004410;
	l0x00004408: mov.u32 $r49, 0x67452301;
	l0x00004410: shl.u32 $r0, $r50, 0x00000002;
	shr.u32 $r2, $r49, 0x00000018;
	add.half.u32 $r1, s[0x0028], $r0;
	mov.half.u16 $r0.lo, $r2.lo;
	st.global.u8 [$r1], $r0;
	shr.u32 $r0, $r49, 0x00000010;
	shr.u32 $r3, $r49, 0x00000008;
	add.u32 $r2, $r1, 0x00000001;
	st.global.u8 [$r2], $r0;
	add.u32 $r2, $r1, 0x00000002;
	mov.u16 $r0.lo, $r3.lo;
	st.global.u8 [$r2], $r0;
	add.u32 $r1, $r1, 0x00000003;
	mov.u16 $r0.lo, $r49.lo;
	st.global.u8 [$r1], $r0;

	l_exit: exit;
}

.entry  _Z3md5PhiiiS_ (
	.param  .u64 __cudaparm__Z3md5PhiiiS__input ,
	.param  .s32 __cudaparm__Z3md5PhiiiS__chunkSize ,
	.param  .s32 __cudaparm__Z3md5PhiiiS__totalThreads ,
	.param  .s32 __cudaparm__Z3md5PhiiiS__padSize ,
	.param  .u64 __cudaparm__Z3md5PhiiiS__scratch )
{
	.reg .u32 $r<31>;
	.reg .u32 $ofs<4>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	mov.u16 $r1.lo, %ntid.x;
	cvt.u32.u16 $r2, $r0.lo;
	mad.wide.u16 $r5, %ctaid.x, $r1.lo, $r2;
	set.gt.s32.s32 $p0/$o127, s[0x001c], $r5;
	@$p0.equ retp;
	add.u32 $r3, s[0x001c], 0xffffffff;
	set.gt.s32.s32 $p0/$r1, s[0x0020], $r124;
	set.eq.s32.s32 $r3, $r5, $r3;
	and.b32 $r4, $r1, constant1_Z3md5PhiiiS_[0x0000];
	cvt.s32.s32 $r1, -$r3;
	and.b32 $p1|$o127, $r4, $r1;
	ssy 0x000000d8;
	@$p1.eq bra l0x000000d8;
	@$p0.eq bra l0x000000d8;
	mov.u32 $r1, s[0x0018];
	mul.wide.u16 $r3, $r1.lo, $r5.hi;
	mad.wide.u16 $r3, $r1.hi, $r5.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r1, $r1.lo, $r5.lo, $r3;
	add.half.u32 $r3, s[0x0018], $r1;
	add.half.u32 $r4, -s[0x0020], $r3;
	add.u32 $r1, s[0x0010], $r4;
	l0x000000a8: mov.u16 $r6.lo, 0x00000000;
	add.u32 $r4, $r4, 0x00000001;
	st.global.u8 [$r1], $r6;
	set.ne.s32.s32 $p0/$o127, $r4, $r3;
	add.u32 $r1, $r1, 0x00000001;
	@$p0.ne bra l0x000000a8;
	l0x000000d8: shr.s32 $r1, s[0x0018], 0x0000001f;
	and.b32 $r1, $r1, constant1_Z3md5PhiiiS_[0x0004];
	add.u32 $r1, s[0x0018], $r1;
	shr.s32 $r3, $r1, 0x00000006;
	add.u32 $r4, $r3, 0x00000001;
	set.le.s32.s32 $p0/$o127, $r4, $r124;
	@$p0.ne bra l0x00001d00;
	mov.u32 $r1, s[0x0018];
	shr.u32 $r6, $r2, 0x00000005;
	cvt.u32.u16 $r7, $r0.lo;
	mul.wide.u16 $r8, $r1.lo, $r5.hi;
	and.b32 $r0, $r2, constant1_Z3md5PhiiiS_[0x0008];
	shl.u32 $r2, $r6, 0x0000000b;
	and.b32 $r7, $r7, constant1_Z3md5PhiiiS_[0x0008];
	mad.wide.u16 $r8, $r1.hi, $r5.lo, $r8;
	shl.u32 $r6, $r0, 0x00000002;
	add.u32 $r0, $r2, 0x00000030;
	shl.u32 $r7, $r7, 0x00000002;
	shl.u32 $r8, $r8, 0x00000010;
	add.half.u32 $r2, $r6, $r0;
	add.half.u32 $r0, $r0, $r7;
	mad.wide.u16 $r1, $r1.lo, $r5.lo, $r8;
	shl.b32 $ofs1, $r2, 0x0;
	shl.b32 $ofs2, $r0, 0x0;
	shl.u32 $r7, $r3, 0x00000004;
	shl.u32 $r8, $r4, 0x00000004;
	mov.u32 $r11, $r124;
	mov.u32 $r10, $r124;
	mov.u32 $r13, 0x10325476;
	add.u32 $r1, s[0x0010], $r1;
	mov.u32 $r12, 0x98badcfe;
	mov.u32 $r9, 0xefcdab89;
	mov.u32 $r6, 0x67452301;
	mov.u32 $r0, $r1;
	l0x000001e0: ld.global.u32 $r3, [$r0];
	add.u32 $r2, $r0, 0x00000004;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs2+0x0000], $r3;
	add.u32 $r3, $r0, 0x00000008;
	ld.global.u32 $r4, [$r3];
	mov.u32 s[$ofs1+0x0080], $r2;
	add.u32 $r2, $r0, 0x0000000c;
	ld.global.u32 $r3, [$r2];
	add.u32 $r2, $r0, 0x00000010;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0100], $r4;
	mov.u32 s[$ofs1+0x0180], $r3;
	mov.u32 s[$ofs1+0x0200], $r2;
	add.u32 $r2, $r0, 0x00000014;
	ld.global.u32 $r14, [$r2];
	add.u32 $r2, $r0, 0x00000018;
	ld.global.u32 $r4, [$r2];
	add.u32 $r2, $r0, 0x0000001c;
	ld.global.u32 $r3, [$r2];
	add.u32 $r2, $r0, 0x00000020;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0280], $r14;
	mov.u32 s[$ofs1+0x0300], $r4;
	mov.u32 s[$ofs1+0x0380], $r3;
	mov.u32 s[$ofs1+0x0400], $r2;
	add.u32 $r2, $r0, 0x00000024;
	ld.global.u32 $r14, [$r2];
	add.u32 $r2, $r0, 0x00000028;
	ld.global.u32 $r4, [$r2];
	add.u32 $r2, $r0, 0x0000002c;
	ld.global.u32 $r3, [$r2];
	add.u32 $r2, $r0, 0x00000030;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0480], $r14;
	mov.u32 s[$ofs1+0x0500], $r4;
	mov.u32 s[$ofs1+0x0580], $r3;
	set.ne.s32.s32 $p0/$o127, $r11, $r7;
	mov.u32 s[$ofs1+0x0600], $r2;
	@$p0.ne bra l0x00000358;
	mov.u32 $r2, 0x00000080;
	mov.u32 s[$ofs1+0x0680], $r2;
	shl.u32 $r2, s[0x0018], 0x00000003;
	mov.u32 s[$ofs1+0x0700], $r2;
	shr.s32 $r2, s[0x0018], 0x0000001d;
	mov.u32 s[$ofs1+0x0780], $r2;
	bra l0x000003a8;
	l0x00000358: add.u32 $r2, $r10, $r1;
	add.u32 $r3, $r2, 0x00000034;
	ld.global.u32 $r4, [$r3];
	add.u32 $r3, $r2, 0x00000038;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, $r2, 0x0000003c;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0680], $r4;
	mov.u32 s[$ofs1+0x0700], $r3;
	mov.u32 s[$ofs1+0x0780], $r2;
	l0x000003a8: cvt.u32.u8 $r3, s[$ofs2+0x0001];
	cvt.u32.u8 $r4, s[$ofs2+0x0002];
	cvt.u32.u8 $r14, s[$ofs2+0x0003];
	cvt.u32.u8 $r2, s[$ofs2+0x0000];
	shl.u32 $r3, $r3, 0x00000008;
	shl.u32 $r4, $r4, 0x00000010;
	shl.u32 $r14, $r14, 0x00000018;
	or.b32 $r2, $r2, $r3;
	or.b32 $r3, $r4, $r14;
	or.b32 $r2, $r2, $r3;
	mov.u32 s[$ofs2+0x0000], $r2;
	add.u32 $ofs3, $ofs1, 0x00000080;
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r4, s[$ofs3+0x0002];
	cvt.u32.u8 $r14, s[$ofs3+0x0003];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	shl.u32 $r3, $r3, 0x00000008;
	shl.u32 $r4, $r4, 0x00000010;
	shl.u32 $r14, $r14, 0x00000018;
	or.b32 $r2, $r2, $r3;
	or.b32 $r3, $r4, $r14;
	or.b32 $r19, $r2, $r3;
	add.u32 $ofs3, $ofs1, 0x00000100;
	mov.u32 s[$ofs1+0x0080], $r19;
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r4, s[$ofs3+0x0002];
	cvt.u32.u8 $r14, s[$ofs3+0x0003];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	shl.u32 $r3, $r3, 0x00000008;
	shl.u32 $r4, $r4, 0x00000010;
	shl.u32 $r14, $r14, 0x00000018;
	or.b32 $r2, $r2, $r3;
	or.b32 $r3, $r4, $r14;
	or.b32 $r4, $r2, $r3;
	add.u32 $ofs3, $ofs1, 0x00000180;
	mov.u32 s[$ofs1+0x0100], $r4;
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r14, s[$ofs3+0x0002];
	cvt.u32.u8 $r15, s[$ofs3+0x0003];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	shl.u32 $r3, $r3, 0x00000008;
	shl.u32 $r14, $r14, 0x00000010;
	shl.u32 $r15, $r15, 0x00000018;
	or.b32 $r2, $r2, $r3;
	or.b32 $r3, $r14, $r15;
	or.b32 $r21, $r2, $r3;
	add.u32 $ofs3, $ofs1, 0x00000200;
	mov.u32 s[$ofs1+0x0180], $r21;
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r14, s[$ofs3+0x0002];
	cvt.u32.u8 $r15, s[$ofs3+0x0003];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	shl.u32 $r3, $r3, 0x00000008;
	shl.u32 $r14, $r14, 0x00000010;
	shl.u32 $r15, $r15, 0x00000018;
	or.b32 $r2, $r2, $r3;
	or.b32 $r3, $r14, $r15;
	or.b32 $r2, $r2, $r3;
	add.u32 $ofs3, $ofs1, 0x00000280;
	mov.u32 s[$ofs1+0x0200], $r2;
	cvt.u32.u8 $r14, s[$ofs3+0x0001];
	cvt.u32.u8 $r15, s[$ofs3+0x0002];
	cvt.u32.u8 $r16, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r14, $r14, 0x00000008;
	shl.u32 $r15, $r15, 0x00000010;
	shl.u32 $r16, $r16, 0x00000018;
	or.b32 $r3, $r3, $r14;
	or.b32 $r14, $r15, $r16;
	or.b32 $r23, $r3, $r14;
	add.u32 $ofs3, $ofs1, 0x00000300;
	mov.u32 s[$ofs1+0x0280], $r23;
	cvt.u32.u8 $r14, s[$ofs3+0x0001];
	cvt.u32.u8 $r15, s[$ofs3+0x0002];
	cvt.u32.u8 $r16, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r14, $r14, 0x00000008;
	shl.u32 $r15, $r15, 0x00000010;
	shl.u32 $r16, $r16, 0x00000018;
	or.b32 $r3, $r3, $r14;
	or.b32 $r14, $r15, $r16;
	or.b32 $r16, $r3, $r14;
	add.u32 $ofs3, $ofs1, 0x00000380;
	mov.u32 s[$ofs1+0x0300], $r16;
	cvt.u32.u8 $r14, s[$ofs3+0x0001];
	cvt.u32.u8 $r15, s[$ofs3+0x0002];
	cvt.u32.u8 $r17, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r14, $r14, 0x00000008;
	shl.u32 $r15, $r15, 0x00000010;
	shl.u32 $r17, $r17, 0x00000018;
	or.b32 $r3, $r3, $r14;
	or.b32 $r14, $r15, $r17;
	or.b32 $r25, $r3, $r14;
	add.u32 $ofs3, $ofs1, 0x00000400;
	mov.u32 s[$ofs1+0x0380], $r25;
	cvt.u32.u8 $r14, s[$ofs3+0x0001];
	cvt.u32.u8 $r15, s[$ofs3+0x0002];
	cvt.u32.u8 $r17, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r14, $r14, 0x00000008;
	shl.u32 $r15, $r15, 0x00000010;
	shl.u32 $r17, $r17, 0x00000018;
	or.b32 $r3, $r3, $r14;
	or.b32 $r14, $r15, $r17;
	or.b32 $r18, $r3, $r14;
	add.u32 $ofs3, $ofs1, 0x00000480;
	mov.u32 s[$ofs1+0x0400], $r18;
	cvt.u32.u8 $r14, s[$ofs3+0x0001];
	cvt.u32.u8 $r15, s[$ofs3+0x0002];
	cvt.u32.u8 $r17, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r14, $r14, 0x00000008;
	shl.u32 $r15, $r15, 0x00000010;
	shl.u32 $r17, $r17, 0x00000018;
	or.b32 $r3, $r3, $r14;
	or.b32 $r14, $r15, $r17;
	or.b32 $r14, $r3, $r14;
	add.u32 $ofs3, $ofs1, 0x00000500;
	mov.u32 s[$ofs1+0x0480], $r14;
	cvt.u32.u8 $r15, s[$ofs3+0x0001];
	cvt.u32.u8 $r17, s[$ofs3+0x0002];
	cvt.u32.u8 $r20, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r15, $r15, 0x00000008;
	shl.u32 $r17, $r17, 0x00000010;
	shl.u32 $r20, $r20, 0x00000018;
	or.b32 $r3, $r3, $r15;
	or.b32 $r15, $r17, $r20;
	or.b32 $r20, $r3, $r15;
	add.u32 $ofs3, $ofs1, 0x00000580;
	mov.u32 s[$ofs1+0x0500], $r20;
	cvt.u32.u8 $r15, s[$ofs3+0x0001];
	cvt.u32.u8 $r17, s[$ofs3+0x0002];
	cvt.u32.u8 $r22, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r15, $r15, 0x00000008;
	shl.u32 $r17, $r17, 0x00000010;
	shl.u32 $r22, $r22, 0x00000018;
	or.b32 $r3, $r3, $r15;
	or.b32 $r15, $r17, $r22;
	or.b32 $r3, $r3, $r15;
	add.u32 $ofs3, $ofs1, 0x00000600;
	mov.u32 s[$ofs1+0x0580], $r3;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r22, s[$ofs3+0x0002];
	cvt.u32.u8 $r24, s[$ofs3+0x0003];
	cvt.u32.u8 $r15, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r22, $r22, 0x00000010;
	shl.u32 $r24, $r24, 0x00000018;
	or.b32 $r15, $r15, $r17;
	or.b32 $r17, $r22, $r24;
	or.b32 $r22, $r15, $r17;
	add.u32 $ofs3, $ofs1, 0x00000680;
	mov.u32 s[$ofs1+0x0600], $r22;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r24, s[$ofs3+0x0002];
	cvt.u32.u8 $r26, s[$ofs3+0x0003];
	cvt.u32.u8 $r15, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r24, $r24, 0x00000010;
	shl.u32 $r26, $r26, 0x00000018;
	or.b32 $r15, $r15, $r17;
	or.b32 $r17, $r24, $r26;
	or.b32 $r15, $r15, $r17;
	add.u32 $ofs3, $ofs1, 0x00000700;
	mov.u32 s[$ofs1+0x0680], $r15;
	cvt.u32.u8 $r24, s[$ofs3+0x0001];
	cvt.u32.u8 $r26, s[$ofs3+0x0002];
	cvt.u32.u8 $r27, s[$ofs3+0x0003];
	cvt.u32.u8 $r17, s[$ofs3+0x0000];
	shl.u32 $r24, $r24, 0x00000008;
	shl.u32 $r26, $r26, 0x00000010;
	shl.u32 $r27, $r27, 0x00000018;
	or.b32 $r17, $r17, $r24;
	or.b32 $r24, $r26, $r27;
	or.b32 $r24, $r17, $r24;
	add.u32 $ofs3, $ofs1, 0x00000780;
	mov.u32 s[$ofs1+0x0700], $r24;
	cvt.u32.u8 $r26, s[$ofs3+0x0001];
	cvt.u32.u8 $r17, s[$ofs3+0x0000];
	shl.u32 $r26, $r26, 0x00000008;
	or.b32 $r17, $r17, $r26;
	cvt.u32.u8 $r26, s[$ofs3+0x0002];
	cvt.u32.u8 $r27, s[$ofs3+0x0003];
	shl.u32 $r26, $r26, 0x00000010;
	shl.u32 $r27, $r27, 0x00000018;
	or.b32 $r26, $r26, $r27;
	xor.b32 $r27, $r13, $r12;
	and.b32 $r27, $r9, $r27;
	or.b32 $r17, $r17, $r26;
	xor.b32 $r26, $r13, $r27;
	mov.u32 s[$ofs1+0x0780], $r17;
	add.u32 $r26, s[$ofs2+0x0000], $r26;
	mov.u32 $r28, 0xffffffff;
	add.u32 $r27, $r6, $r26;
	cvt.u32.u32 $p0|$o127, $r28;
	mov.u32 $r26, $r124;
	add.u32 $r27, $r27, 0xd76aa478;
	@$p0.ne shr.u32 $r26, $r27, 0x00000019;
	shl.u32 $r27, $r27, 0x00000007;
	or.b32 $r26, $r27, $r26;
	xor.b32 $r27, $r9, $r12;
	add.u32 $r29, $r9, $r26;
	and.b32 $r26, $r29, $r27;
	xor.b32 $r26, $r12, $r26;
	add.half.u32 $r26, $r19, $r26;
	add.half.u32 $r27, $r13, $r26;
	mov.u32 $r26, $r124;
	add.u32 $r27, $r27, 0xe8c7b756;
	@$p0.ne shr.u32 $r26, $r27, 0x00000014;
	shl.u32 $r27, $r27, 0x0000000c;
	or.b32 $r26, $r27, $r26;
	xor.b32 $r27, $r29, $r9;
	add.u32 $r26, $r29, $r26;
	and.b32 $r27, $r26, $r27;
	xor.b32 $r27, $r9, $r27;
	add.half.u32 $r27, $r4, $r27;
	add.half.u32 $r28, $r12, $r27;
	mov.u32 $r27, $r124;
	add.u32 $r28, $r28, 0x242070db;
	@$p0.ne shr.u32 $r27, $r28, 0x0000000f;
	shl.u32 $r28, $r28, 0x00000011;
	or.b32 $r27, $r28, $r27;
	xor.b32 $r28, $r26, $r29;
	add.u32 $r27, $r26, $r27;
	and.b32 $r28, $r27, $r28;
	xor.b32 $r28, $r29, $r28;
	add.half.u32 $r28, $r21, $r28;
	add.half.u32 $r30, $r9, $r28;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xc1bdceee;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000a;
	shl.u32 $r30, $r30, 0x00000016;
	or.b32 $r28, $r30, $r28;
	xor.b32 $r30, $r27, $r26;
	add.u32 $r28, $r27, $r28;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r2, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xf57c0faf;
	@$p0.ne shr.u32 $r29, $r30, 0x00000019;
	shl.u32 $r30, $r30, 0x00000007;
	or.b32 $r29, $r30, $r29;
	xor.b32 $r30, $r28, $r27;
	add.u32 $r29, $r28, $r29;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r23, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0x4787c62a;
	@$p0.ne shr.u32 $r26, $r30, 0x00000014;
	shl.u32 $r30, $r30, 0x0000000c;
	or.b32 $r26, $r30, $r26;
	xor.b32 $r30, $r29, $r28;
	add.u32 $r26, $r29, $r26;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r16, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xa8304613;
	@$p0.ne shr.u32 $r27, $r30, 0x0000000f;
	shl.u32 $r30, $r30, 0x00000011;
	or.b32 $r27, $r30, $r27;
	xor.b32 $r30, $r26, $r29;
	add.u32 $r27, $r26, $r27;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r25, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xfd469501;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000a;
	shl.u32 $r30, $r30, 0x00000016;
	or.b32 $r28, $r30, $r28;
	xor.b32 $r30, $r27, $r26;
	add.u32 $r28, $r27, $r28;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r18, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0x698098d8;
	@$p0.ne shr.u32 $r29, $r30, 0x00000019;
	shl.u32 $r30, $r30, 0x00000007;
	or.b32 $r29, $r30, $r29;
	xor.b32 $r30, $r28, $r27;
	add.u32 $r29, $r28, $r29;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r14, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0x8b44f7af;
	@$p0.ne shr.u32 $r26, $r30, 0x00000014;
	shl.u32 $r30, $r30, 0x0000000c;
	or.b32 $r26, $r30, $r26;
	xor.b32 $r30, $r29, $r28;
	add.u32 $r26, $r29, $r26;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r20, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xffff5bb1;
	@$p0.ne shr.u32 $r27, $r30, 0x0000000f;
	shl.u32 $r30, $r30, 0x00000011;
	or.b32 $r27, $r30, $r27;
	xor.b32 $r30, $r26, $r29;
	add.u32 $r27, $r26, $r27;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r3, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0x895cd7be;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000a;
	shl.u32 $r30, $r30, 0x00000016;
	or.b32 $r28, $r30, $r28;
	xor.b32 $r30, $r27, $r26;
	add.u32 $r28, $r27, $r28;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r22, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0x6b901122;
	@$p0.ne shr.u32 $r29, $r30, 0x00000019;
	shl.u32 $r30, $r30, 0x00000007;
	or.b32 $r29, $r30, $r29;
	xor.b32 $r30, $r28, $r27;
	add.u32 $r29, $r28, $r29;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r15, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xfd987193;
	@$p0.ne shr.u32 $r26, $r30, 0x00000014;
	shl.u32 $r30, $r30, 0x0000000c;
	or.b32 $r26, $r30, $r26;
	xor.b32 $r30, $r29, $r28;
	add.u32 $r26, $r29, $r26;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r24, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xa679438e;
	@$p0.ne shr.u32 $r27, $r30, 0x0000000f;
	shl.u32 $r30, $r30, 0x00000011;
	or.b32 $r27, $r30, $r27;
	xor.b32 $r30, $r26, $r29;
	add.u32 $r27, $r26, $r27;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r17, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0x49b40821;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000a;
	shl.u32 $r30, $r30, 0x00000016;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r19, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xf61e2562;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001b;
	shl.u32 $r30, $r30, 0x00000005;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r16, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xc040b340;
	@$p0.ne shr.u32 $r26, $r30, 0x00000017;
	shl.u32 $r30, $r30, 0x00000009;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r3, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0x265e5a51;
	@$p0.ne shr.u32 $r27, $r30, 0x00000012;
	shl.u32 $r30, $r30, 0x0000000e;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, s[$ofs2+0x0000], $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xe9b6c7aa;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000c;
	shl.u32 $r30, $r30, 0x00000014;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r23, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xd62f105d;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001b;
	shl.u32 $r30, $r30, 0x00000005;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r20, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0x02441453;
	@$p0.ne shr.u32 $r26, $r30, 0x00000017;
	shl.u32 $r30, $r30, 0x00000009;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r17, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xd8a1e681;
	@$p0.ne shr.u32 $r27, $r30, 0x00000012;
	shl.u32 $r30, $r30, 0x0000000e;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r2, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xe7d3fbc8;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000c;
	shl.u32 $r30, $r30, 0x00000014;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r14, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0x21e1cde6;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001b;
	shl.u32 $r30, $r30, 0x00000005;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r24, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xc33707d6;
	@$p0.ne shr.u32 $r26, $r30, 0x00000017;
	shl.u32 $r30, $r30, 0x00000009;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r21, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xf4d50d87;
	@$p0.ne shr.u32 $r27, $r30, 0x00000012;
	shl.u32 $r30, $r30, 0x0000000e;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r18, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0x455a14ed;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000c;
	shl.u32 $r30, $r30, 0x00000014;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	and.b32 $r30, $r26, $r30;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r15, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xa9e3e905;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001b;
	shl.u32 $r30, $r30, 0x00000005;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	and.b32 $r30, $r27, $r30;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r4, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xfcefa3f8;
	@$p0.ne shr.u32 $r26, $r30, 0x00000017;
	shl.u32 $r30, $r30, 0x00000009;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	and.b32 $r30, $r28, $r30;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r25, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0x676f02d9;
	@$p0.ne shr.u32 $r27, $r30, 0x00000012;
	shl.u32 $r30, $r30, 0x0000000e;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r22, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0x8d2a4c8a;
	@$p0.ne shr.u32 $r28, $r30, 0x0000000c;
	shl.u32 $r30, $r30, 0x00000014;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r23, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xfffa3942;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001c;
	shl.u32 $r30, $r30, 0x00000004;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r18, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0x8771f681;
	@$p0.ne shr.u32 $r26, $r30, 0x00000015;
	shl.u32 $r30, $r30, 0x0000000b;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r3, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0x6d9d6122;
	@$p0.ne shr.u32 $r27, $r30, 0x00000010;
	shl.u32 $r30, $r30, 0x00000010;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r24, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xfde5380c;
	@$p0.ne shr.u32 $r28, $r30, 0x00000009;
	shl.u32 $r30, $r30, 0x00000017;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r19, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xa4beea44;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001c;
	shl.u32 $r30, $r30, 0x00000004;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r2, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0x4bdecfa9;
	@$p0.ne shr.u32 $r26, $r30, 0x00000015;
	shl.u32 $r30, $r30, 0x0000000b;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r25, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xf6bb4b60;
	@$p0.ne shr.u32 $r27, $r30, 0x00000010;
	shl.u32 $r30, $r30, 0x00000010;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r20, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xbebfbc70;
	@$p0.ne shr.u32 $r28, $r30, 0x00000009;
	shl.u32 $r30, $r30, 0x00000017;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r15, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0x289b7ec6;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001c;
	shl.u32 $r30, $r30, 0x00000004;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, s[$ofs2+0x0000], $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xeaa127fa;
	@$p0.ne shr.u32 $r26, $r30, 0x00000015;
	shl.u32 $r30, $r30, 0x0000000b;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r21, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xd4ef3085;
	@$p0.ne shr.u32 $r27, $r30, 0x00000010;
	shl.u32 $r30, $r30, 0x00000010;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r16, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0x04881d05;
	@$p0.ne shr.u32 $r28, $r30, 0x00000009;
	shl.u32 $r30, $r30, 0x00000017;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	xor.b32 $r30, $r28, $r27;
	xor.b32 $r30, $r26, $r30;
	add.half.u32 $r30, $r14, $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xd9d4d039;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001c;
	shl.u32 $r30, $r30, 0x00000004;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	xor.b32 $r30, $r29, $r28;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, $r22, $r30;
	add.half.u32 $r30, $r26, $r30;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xe6db99e5;
	@$p0.ne shr.u32 $r26, $r30, 0x00000015;
	shl.u32 $r30, $r30, 0x0000000b;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r29, $r26;
	xor.b32 $r30, $r26, $r29;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r30, $r17, $r30;
	add.half.u32 $r30, $r27, $r30;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0x1fa27cf8;
	@$p0.ne shr.u32 $r27, $r30, 0x00000010;
	shl.u32 $r30, $r30, 0x00000010;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r26, $r27;
	xor.b32 $r30, $r27, $r26;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r30, $r4, $r30;
	add.half.u32 $r30, $r28, $r30;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0xc4ac5665;
	@$p0.ne shr.u32 $r28, $r30, 0x00000009;
	shl.u32 $r30, $r30, 0x00000017;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r27, $r28;
	or.b32 $r30, $r28, $r26;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r30, s[$ofs2+0x0000], $r30;
	add.half.u32 $r30, $r29, $r30;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xf4292244;
	@$p0.ne shr.u32 $r29, $r30, 0x0000001a;
	shl.u32 $r30, $r30, 0x00000006;
	or.b32 $r29, $r30, $r29;
	add.u32 $r29, $r28, $r29;
	or.b32 $r30, $r29, $r27;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r25, $r25, $r30;
	add.half.u32 $r26, $r26, $r25;
	mov.u32 $r25, $r124;
	add.u32 $r26, $r26, 0x432aff97;
	@$p0.ne shr.u32 $r25, $r26, 0x00000016;
	shl.u32 $r26, $r26, 0x0000000a;
	or.b32 $r25, $r26, $r25;
	add.u32 $r25, $r29, $r25;
	or.b32 $r26, $r25, $r28;
	xor.b32 $r26, $r29, $r26;
	add.half.u32 $r24, $r24, $r26;
	add.half.u32 $r26, $r27, $r24;
	mov.u32 $r24, $r124;
	add.u32 $r26, $r26, 0xab9423a7;
	@$p0.ne shr.u32 $r24, $r26, 0x00000011;
	shl.u32 $r26, $r26, 0x0000000f;
	or.b32 $r24, $r26, $r24;
	add.u32 $r24, $r25, $r24;
	or.b32 $r26, $r24, $r29;
	xor.b32 $r26, $r25, $r26;
	add.half.u32 $r23, $r23, $r26;
	add.half.u32 $r26, $r28, $r23;
	mov.u32 $r23, $r124;
	add.u32 $r26, $r26, 0xfc93a039;
	@$p0.ne shr.u32 $r23, $r26, 0x0000000b;
	shl.u32 $r26, $r26, 0x00000015;
	or.b32 $r23, $r26, $r23;
	add.u32 $r23, $r24, $r23;
	or.b32 $r26, $r23, $r25;
	xor.b32 $r26, $r24, $r26;
	add.half.u32 $r22, $r22, $r26;
	add.half.u32 $r26, $r29, $r22;
	mov.u32 $r22, $r124;
	add.u32 $r26, $r26, 0x655b59c3;
	@$p0.ne shr.u32 $r22, $r26, 0x0000001a;
	shl.u32 $r26, $r26, 0x00000006;
	or.b32 $r22, $r26, $r22;
	add.u32 $r22, $r23, $r22;
	or.b32 $r26, $r22, $r24;
	xor.b32 $r26, $r23, $r26;
	add.half.u32 $r21, $r21, $r26;
	add.half.u32 $r25, $r25, $r21;
	mov.u32 $r21, $r124;
	add.u32 $r25, $r25, 0x8f0ccc92;
	@$p0.ne shr.u32 $r21, $r25, 0x00000016;
	shl.u32 $r25, $r25, 0x0000000a;
	or.b32 $r21, $r25, $r21;
	add.u32 $r21, $r22, $r21;
	or.b32 $r25, $r21, $r23;
	xor.b32 $r25, $r22, $r25;
	add.half.u32 $r20, $r20, $r25;
	add.half.u32 $r24, $r24, $r20;
	mov.u32 $r20, $r124;
	add.u32 $r24, $r24, 0xffeff47d;
	@$p0.ne shr.u32 $r20, $r24, 0x00000011;
	shl.u32 $r24, $r24, 0x0000000f;
	or.b32 $r20, $r24, $r20;
	add.u32 $r20, $r21, $r20;
	or.b32 $r24, $r20, $r22;
	xor.b32 $r24, $r21, $r24;
	add.half.u32 $r19, $r19, $r24;
	add.half.u32 $r23, $r23, $r19;
	mov.u32 $r19, $r124;
	add.u32 $r23, $r23, 0x85845dd1;
	@$p0.ne shr.u32 $r19, $r23, 0x0000000b;
	shl.u32 $r23, $r23, 0x00000015;
	or.b32 $r19, $r23, $r19;
	add.u32 $r19, $r20, $r19;
	or.b32 $r23, $r19, $r21;
	xor.b32 $r23, $r20, $r23;
	add.half.u32 $r18, $r18, $r23;
	add.half.u32 $r22, $r22, $r18;
	mov.u32 $r18, $r124;
	add.u32 $r22, $r22, 0x6fa87e4f;
	@$p0.ne shr.u32 $r18, $r22, 0x0000001a;
	shl.u32 $r22, $r22, 0x00000006;
	or.b32 $r18, $r22, $r18;
	add.u32 $r18, $r19, $r18;
	or.b32 $r22, $r18, $r20;
	xor.b32 $r22, $r19, $r22;
	add.half.u32 $r17, $r17, $r22;
	add.half.u32 $r21, $r21, $r17;
	mov.u32 $r17, $r124;
	add.u32 $r21, $r21, 0xfe2ce6e0;
	@$p0.ne shr.u32 $r17, $r21, 0x00000016;
	shl.u32 $r21, $r21, 0x0000000a;
	or.b32 $r17, $r21, $r17;
	add.u32 $r17, $r18, $r17;
	or.b32 $r21, $r17, $r19;
	xor.b32 $r21, $r18, $r21;
	add.half.u32 $r16, $r16, $r21;
	add.half.u32 $r20, $r20, $r16;
	mov.u32 $r16, $r124;
	add.u32 $r20, $r20, 0xa3014314;
	@$p0.ne shr.u32 $r16, $r20, 0x00000011;
	shl.u32 $r20, $r20, 0x0000000f;
	or.b32 $r16, $r20, $r16;
	add.u32 $r16, $r17, $r16;
	or.b32 $r20, $r16, $r18;
	xor.b32 $r20, $r17, $r20;
	add.half.u32 $r15, $r15, $r20;
	add.half.u32 $r19, $r19, $r15;
	mov.u32 $r15, $r124;
	add.u32 $r19, $r19, 0x4e0811a1;
	@$p0.ne shr.u32 $r15, $r19, 0x0000000b;
	shl.u32 $r19, $r19, 0x00000015;
	or.b32 $r15, $r19, $r15;
	add.u32 $r15, $r16, $r15;
	or.b32 $r19, $r15, $r17;
	xor.b32 $r19, $r16, $r19;
	add.half.u32 $r2, $r2, $r19;
	add.half.u32 $r18, $r18, $r2;
	mov.u32 $r2, $r124;
	add.u32 $r18, $r18, 0xf7537e82;
	@$p0.ne shr.u32 $r2, $r18, 0x0000001a;
	shl.u32 $r18, $r18, 0x00000006;
	or.b32 $r2, $r18, $r2;
	add.u32 $r2, $r15, $r2;
	or.b32 $r18, $r2, $r16;
	xor.b32 $r18, $r15, $r18;
	add.half.u32 $r3, $r3, $r18;
	add.half.u32 $r17, $r17, $r3;
	mov.u32 $r3, $r124;
	add.u32 $r17, $r17, 0xbd3af235;
	@$p0.ne shr.u32 $r3, $r17, 0x00000016;
	shl.u32 $r17, $r17, 0x0000000a;
	or.b32 $r3, $r17, $r3;
	add.u32 $r3, $r2, $r3;
	or.b32 $r17, $r15, $r3;
	xor.b32 $r17, $r2, $r17;
	add.half.u32 $r4, $r4, $r17;
	add.half.u32 $r16, $r16, $r4;
	mov.u32 $r4, $r124;
	add.u32 $r16, $r16, 0x2ad7d2bb;
	@$p0.ne shr.u32 $r4, $r16, 0x00000011;
	shl.u32 $r16, $r16, 0x0000000f;
	or.b32 $r4, $r16, $r4;
	add.u32 $r4, $r3, $r4;
	or.b32 $r16, $r2, $r4;
	xor.b32 $r16, $r3, $r16;
	add.half.u32 $r14, $r14, $r16;
	add.half.u32 $r15, $r15, $r14;
	mov.u32 $r14, $r124;
	add.u32 $r15, $r15, 0xeb86d391;
	@$p0.ne shr.u32 $r14, $r15, 0x0000000b;
	shl.u32 $r15, $r15, 0x00000015;
	add.u32 $r13, $r13, $r3;
	or.b32 $r3, $r15, $r14;
	add.u32 $r6, $r6, $r2;
	add.u32 $r11, $r11, 0x00000010;
	add.half.u32 $r2, $r4, $r3;
	add.half.u32 $r12, $r12, $r4;
	set.ne.s32.s32 $p0/$o127, $r11, $r8;
	add.u32 $r9, $r9, $r2;
	add.u32 $r10, $r10, 0x00000040;
	add.u32 $r0, $r0, 0x00000040;
	@$p0.ne bra l0x000001e0;
	bra l0x00001d08;
	l0x00001d00: mov.u32 $r6, 0x67452301;
	l0x00001d08: shl.u32 $r0, $r5, 0x00000002;
	add.half.u32 $r1, s[0x0028], $r0;
	mov.half.u16 $r0.lo, $r6.lo;
	shr.u32 $r2, $r6, 0x00000008;
	st.global.u8 [$r1], $r0;
	add.u32 $r3, $r1, 0x00000001;
	mov.u16 $r0.lo, $r2.lo;
	st.global.u8 [$r3], $r0;
	shr.u32 $r0, $r6, 0x00000010;
	shr.u32 $r3, $r6, 0x00000018;
	add.u32 $r2, $r1, 0x00000002;
	st.global.u8 [$r2], $r0;
	add.u32 $r1, $r1, 0x00000003;
	mov.u16 $r0.lo, $r3.lo;
	st.global.u8 [$r1], $r0;

	l_exit: exit;
}

.entry  _Z12sha1_overlapPhiiiiS_ (
	.param  .u64 __cudaparm__Z12sha1_overlapPhiiiiS__input ,
	.param  .s32 __cudaparm__Z12sha1_overlapPhiiiiS____val_paramchunkSize ,
	.param  .s32 __cudaparm__Z12sha1_overlapPhiiiiS__offset ,
	.param  .s32 __cudaparm__Z12sha1_overlapPhiiiiS__totalThreads ,
	.param  .s32 __cudaparm__Z12sha1_overlapPhiiiiS__padSize ,
	.param  .u64 __cudaparm__Z12sha1_overlapPhiiiiS__output )
{
	.reg .u32 $r124;
	.reg .u32 $o127;
	.reg .u32 $r1;
	.reg .u32 $r2;
	.reg .u32 $r0;
	.reg .u32 $r11;
	.reg .pred $p0;
	.reg .u32 $r8;
	.reg .u32 $r31;
	.reg .u32 $r32;
	.reg .u32 $r3;
	.reg .u32 $r4;
	.reg .u32 $r34;
	.reg .u32 $r9;
	.reg .u32 $r33;
	.reg .u32 $r37;
	.reg .u32 $ofs2;
	.reg .u32 $ofs1;
	.reg .u32 $r36;
	.reg .u32 $r41;
	.reg .u32 $r40;
	.reg .u32 $r38;
	.reg .u32 $r39;
	.reg .u32 $r12;
	.reg .u32 $r10;
	.reg .u32 $r35;
	.reg .u32 $ofs3;
	.reg .u32 $r5;
	.reg .u32 $r17;
	.reg .u32 $r21;
	.reg .u32 $r18;
	.reg .u32 $r16;
	.reg .u32 $r15;
	.reg .u32 $r14;
	.reg .u32 $r13;
	.reg .u32 $r7;
	.reg .u32 $r6;
	.reg .u32 $r19;
	.reg .u32 $r20;
	.reg .u32 $r22;
	.reg .u32 $r23;
	.reg .u32 $r24;
	.reg .u32 $r25;
	.reg .u32 $ofs4;
	.reg .u32 $r42;
	.reg .u32 $r43;
	.reg .u32 $r44;
	.reg .u32 $r45;
	.reg .u32 $r46;
	.reg .u32 $r47;
	.reg .u32 $r48;
	.reg .u32 $r49;
	.reg .u32 $r50;
	.reg .u32 $r51;
	.reg .u32 $r52;
	.reg .u32 $r28;
	.reg .u32 $r53;
	.reg .u32 $r26;
	.reg .u32 $r55;
	.reg .u32 $r27;
	.reg .u32 $r54;
	.reg .u32 $r29;
	.reg .u32 $r30;
	.reg .u32 $ofs0;
	.reg .pred $p1;
	.reg .pred $p2;
	.reg .pred $p3;

	
	mov.u16 $r1.lo, %ntid.x;
	cvt.u32.u16 $r2, $r0.lo;
	mad.wide.u16 $r11, %ctaid.x, $r1.lo, $r2;
	set.gt.s32.s32 $p0/$o127, s[0x0020], $r11;
	@$p0.equ retp;
	add.u32 $r1, s[0x0020], 0xffffffff;
	set.eq.s32.s32 $p0/$o127, $r1, $r11;
	mov.half.u32 $r1, s[0x0018];
	mov.half.u32 $r8, s[0x0018];
	@$p0.ne add.u32 $r8, -s[0x0024], $r1;
	shr.u32 $r31, $r8, 0x00000006;
	add.u32 $r32, $r31, 0x00000001;
	set.le.s32.s32 $p0/$o127, $r32, $r124;
	ssy 0x00004678;
	@$p0.ne bra l0x00004670;
	mov.u32 $r1, s[0x001c];
	shr.u32 $r3, $r2, 0x00000005;
	cvt.u32.u16 $r0, $r0.lo;
	mul.wide.u16 $r4, $r1.lo, $r11.hi;
	shl.u32 $r34, $r3, 0x0000000b;
	and.b32 $r0, $r0, constant1_Z12sha1_overlapPhiiiiS_[0x0000];
	and.b32 $r9, $r2, constant1_Z12sha1_overlapPhiiiiS_[0x0000];
	mad.wide.u16 $r4, $r1.hi, $r11.lo, $r4;
	add.u32 $r33, $r34, 0x00000030;
	shl.u32 $r3, $r0, 0x00000002;
	shl.u32 $r2, $r9, 0x00000002;
	shl.u32 $r0, $r9, 0x00000002;
	shl.u32 $r4, $r4, 0x00000010;
	add.half.u32 $r37, $r33, $r3;
	add.half.u32 $r2, $r33, $r2;
	add.u32 $r0, $r33, $r0;
	mad.wide.u16 $r1, $r1.lo, $r11.lo, $r4;
	shl.b32 $ofs2, $r2, 0x0;
	shl.b32 $ofs1, $r0, 0x0;
	mov.u32 $r36, $r124;
	mov.u32 $r41, 0xc3d2e1f0;
	mov.u32 $r40, 0x10325476;
	mov.u32 $r38, 0x98badcfe;
	mov.u32 $r39, 0xefcdab89;
	mov.u32 $r12, 0x67452301;
	add.u32 $r10, $r9, 0x000001a0;
	add.u32 $r35, s[0x0010], $r1;
	l0x00000140: set.ne.s32.s32 $p0/$o127, $r36, $r31;
	ssy 0x00000510;
	@$p0.ne bra l0x00000380;
	shl.u32 $r0, $r31, 0x00000006;
	add.u32 $r0, $r0, -$r8;
	shr.s32 $r1, $r0, 0x0000001f;
	add.u32 $p0|$r0, $r0, constant1_Z12sha1_overlapPhiiiiS_[0x0004];
	addp.u32 $r1, $r1, $r124, $p0;
	shr.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x0000001e;
	or.b32 $r0, $r0, $r1;
	cvt.u32.u32 $p0|$o127, $r124;
	@$p0.ne mov.u32 $r0, $r124;
	set.le.s32.s32 $p0/$o127, $r0, $r124;
	ssy 0x00000238;
	@$p0.ne bra l0x00000230;
	shl.u32 $r1, $r0, 0x00000005;
	add.u32 $r2, $r9, -$r1;
	ssy 0x00000220;
	mov.u32 $r1, $r10;
	add.u32 $r2, $r2, 0x000001a0;
	l0x000001e8: shl.u32 $r3, $r1, 0x00000002;
	add.u32 $r3, $r34, $r3;
	shl.b32 $ofs3, $r3, 0x0;
	mov.u32 s[$ofs3+0x0030], $r124;
	add.u32 $r1, $r1, 0xffffffe0;
	set.ne.s32.s32 $p0/$o127, $r1, $r2;
	@$p0.ne bra l0x000001e8;
	mov.u32 $r1, $r0;
	bra l0x00000238;
	l0x00000230: mov.u32 $r1, $r124;
	l0x00000238: nop;
	ssy 0x000002c8;
	add.u32 $r0, -$r0, 0x0000000d;
	set.le.s32.s32 $p0/$o127, $r0, $r124;
	@$p0.ne bra l0x000002c8;
	shl.u32 $r3, $r0, 0x00000005;
	shl.u32 $r2, $r36, 0x00000006;
	mov.half.u32 $r0, $r9;
	add.half.u32 $r3, $r9, $r3;
	add.u32 $r2, $r35, $r2;
	l0x00000280: ld.global.u32 $r4, [$r2];
	shl.u32 $r5, $r0, 0x00000002;
	add.u32 $r5, $r34, $r5;
	shl.b32 $ofs3, $r5, 0x0;
	mov.u32 s[$ofs3+0x0030], $r4;
	add.u32 $r0, $r0, 0x00000020;
	set.ne.s32.s32 $p0/$o127, $r0, $r3;
	add.u32 $r2, $r2, 0x00000004;
	@$p0.ne bra l0x00000280;
	l0x000002c8: shl.u32 $r0, $r1, 0x00000005;
	add.u32 $r0, $r9, -$r0;
	add.u32 $r0, $r0, 0x000001a0;
	shl.u32 $r0, $r0, 0x00000002;
	add.u32 $r0, $r33, $r0;
	shl.b32 $ofs3, $r0, 0x0;
	mov.u32 $r0, 0x00000080;
	mov.u32 s[$ofs3+0x0000], $r0;
	mov.u16 $r0.lo, 0x00000000;
	mov.u8 s[$ofs2+0x1c00], $r0.lo;
	mov.u8 s[$ofs2+0x1c04], $r0.lo;
	mov.u8 s[$ofs2+0x1c08], $r0.lo;
	shr.u32 $r0, $r8, 0x0000001d;
	shl.u32 $r1, $r8, 0x00000003;
	mov.u8 s[$ofs2+0x1c0c], $r0.lo;
	shr.u32 $r0, $r1, 0x00000018;
	mov.u8 s[$ofs2+0x1e00], $r0.lo;
	shr.u32 $r0, $r1, 0x00000010;
	mov.u8 s[$ofs2+0x1e04], $r0.lo;
	shr.u32 $r0, $r1, 0x00000008;
	mov.u8 s[$ofs2+0x1e08], $r0.lo;
	mov.u8 s[$ofs2+0x1e0c], $r1.lo;
	bra l0x00000510;
	l0x00000380: shl.u32 $r0, $r36, 0x00000006;
	add.u32 $r0, $r35, $r0;
	ld.global.u32 $r4, [$r0];
	add.u32 $r1, $r0, 0x00000004;
	ld.global.u32 $r3, [$r1];
	add.u32 $r1, $r0, 0x00000008;
	ld.global.u32 $r2, [$r1];
	add.u32 $r1, $r0, 0x0000000c;
	ld.global.u32 $r1, [$r1];
	shl.b32 $ofs3, $r37, 0x0;
	mov.u32 s[$ofs3+0x0000], $r4;
	mov.u32 s[$ofs2+0x0080], $r3;
	mov.u32 s[$ofs2+0x0100], $r2;
	mov.u32 s[$ofs2+0x0180], $r1;
	add.u32 $r1, $r0, 0x00000010;
	ld.global.u32 $r4, [$r1];
	add.u32 $r1, $r0, 0x00000014;
	ld.global.u32 $r3, [$r1];
	add.u32 $r1, $r0, 0x00000018;
	ld.global.u32 $r2, [$r1];
	add.u32 $r1, $r0, 0x0000001c;
	ld.global.u32 $r1, [$r1];
	mov.u32 s[$ofs2+0x0200], $r4;
	mov.u32 s[$ofs2+0x0280], $r3;
	mov.u32 s[$ofs2+0x0300], $r2;
	mov.u32 s[$ofs2+0x0380], $r1;
	add.u32 $r1, $r0, 0x00000020;
	ld.global.u32 $r4, [$r1];
	add.u32 $r1, $r0, 0x00000024;
	ld.global.u32 $r3, [$r1];
	add.u32 $r1, $r0, 0x00000028;
	ld.global.u32 $r2, [$r1];
	add.u32 $r1, $r0, 0x0000002c;
	ld.global.u32 $r1, [$r1];
	mov.u32 s[$ofs2+0x0400], $r4;
	mov.u32 s[$ofs2+0x0480], $r3;
	mov.u32 s[$ofs2+0x0500], $r2;
	mov.u32 s[$ofs2+0x0580], $r1;
	add.u32 $r1, $r0, 0x00000030;
	ld.global.u32 $r3, [$r1];
	add.u32 $r1, $r0, 0x00000034;
	ld.global.u32 $r2, [$r1];
	add.u32 $r1, $r0, 0x00000038;
	ld.global.u32 $r1, [$r1];
	add.u32 $r0, $r0, 0x0000003c;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs2+0x0600], $r3;
	mov.u32 s[$ofs2+0x0680], $r2;
	mov.u32 s[$ofs2+0x0700], $r1;
	mov.u32 s[$ofs2+0x0780], $r0;
	l0x00000510: shl.b32 $ofs3, $r37, 0x0;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r0, $r0, $r1;
	mov.u32 s[$ofs3+0x0000], $r0;
	add.u32 $ofs3, $ofs2, 0x00000080;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r17, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000100;
	mov.u32 s[$ofs2+0x0080], $r17;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r21, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000180;
	mov.u32 s[$ofs2+0x0100], $r21;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r18, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000200;
	mov.u32 s[$ofs2+0x0180], $r18;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r16, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000280;
	mov.u32 s[$ofs2+0x0200], $r16;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r15, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000300;
	mov.u32 s[$ofs2+0x0280], $r15;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r14, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000380;
	mov.u32 s[$ofs2+0x0300], $r14;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r13, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000400;
	mov.u32 s[$ofs2+0x0380], $r13;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r7, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000480;
	mov.u32 s[$ofs2+0x0400], $r7;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r6, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000500;
	mov.u32 s[$ofs2+0x0480], $r6;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r5, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000580;
	mov.u32 s[$ofs2+0x0500], $r5;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r4, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000600;
	mov.u32 s[$ofs2+0x0580], $r4;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r2, s[$ofs3+0x0000];
	cvt.u32.u8 $r3, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r2, $r2, 0x00000018;
	shl.u32 $r3, $r3, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r2, $r3;
	or.b32 $r2, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000680;
	mov.u32 s[$ofs2+0x0600], $r2;
	cvt.u32.u8 $r1, s[$ofs3+0x0002];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	cvt.u32.u8 $r19, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r1, $r1, 0x00000008;
	shl.u32 $r3, $r3, 0x00000018;
	shl.u32 $r19, $r19, 0x00000010;
	or.b32 $r0, $r0, $r1;
	or.b32 $r1, $r3, $r19;
	or.b32 $r1, $r0, $r1;
	add.u32 $ofs3, $ofs2, 0x00000700;
	mov.u32 s[$ofs2+0x0680], $r1;
	cvt.u32.u8 $r3, s[$ofs3+0x0002];
	cvt.u32.u8 $r19, s[$ofs3+0x0000];
	cvt.u32.u8 $r20, s[$ofs3+0x0001];
	cvt.u32.u8 $r0, s[$ofs3+0x0003];
	shl.u32 $r3, $r3, 0x00000008;
	shl.u32 $r19, $r19, 0x00000018;
	shl.u32 $r20, $r20, 0x00000010;
	or.b32 $r0, $r0, $r3;
	or.b32 $r3, $r19, $r20;
	or.b32 $r0, $r0, $r3;
	add.u32 $ofs3, $ofs2, 0x00000780;
	mov.u32 s[$ofs2+0x0700], $r0;
	cvt.u32.u8 $r19, s[$ofs3+0x0002];
	cvt.u32.u8 $r3, s[$ofs3+0x0003];
	cvt.u32.u8 $r20, s[$ofs3+0x0000];
	cvt.u32.u8 $r22, s[$ofs3+0x0001];
	shl.u32 $r19, $r19, 0x00000008;
	mov.u32 $r23, 0xffffffff;
	or.b32 $r3, $r3, $r19;
	cvt.u32.u32 $p0|$o127, $r23;
	mov.u32 $r19, $r124;
	xor.b32 $r24, $r38, $r40;
	shl.u32 $r20, $r20, 0x00000018;
	shl.u32 $r22, $r22, 0x00000010;
	shl.u32 $r23, $r12, 0x00000005;
	@$p0.ne shr.u32 $r19, $r12, 0x0000001b;
	and.b32 $r24, $r39, $r24;
	or.b32 $r20, $r20, $r22;
	or.b32 $r19, $r23, $r19;
	xor.b32 $r22, $r40, $r24;
	or.b32 $r3, $r3, $r20;
	add.u32 $r20, $r19, $r22;
	mov.u32 s[$ofs2+0x0780], $r3;
	mov.u32 $r19, $r124;
	shl.b32 $ofs3, $r37, 0x0;
	add.u32 $r22, s[$ofs3+0x0000], $r20;
	shl.u32 $r20, $r39, 0x0000001e;
	@$p0.ne shr.u32 $r19, $r39, 0x00000002;
	add.u32 $r22, $r41, $r22;
	or.b32 $r20, $r20, $r19;
	add.u32 $r22, $r22, 0x5a827999;
	mov.u32 $r19, $r124;
	xor.b32 $r24, $r20, $r38;
	shl.u32 $r23, $r22, 0x00000005;
	@$p0.ne shr.u32 $r19, $r22, 0x0000001b;
	and.b32 $r24, $r12, $r24;
	or.b32 $r19, $r23, $r19;
	xor.b32 $r23, $r38, $r24;
	add.u32 $r23, $r19, $r23;
	mov.u32 $r19, $r124;
	add.u32 $r23, $r17, $r23;
	shl.u32 $r17, $r12, 0x0000001e;
	@$p0.ne shr.u32 $r19, $r12, 0x00000002;
	add.u32 $r23, $r40, $r23;
	or.b32 $r19, $r17, $r19;
	add.u32 $r23, $r23, 0x5a827999;
	mov.u32 $r17, $r124;
	xor.b32 $r25, $r19, $r20;
	shl.u32 $r24, $r23, 0x00000005;
	@$p0.ne shr.u32 $r17, $r23, 0x0000001b;
	and.b32 $r25, $r22, $r25;
	or.b32 $r17, $r24, $r17;
	xor.b32 $r24, $r20, $r25;
	add.u32 $r24, $r17, $r24;
	mov.u32 $r17, $r124;
	add.u32 $r21, $r21, $r24;
	@$p0.ne shr.u32 $r17, $r22, 0x00000002;
	shl.u32 $r22, $r22, 0x0000001e;
	add.u32 $r21, $r38, $r21;
	or.b32 $r17, $r22, $r17;
	add.u32 $r21, $r21, 0x5a827999;
	mov.u32 $r22, $r124;
	xor.b32 $r25, $r19, $r17;
	shl.u32 $r24, $r21, 0x00000005;
	@$p0.ne shr.u32 $r22, $r21, 0x0000001b;
	and.b32 $r25, $r23, $r25;
	or.b32 $r22, $r24, $r22;
	xor.b32 $r24, $r19, $r25;
	add.u32 $r24, $r22, $r24;
	mov.u32 $r22, $r124;
	add.u32 $r18, $r18, $r24;
	@$p0.ne shr.u32 $r22, $r23, 0x00000002;
	shl.u32 $r23, $r23, 0x0000001e;
	add.u32 $r20, $r20, $r18;
	or.b32 $r18, $r23, $r22;
	add.u32 $r20, $r20, 0x5a827999;
	mov.u32 $r22, $r124;
	xor.b32 $r24, $r17, $r18;
	shl.u32 $r23, $r20, 0x00000005;
	@$p0.ne shr.u32 $r22, $r20, 0x0000001b;
	and.b32 $r24, $r21, $r24;
	or.b32 $r22, $r23, $r22;
	xor.b32 $r23, $r17, $r24;
	add.u32 $r23, $r22, $r23;
	mov.u32 $r22, $r124;
	add.u32 $r16, $r16, $r23;
	@$p0.ne shr.u32 $r22, $r21, 0x00000002;
	shl.u32 $r21, $r21, 0x0000001e;
	add.u32 $r19, $r19, $r16;
	or.b32 $r16, $r21, $r22;
	add.u32 $r19, $r19, 0x5a827999;
	mov.u32 $r21, $r124;
	xor.b32 $r23, $r18, $r16;
	shl.u32 $r22, $r19, 0x00000005;
	@$p0.ne shr.u32 $r21, $r19, 0x0000001b;
	and.b32 $r23, $r20, $r23;
	or.b32 $r21, $r22, $r21;
	xor.b32 $r22, $r18, $r23;
	add.u32 $r22, $r21, $r22;
	mov.u32 $r21, $r124;
	add.u32 $r22, $r15, $r22;
	@$p0.ne shr.u32 $r21, $r20, 0x00000002;
	shl.u32 $r15, $r20, 0x0000001e;
	add.u32 $r17, $r17, $r22;
	or.b32 $r15, $r15, $r21;
	add.u32 $r17, $r17, 0x5a827999;
	mov.u32 $r20, $r124;
	xor.b32 $r22, $r15, $r16;
	shl.u32 $r21, $r17, 0x00000005;
	@$p0.ne shr.u32 $r20, $r17, 0x0000001b;
	and.b32 $r22, $r19, $r22;
	or.b32 $r20, $r21, $r20;
	xor.b32 $r21, $r16, $r22;
	add.u32 $r21, $r20, $r21;
	mov.u32 $r20, $r124;
	add.u32 $r21, $r14, $r21;
	@$p0.ne shr.u32 $r20, $r19, 0x00000002;
	shl.u32 $r14, $r19, 0x0000001e;
	add.u32 $r18, $r18, $r21;
	or.b32 $r14, $r14, $r20;
	add.u32 $r18, $r18, 0x5a827999;
	mov.u32 $r19, $r124;
	xor.b32 $r21, $r14, $r15;
	shl.u32 $r20, $r18, 0x00000005;
	@$p0.ne shr.u32 $r19, $r18, 0x0000001b;
	and.b32 $r21, $r17, $r21;
	or.b32 $r19, $r20, $r19;
	xor.b32 $r20, $r15, $r21;
	add.u32 $r20, $r19, $r20;
	mov.u32 $r19, $r124;
	add.u32 $r13, $r13, $r20;
	@$p0.ne shr.u32 $r19, $r17, 0x00000002;
	shl.u32 $r17, $r17, 0x0000001e;
	add.u32 $r16, $r16, $r13;
	or.b32 $r13, $r17, $r19;
	add.u32 $r16, $r16, 0x5a827999;
	mov.u32 $r17, $r124;
	xor.b32 $r20, $r14, $r13;
	shl.u32 $r19, $r16, 0x00000005;
	@$p0.ne shr.u32 $r17, $r16, 0x0000001b;
	and.b32 $r20, $r18, $r20;
	or.b32 $r17, $r19, $r17;
	xor.b32 $r19, $r14, $r20;
	add.u32 $r19, $r17, $r19;
	mov.u32 $r17, $r124;
	add.u32 $r7, $r7, $r19;
	@$p0.ne shr.u32 $r17, $r18, 0x00000002;
	shl.u32 $r18, $r18, 0x0000001e;
	add.u32 $r15, $r15, $r7;
	or.b32 $r7, $r18, $r17;
	add.u32 $r15, $r15, 0x5a827999;
	mov.u32 $r17, $r124;
	xor.b32 $r19, $r13, $r7;
	shl.u32 $r18, $r15, 0x00000005;
	@$p0.ne shr.u32 $r17, $r15, 0x0000001b;
	and.b32 $r19, $r16, $r19;
	or.b32 $r17, $r18, $r17;
	xor.b32 $r18, $r13, $r19;
	add.u32 $r18, $r17, $r18;
	mov.u32 $r17, $r124;
	add.u32 $r6, $r6, $r18;
	@$p0.ne shr.u32 $r17, $r16, 0x00000002;
	shl.u32 $r16, $r16, 0x0000001e;
	add.u32 $r14, $r14, $r6;
	or.b32 $r6, $r16, $r17;
	add.u32 $r14, $r14, 0x5a827999;
	mov.u32 $r16, $r124;
	xor.b32 $r18, $r7, $r6;
	shl.u32 $r17, $r14, 0x00000005;
	@$p0.ne shr.u32 $r16, $r14, 0x0000001b;
	and.b32 $r18, $r15, $r18;
	or.b32 $r16, $r17, $r16;
	xor.b32 $r17, $r7, $r18;
	add.u32 $r17, $r16, $r17;
	mov.u32 $r16, $r124;
	add.u32 $r17, $r5, $r17;
	@$p0.ne shr.u32 $r16, $r15, 0x00000002;
	shl.u32 $r5, $r15, 0x0000001e;
	add.u32 $r13, $r13, $r17;
	or.b32 $r5, $r5, $r16;
	add.u32 $r13, $r13, 0x5a827999;
	mov.u32 $r15, $r124;
	xor.b32 $r17, $r5, $r6;
	shl.u32 $r16, $r13, 0x00000005;
	@$p0.ne shr.u32 $r15, $r13, 0x0000001b;
	and.b32 $r17, $r14, $r17;
	or.b32 $r15, $r16, $r15;
	xor.b32 $r16, $r6, $r17;
	add.u32 $r16, $r15, $r16;
	mov.u32 $r15, $r124;
	add.u32 $r16, $r4, $r16;
	@$p0.ne shr.u32 $r15, $r14, 0x00000002;
	shl.u32 $r4, $r14, 0x0000001e;
	add.u32 $r14, $r7, $r16;
	or.b32 $r7, $r4, $r15;
	add.u32 $r4, $r14, 0x5a827999;
	mov.u32 $r14, $r124;
	xor.b32 $r16, $r7, $r5;
	shl.u32 $r15, $r4, 0x00000005;
	@$p0.ne shr.u32 $r14, $r4, 0x0000001b;
	and.b32 $r16, $r13, $r16;
	or.b32 $r14, $r15, $r14;
	xor.b32 $r15, $r5, $r16;
	add.u32 $r15, $r14, $r15;
	mov.u32 $r14, $r124;
	add.u32 $r2, $r2, $r15;
	@$p0.ne shr.u32 $r14, $r13, 0x00000002;
	shl.u32 $r13, $r13, 0x0000001e;
	add.u32 $r2, $r6, $r2;
	or.b32 $r6, $r13, $r14;
	add.u32 $r2, $r2, 0x5a827999;
	mov.u32 $r13, $r124;
	xor.b32 $r15, $r7, $r6;
	shl.u32 $r14, $r2, 0x00000005;
	@$p0.ne shr.u32 $r13, $r2, 0x0000001b;
	and.b32 $r15, $r4, $r15;
	or.b32 $r13, $r14, $r13;
	xor.b32 $r14, $r7, $r15;
	add.u32 $r14, $r13, $r14;
	mov.u32 $r13, $r124;
	add.u32 $r1, $r1, $r14;
	@$p0.ne shr.u32 $r13, $r4, 0x00000002;
	shl.u32 $r4, $r4, 0x0000001e;
	add.u32 $r1, $r5, $r1;
	or.b32 $r4, $r4, $r13;
	add.u32 $r13, $r1, 0x5a827999;
	mov.u32 $r1, $r124;
	xor.b32 $r14, $r6, $r4;
	shl.u32 $r5, $r13, 0x00000005;
	@$p0.ne shr.u32 $r1, $r13, 0x0000001b;
	and.b32 $r14, $r2, $r14;
	or.b32 $r1, $r5, $r1;
	xor.b32 $r5, $r6, $r14;
	add.u32 $r5, $r1, $r5;
	mov.u32 $r1, $r124;
	add.u32 $r0, $r0, $r5;
	@$p0.ne shr.u32 $r1, $r2, 0x00000002;
	shl.u32 $r2, $r2, 0x0000001e;
	add.u32 $r0, $r7, $r0;
	or.b32 $r2, $r2, $r1;
	add.u32 $r5, $r0, 0x5a827999;
	mov.u32 $r0, $r124;
	xor.b32 $r7, $r4, $r2;
	shl.u32 $r1, $r5, 0x00000005;
	@$p0.ne shr.u32 $r0, $r5, 0x0000001b;
	and.b32 $r14, $r13, $r7;
	or.b32 $r7, $r1, $r0;
	add.u32 $ofs4, $ofs1, 0x00000100;
	mov.u32 $r42, $ofs4;
	add.u32 $ofs3, $ofs1, 0x00000680;
	xor.b32 $r14, $r4, $r14;
	add.u32 $ofs4, $ofs1, 0x00000400;
	mov.u32 $r43, $ofs4;
	shl.b32 $ofs4, $r42, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	mov.half.u32 $r1, s[$ofs3+0x0000];
	add.half.u32 $r14, $r7, $r14;
	mov.u32 $r7, $r124;
	xor.b32 $r0, s[$ofs1+0x0000], $r0;
	shl.b32 $ofs4, $r43, 0x0;
	xor.b32 $r1, s[$ofs4+0x0000], $r1;
	add.u32 $r14, $r3, $r14;
	@$p0.ne shr.u32 $r7, $r13, 0x00000002;
	shl.u32 $r3, $r13, 0x0000001e;
	xor.b32 $r1, $r0, $r1;
	mov.u32 $r0, $r124;
	add.u32 $r13, $r6, $r14;
	or.b32 $r17, $r3, $r7;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r0, $r1, 0x0000001f;
	add.u32 $r3, $r13, 0x5a827999;
	shl.u32 $r1, $r1, 0x00000001;
	shl.u32 $r13, $r3, 0x00000005;
	@$p0.ne shr.u32 $r6, $r3, 0x0000001b;
	or.b32 $r7, $r0, $r1;
	xor.b32 $r0, $r17, $r2;
	or.b32 $r6, $r13, $r6;
	add.u32 $ofs4, $ofs1, 0x00000180;
	mov.u32 $r44, $ofs4;
	add.u32 $ofs4, $ofs1, 0x00000480;
	mov.u32 $r45, $ofs4;
	and.b32 $r0, $r5, $r0;
	mov.u32 s[$ofs1+0x0000], $r7;
	add.u32 $ofs4, $ofs1, 0x00000700;
	mov.u32 $r46, $ofs4;
	add.u32 $ofs4, $ofs1, 0x00000080;
	mov.u32 $r47, $ofs4;
	xor.b32 $r13, $r2, $r0;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r1, s[$ofs4+0x0000];
	add.u32 $r6, $r6, $r13;
	shl.b32 $ofs4, $r47, 0x0;
	xor.b32 $r0, s[$ofs4+0x0000], $r0;
	shl.b32 $ofs4, $r45, 0x0;
	xor.b32 $r1, s[$ofs4+0x0000], $r1;
	add.u32 $r6, $r7, $r6;
	xor.b32 $r1, $r0, $r1;
	mov.u32 $r0, $r124;
	add.u32 $r6, $r4, $r6;
	mov.u32 $r4, $r124;
	@$p0.ne shr.u32 $r0, $r1, 0x0000001f;
	shl.u32 $r1, $r1, 0x00000001;
	@$p0.ne shr.u32 $r4, $r5, 0x00000002;
	shl.u32 $r5, $r5, 0x0000001e;
	or.b32 $r13, $r0, $r1;
	add.u32 $r20, $r6, 0x5a827999;
	mov.u32 $r0, $r124;
	or.b32 $r4, $r5, $r4;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r7, s[$ofs4+0x0000];
	shl.u32 $r5, $r20, 0x00000005;
	@$p0.ne shr.u32 $r0, $r20, 0x0000001b;
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r1, s[$ofs4+0x0000];
	xor.b32 $r14, $r4, $r17;
	shl.b32 $ofs4, $r45, 0x0;
	mov.u32 $r19, s[$ofs4+0x0000];
	or.b32 $r6, $r5, $r0;
	add.u32 $ofs4, $ofs1, 0x00000200;
	mov.u32 $r48, $ofs4;
	and.b32 $r0, $r3, $r14;
	mov.u32 s[$ofs1+0x0080], $r13;
	add.u32 $ofs4, $ofs1, 0x00000780;
	mov.u32 $r49, $ofs4;
	add.u32 $ofs4, $ofs1, 0x00000500;
	mov.u32 $r50, $ofs4;
	xor.b32 $r14, $r17, $r0;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r5, s[$ofs4+0x0000];
	add.u32 $r6, $r6, $r14;
	shl.b32 $ofs4, $r42, 0x0;
	xor.b32 $r0, s[$ofs4+0x0000], $r0;
	shl.b32 $ofs4, $r50, 0x0;
	xor.b32 $r5, s[$ofs4+0x0000], $r5;
	add.u32 $r6, $r13, $r6;
	xor.b32 $r5, $r0, $r5;
	mov.u32 $r0, $r124;
	add.u32 $r6, $r2, $r6;
	mov.u32 $r2, $r124;
	@$p0.ne shr.u32 $r0, $r5, 0x0000001f;
	shl.u32 $r5, $r5, 0x00000001;
	@$p0.ne shr.u32 $r2, $r3, 0x00000002;
	shl.u32 $r3, $r3, 0x0000001e;
	or.b32 $r16, $r0, $r5;
	or.b32 $r3, $r3, $r2;
	add.u32 $ofs4, $ofs1, 0x00000280;
	mov.u32 $r51, $ofs4;
	mov.u32 $r2, $r124;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r18, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r5, s[$ofs4+0x0000];
	add.u32 $r14, $r6, 0x5a827999;
	shl.b32 $ofs4, $r50, 0x0;
	mov.u32 $r6, s[$ofs4+0x0000];
	xor.b32 $r0, $r4, $r3;
	shl.b32 $ofs4, $r49, 0x0;
	xor.b32 $r22, s[$ofs4+0x0000], $r13;
	shl.u32 $r15, $r14, 0x00000005;
	@$p0.ne shr.u32 $r2, $r14, 0x0000001b;
	and.b32 $r0, $r20, $r0;
	mov.u32 s[$ofs1+0x0100], $r16;
	add.u32 $ofs4, $ofs1, 0x00000580;
	mov.u32 $r52, $ofs4;
	or.b32 $r21, $r15, $r2;
	xor.b32 $r23, $r4, $r0;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r2, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	mov.u32 $r15, $r124;
	add.u32 $r21, $r21, $r23;
	xor.b32 $r2, $r7, $r2;
	xor.b32 $r0, s[$ofs1+0x0000], $r0;
	@$p0.ne shr.u32 $r15, $r20, 0x00000002;
	add.u32 $r7, $r16, $r21;
	shl.u32 $r20, $r20, 0x0000001e;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r17, $r17, $r7;
	or.b32 $r24, $r20, $r15;
	mov.u32 $r7, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	add.u32 $r28, $r17, 0x5a827999;
	shl.u32 $r15, $r2, 0x00000001;
	xor.b32 $r2, $r3, $r24;
	shl.u32 $r17, $r28, 0x00000005;
	@$p0.ne shr.u32 $r7, $r28, 0x0000001b;
	or.b32 $r15, $r0, $r15;
	or.b32 $r7, $r17, $r7;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r17, s[$ofs4+0x0000];
	and.b32 $r0, $r14, $r2;
	mov.u32 $r2, s[$ofs1+0x0000];
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r20, s[$ofs4+0x0000];
	mov.u32 $r21, s[$ofs4+0x0000];
	xor.b32 $r25, $r3, $r0;
	mov.u32 $r0, s[$ofs1+0x0000];
	xor.b32 $r23, s[$ofs1+0x0000], $r16;
	add.u32 $r7, $r7, $r25;
	add.u32 $ofs4, $ofs1, 0x00000300;
	mov.u32 $r53, $ofs4;
	mov.u32 s[$ofs1+0x0180], $r15;
	add.u32 $r26, $r15, $r7;
	mov.u32 $r25, s[$ofs4+0x0000];
	add.u32 $ofs4, $ofs1, 0x00000600;
	mov.u32 $r55, $ofs4;
	mov.u32 $r7, $r124;
	add.u32 $r4, $r4, $r26;
	xor.b32 $r26, $r18, $r25;
	xor.b32 $r18, s[$ofs4+0x0000], $r13;
	@$p0.ne shr.u32 $r7, $r14, 0x00000002;
	shl.u32 $r14, $r14, 0x0000001e;
	add.u32 $r25, $r4, 0x5a827999;
	mov.u32 $r4, $r124;
	xor.b32 $r18, $r18, $r26;
	or.b32 $r27, $r14, $r7;
	shl.u32 $r7, $r25, 0x00000005;
	@$p0.ne shr.u32 $r4, $r25, 0x0000001b;
	mov.u32 $r14, $r124;
	or.b32 $r4, $r7, $r4;
	@$p0.ne shr.u32 $r14, $r18, 0x0000001f;
	xor.b32 $r7, $r28, $r27;
	shl.u32 $r18, $r18, 0x00000001;
	xor.b32 $r7, $r24, $r7;
	or.b32 $r14, $r14, $r18;
	add.half.u32 $r4, $r4, $r7;
	add.half.u32 $r4, $r14, $r4;
	add.u32 $r7, $r3, $r4;
	shl.b32 $ofs4, $r53, 0x0;
	mov.u32 $r18, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r55, 0x0;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.u32 $r3, s[$ofs4+0x0000];
	add.u32 $ofs4, $ofs1, 0x00000380;
	mov.u32 $r54, $ofs4;
	mov.u32 s[$ofs1+0x0200], $r14;
	mov.u32 $r26, s[$ofs4+0x0000];
	xor.b32 $r26, $r17, $r26;
	xor.b32 $r17, s[$ofs3+0x0000], $r16;
	xor.b32 $r26, $r17, $r26;
	mov.u32 $r17, $r124;
	@$p0.ne shr.u32 $r17, $r26, 0x0000001f;
	shl.u32 $r26, $r26, 0x00000001;
	or.b32 $r17, $r17, $r26;
	mov.u32 $r26, s[$ofs4+0x0000];
	xor.b32 $r20, $r19, $r20;
	xor.b32 $r19, $r19, $r26;
	mov.u32 $r26, s[$ofs3+0x0000];
	xor.b32 $r21, $r21, $r26;
	mov.u32 $r26, $r124;
	@$p0.ne shr.u32 $r26, $r28, 0x00000002;
	shl.u32 $r28, $r28, 0x0000001e;
	or.b32 $r26, $r28, $r26;
	add.u32 $r28, $r7, 0x6ed9eba1;
	mov.u32 $r7, $r124;
	shl.u32 $r29, $r28, 0x00000005;
	@$p0.ne shr.u32 $r7, $r28, 0x0000001b;
	or.b32 $r7, $r29, $r7;
	xor.b32 $r29, $r25, $r26;
	xor.b32 $r29, $r27, $r29;
	add.half.u32 $r7, $r7, $r29;
	add.half.u32 $r7, $r17, $r7;
	add.half.u32 $r29, $r24, $r7;
	mov.half.u32 $r7, s[$ofs3+0x0000];
	mov.u32 s[$ofs1+0x0280], $r17;
	shl.b32 $ofs4, $r43, 0x0;
	mov.u32 $r24, s[$ofs4+0x0000];
	xor.b32 $r18, $r18, $r24;
	xor.b32 $r0, $r1, $r0;
	xor.b32 $r3, $r1, $r3;
	xor.b32 $r1, $r1, $r15;
	xor.b32 $r18, $r1, $r18;
	mov.u32 $r1, $r124;
	@$p0.ne shr.u32 $r1, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r1, $r1, $r18;
	xor.b32 $r13, $r13, $r1;
	xor.b32 $r18, $r13, $r20;
	mov.u32 $r13, s[$ofs4+0x0000];
	xor.b32 $r4, $r6, $r4;
	xor.b32 $r6, $r6, $r13;
	xor.b32 $r13, $r2, $r17;
	mov.u32 $r2, $r124;
	xor.b32 $r6, $r13, $r6;
	@$p0.ne shr.u32 $r2, $r25, 0x00000002;
	shl.u32 $r13, $r25, 0x0000001e;
	add.u32 $r24, $r29, 0x6ed9eba1;
	mov.u32 $r20, $r124;
	or.b32 $r2, $r13, $r2;
	shl.u32 $r13, $r24, 0x00000005;
	@$p0.ne shr.u32 $r20, $r24, 0x0000001b;
	or.b32 $r13, $r13, $r20;
	xor.b32 $r20, $r2, $r28;
	xor.b32 $r20, $r26, $r20;
	add.u32 $r20, $r13, $r20;
	xor.b32 $r13, $r5, $r14;
	add.u32 $r20, $r1, $r20;
	xor.b32 $r19, $r13, $r19;
	mov.u32 $r13, $r124;
	add.u32 $r25, $r27, $r20;
	mov.u32 $r20, $r124;
	@$p0.ne shr.u32 $r13, $r19, 0x0000001f;
	shl.u32 $r19, $r19, 0x00000001;
	or.b32 $r13, $r13, $r19;
	@$p0.ne shr.u32 $r20, $r28, 0x00000002;
	shl.u32 $r19, $r28, 0x0000001e;
	add.u32 $r27, $r25, 0x6ed9eba1;
	mov.u32 $r25, $r124;
	or.b32 $r19, $r19, $r20;
	shl.u32 $r20, $r27, 0x00000005;
	@$p0.ne shr.u32 $r25, $r27, 0x0000001b;
	or.b32 $r20, $r20, $r25;
	xor.b32 $r25, $r24, $r19;
	xor.b32 $r25, $r2, $r25;
	add.half.u32 $r20, $r20, $r25;
	add.half.u32 $r25, $r13, $r20;
	mov.u32 $r20, $r124;
	add.u32 $r26, $r26, $r25;
	mov.u32 $r25, $r124;
	@$p0.ne shr.u32 $r20, $r6, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000001;
	or.b32 $r6, $r20, $r6;
	@$p0.ne shr.u32 $r25, $r24, 0x00000002;
	shl.u32 $r20, $r24, 0x0000001e;
	add.u32 $r26, $r26, 0x6ed9eba1;
	mov.u32 $r24, $r124;
	or.b32 $r20, $r20, $r25;
	shl.u32 $r25, $r26, 0x00000005;
	@$p0.ne shr.u32 $r24, $r26, 0x0000001b;
	or.b32 $r24, $r25, $r24;
	xor.b32 $r25, $r27, $r20;
	xor.b32 $r25, $r19, $r25;
	add.half.u32 $r24, $r24, $r25;
	add.half.u32 $r25, $r6, $r24;
	mov.u32 $r24, $r124;
	add.u32 $r25, $r2, $r25;
	mov.u32 $r2, $r124;
	@$p0.ne shr.u32 $r24, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r18, $r24, $r18;
	@$p0.ne shr.u32 $r2, $r27, 0x00000002;
	shl.u32 $r24, $r27, 0x0000001e;
	add.u32 $r27, $r25, 0x6ed9eba1;
	mov.u32 $r25, $r124;
	or.b32 $r2, $r24, $r2;
	shl.u32 $r24, $r27, 0x00000005;
	@$p0.ne shr.u32 $r25, $r27, 0x0000001b;
	or.b32 $r24, $r24, $r25;
	xor.b32 $r25, $r26, $r2;
	xor.b32 $r25, $r20, $r25;
	add.half.u32 $r24, $r24, $r25;
	add.half.u32 $r25, $r18, $r24;
	mov.u32 $r24, $r124;
	add.u32 $r19, $r19, $r25;
	xor.b32 $r16, $r16, $r13;
	@$p0.ne shr.u32 $r24, $r26, 0x00000002;
	shl.u32 $r25, $r26, 0x0000001e;
	add.u32 $r26, $r19, 0x6ed9eba1;
	mov.u32 $r19, $r124;
	xor.b32 $r4, $r16, $r4;
	or.b32 $r24, $r25, $r24;
	shl.u32 $r25, $r26, 0x00000005;
	@$p0.ne shr.u32 $r19, $r26, 0x0000001b;
	mov.u32 $r16, $r124;
	or.b32 $r19, $r25, $r19;
	@$p0.ne shr.u32 $r16, $r4, 0x0000001f;
	xor.b32 $r25, $r27, $r24;
	shl.u32 $r4, $r4, 0x00000001;
	xor.b32 $r25, $r2, $r25;
	or.b32 $r4, $r16, $r4;
	add.half.u32 $r16, $r19, $r25;
	add.half.u32 $r19, $r4, $r16;
	xor.b32 $r16, $r15, $r6;
	add.u32 $r20, $r20, $r19;
	mov.u32 $r15, $r124;
	xor.b32 $r19, $r16, $r21;
	add.u32 $r20, $r20, 0x6ed9eba1;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r15, $r27, 0x00000002;
	shl.u32 $r25, $r27, 0x0000001e;
	shl.u32 $r27, $r20, 0x00000005;
	@$p0.ne shr.u32 $r16, $r20, 0x0000001b;
	mov.u32 $r21, $r124;
	or.b32 $r15, $r25, $r15;
	or.b32 $r16, $r27, $r16;
	@$p0.ne shr.u32 $r21, $r19, 0x0000001f;
	xor.b32 $r25, $r15, $r26;
	shl.u32 $r19, $r19, 0x00000001;
	xor.b32 $r25, $r24, $r25;
	or.b32 $r19, $r21, $r19;
	add.half.u32 $r16, $r16, $r25;
	add.half.u32 $r16, $r19, $r16;
	xor.b32 $r14, $r14, $r18;
	add.u32 $r16, $r2, $r16;
	mov.u32 $r2, $r124;
	xor.b32 $r14, $r14, $r3;
	add.u32 $r16, $r16, 0x6ed9eba1;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r2, $r26, 0x00000002;
	shl.u32 $r26, $r26, 0x0000001e;
	shl.u32 $r25, $r16, 0x00000005;
	@$p0.ne shr.u32 $r3, $r16, 0x0000001b;
	mov.u32 $r21, $r124;
	or.b32 $r2, $r26, $r2;
	or.b32 $r3, $r25, $r3;
	@$p0.ne shr.u32 $r21, $r14, 0x0000001f;
	xor.b32 $r25, $r20, $r2;
	shl.u32 $r14, $r14, 0x00000001;
	xor.b32 $r25, $r15, $r25;
	or.b32 $r14, $r21, $r14;
	add.half.u32 $r3, $r3, $r25;
	add.half.u32 $r3, $r14, $r3;
	xor.b32 $r5, $r5, $r7;
	xor.b32 $r7, $r17, $r4;
	add.u32 $r17, $r24, $r3;
	mov.u32 $r3, $r124;
	xor.b32 $r7, $r7, $r5;
	add.u32 $r17, $r17, 0x6ed9eba1;
	mov.u32 $r5, $r124;
	@$p0.ne shr.u32 $r3, $r20, 0x00000002;
	shl.u32 $r24, $r20, 0x0000001e;
	shl.u32 $r21, $r17, 0x00000005;
	@$p0.ne shr.u32 $r5, $r17, 0x0000001b;
	mov.u32 $r20, $r124;
	or.b32 $r3, $r24, $r3;
	or.b32 $r5, $r21, $r5;
	@$p0.ne shr.u32 $r20, $r7, 0x0000001f;
	xor.b32 $r21, $r16, $r3;
	shl.u32 $r7, $r7, 0x00000001;
	xor.b32 $r21, $r2, $r21;
	or.b32 $r7, $r20, $r7;
	add.u32 $r5, $r5, $r21;
	xor.b32 $r20, $r1, $r19;
	add.u32 $r5, $r7, $r5;
	mov.u32 s[$ofs1+0x0300], $r1;
	xor.b32 $r0, $r20, $r0;
	add.u32 $r15, $r15, $r5;
	mov.u32 s[$ofs1+0x0380], $r13;
	mov.u32 $r5, $r124;
	mov.u32 $r1, $r124;
	add.u32 $r15, $r15, 0x6ed9eba1;
	mov.u32 s[$ofs1+0x0400], $r6;
	@$p0.ne shr.u32 $r5, $r16, 0x00000002;
	shl.u32 $r20, $r16, 0x0000001e;
	shl.u32 $r21, $r15, 0x00000005;
	@$p0.ne shr.u32 $r1, $r15, 0x0000001b;
	mov.u32 $r16, $r124;
	or.b32 $r5, $r20, $r5;
	mov.u32 s[$ofs1+0x0480], $r18;
	or.b32 $r1, $r21, $r1;
	@$p0.ne shr.u32 $r16, $r0, 0x0000001f;
	xor.b32 $r18, $r17, $r5;
	shl.u32 $r0, $r0, 0x00000001;
	xor.b32 $r18, $r3, $r18;
	or.b32 $r0, $r16, $r0;
	add.u32 $r1, $r1, $r18;
	mov.u32 s[$ofs1+0x0500], $r4;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs1+0x0580], $r19;
	mov.u32 $r4, $r124;
	add.u32 $r1, $r2, $r1;
	xor.b32 $r2, $r13, $r14;
	mov.u32 s[$ofs1+0x0600], $r14;
	@$p0.ne shr.u32 $r4, $r17, 0x00000002;
	shl.u32 $r16, $r17, 0x0000001e;
	add.u32 $r13, $r1, 0x6ed9eba1;
	mov.u32 $r14, $r124;
	xor.b32 $r2, $r22, $r2;
	or.b32 $r1, $r16, $r4;
	shl.u32 $r16, $r13, 0x00000005;
	@$p0.ne shr.u32 $r14, $r13, 0x0000001b;
	mov.u32 $r4, $r124;
	xor.b32 $r6, $r6, $r7;
	mov.u32 s[$ofs1+0x0680], $r7;
	or.b32 $r7, $r16, $r14;
	@$p0.ne shr.u32 $r4, $r2, 0x0000001f;
	xor.b32 $r14, $r15, $r1;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r14, $r5, $r14;
	or.b32 $r4, $r4, $r2;
	mov.u32 $r2, $r124;
	add.u32 $r7, $r7, $r14;
	xor.b32 $r6, $r23, $r6;
	mov.u32 s[$ofs1+0x0700], $r0;
	@$p0.ne shr.u32 $r2, $r15, 0x00000002;
	add.u32 $r14, $r4, $r7;
	shl.u32 $r7, $r15, 0x0000001e;
	mov.u32 s[$ofs1+0x0780], $r4;
	mov.u32 $r0, $r124;
	add.u32 $r14, $r3, $r14;
	or.b32 $r2, $r7, $r2;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r0, $r6, 0x0000001f;
	shl.u32 $r4, $r6, 0x00000001;
	add.u32 $r6, $r14, 0x6ed9eba1;
	or.b32 $r4, $r0, $r4;
	shl.u32 $r0, $r6, 0x00000005;
	@$p0.ne shr.u32 $r3, $r6, 0x0000001b;
	xor.b32 $r14, $r2, $r13;
	mov.u32 s[$ofs1+0x0000], $r4;
	or.b32 $r7, $r0, $r3;
	xor.b32 $r14, $r1, $r14;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r3, s[$ofs4+0x0000];
	add.u32 $r7, $r7, $r14;
	shl.b32 $ofs4, $r47, 0x0;
	xor.b32 $r0, s[$ofs4+0x0000], $r0;
	shl.b32 $ofs4, $r45, 0x0;
	xor.b32 $r3, s[$ofs4+0x0000], $r3;
	add.u32 $r4, $r4, $r7;
	xor.b32 $r3, $r0, $r3;
	mov.u32 $r0, $r124;
	add.u32 $r4, $r5, $r4;
	mov.u32 $r5, $r124;
	@$p0.ne shr.u32 $r0, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	@$p0.ne shr.u32 $r5, $r13, 0x00000002;
	shl.u32 $r7, $r13, 0x0000001e;
	or.b32 $r13, $r0, $r3;
	or.b32 $r3, $r7, $r5;
	mov.u32 $r5, $r124;
	add.u32 $r4, $r4, 0x6ed9eba1;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r14, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r45, 0x0;
	mov.u32 $r19, s[$ofs4+0x0000];
	shl.u32 $r15, $r4, 0x00000005;
	@$p0.ne shr.u32 $r5, $r4, 0x0000001b;
	xor.b32 $r7, $r6, $r3;
	mov.u32 s[$ofs1+0x0080], $r13;
	or.b32 $r5, $r15, $r5;
	xor.b32 $r16, $r2, $r7;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r15, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r7, s[$ofs4+0x0000];
	add.u32 $r5, $r5, $r16;
	shl.b32 $ofs4, $r42, 0x0;
	xor.b32 $r15, s[$ofs4+0x0000], $r15;
	shl.b32 $ofs4, $r50, 0x0;
	xor.b32 $r7, s[$ofs4+0x0000], $r7;
	add.u32 $r5, $r13, $r5;
	xor.b32 $r15, $r15, $r7;
	mov.u32 $r7, $r124;
	add.u32 $r5, $r1, $r5;
	mov.u32 $r1, $r124;
	@$p0.ne shr.u32 $r7, $r15, 0x0000001f;
	shl.u32 $r15, $r15, 0x00000001;
	@$p0.ne shr.u32 $r1, $r6, 0x00000002;
	shl.u32 $r6, $r6, 0x0000001e;
	or.b32 $r16, $r7, $r15;
	or.b32 $r1, $r6, $r1;
	mov.u32 $r17, $r124;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r18, s[$ofs4+0x0000];
	add.u32 $r15, $r5, 0x6ed9eba1;
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r5, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r50, 0x0;
	mov.u32 $r6, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r49, 0x0;
	xor.b32 $r22, s[$ofs4+0x0000], $r13;
	shl.u32 $r20, $r15, 0x00000005;
	@$p0.ne shr.u32 $r17, $r15, 0x0000001b;
	xor.b32 $r7, $r4, $r1;
	mov.u32 s[$ofs1+0x0100], $r16;
	or.b32 $r20, $r20, $r17;
	xor.b32 $r21, $r3, $r7;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r17, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r7, s[$ofs4+0x0000];
	add.u32 $r20, $r20, $r21;
	xor.b32 $r14, $r14, $r17;
	xor.b32 $r17, s[$ofs1+0x0000], $r7;
	add.u32 $r7, $r16, $r20;
	xor.b32 $r17, $r17, $r14;
	mov.u32 $r14, $r124;
	add.u32 $r20, $r2, $r7;
	mov.u32 $r7, $r124;
	mov.u32 $r2, $r124;
	@$p0.ne shr.u32 $r14, $r17, 0x0000001f;
	add.u32 $r28, $r20, 0x6ed9eba1;
	shl.u32 $r20, $r17, 0x00000001;
	@$p0.ne shr.u32 $r7, $r4, 0x00000002;
	shl.u32 $r17, $r4, 0x0000001e;
	shl.u32 $r4, $r28, 0x00000005;
	@$p0.ne shr.u32 $r2, $r28, 0x0000001b;
	or.b32 $r14, $r14, $r20;
	or.b32 $r26, $r17, $r7;
	or.b32 $r7, $r4, $r2;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r17, s[$ofs4+0x0000];
	mov.u32 $r4, s[$ofs1+0x0000];
	xor.b32 $r23, $r15, $r26;
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r20, s[$ofs4+0x0000];
	mov.u32 $r21, s[$ofs4+0x0000];
	mov.u32 $r2, s[$ofs1+0x0000];
	xor.b32 $r24, $r1, $r23;
	xor.b32 $r23, s[$ofs1+0x0000], $r16;
	add.u32 $r7, $r7, $r24;
	mov.u32 s[$ofs1+0x0180], $r14;
	add.u32 $r25, $r14, $r7;
	shl.b32 $ofs4, $r53, 0x0;
	mov.u32 $r24, s[$ofs4+0x0000];
	mov.u32 $r7, $r124;
	add.u32 $r3, $r3, $r25;
	xor.b32 $r24, $r18, $r24;
	shl.b32 $ofs4, $r55, 0x0;
	xor.b32 $r18, s[$ofs4+0x0000], $r13;
	@$p0.ne shr.u32 $r7, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	add.u32 $r27, $r3, 0x6ed9eba1;
	mov.u32 $r3, $r124;
	xor.b32 $r18, $r18, $r24;
	or.b32 $r25, $r15, $r7;
	shl.u32 $r7, $r27, 0x00000005;
	@$p0.ne shr.u32 $r3, $r27, 0x0000001b;
	mov.u32 $r15, $r124;
	or.b32 $r3, $r7, $r3;
	@$p0.ne shr.u32 $r15, $r18, 0x0000001f;
	xor.b32 $r7, $r28, $r25;
	shl.u32 $r18, $r18, 0x00000001;
	xor.b32 $r7, $r26, $r7;
	or.b32 $r15, $r15, $r18;
	add.half.u32 $r3, $r3, $r7;
	add.half.u32 $r3, $r15, $r3;
	add.u32 $r7, $r1, $r3;
	shl.b32 $ofs4, $r53, 0x0;
	mov.u32 $r18, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r55, 0x0;
	mov.u32 $r3, s[$ofs4+0x0000];
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.u32 s[$ofs1+0x0200], $r15;
	shl.b32 $ofs4, $r54, 0x0;
	mov.u32 $r24, s[$ofs4+0x0000];
	xor.b32 $r24, $r17, $r24;
	xor.b32 $r17, s[$ofs3+0x0000], $r16;
	xor.b32 $r24, $r17, $r24;
	mov.u32 $r17, $r124;
	@$p0.ne shr.u32 $r17, $r24, 0x0000001f;
	shl.u32 $r24, $r24, 0x00000001;
	or.b32 $r17, $r17, $r24;
	mov.u32 $r24, s[$ofs4+0x0000];
	xor.b32 $r20, $r19, $r20;
	xor.b32 $r19, $r19, $r24;
	mov.u32 $r24, s[$ofs3+0x0000];
	xor.b32 $r21, $r21, $r24;
	mov.u32 $r24, $r124;
	@$p0.ne shr.u32 $r24, $r28, 0x00000002;
	shl.u32 $r28, $r28, 0x0000001e;
	or.b32 $r24, $r28, $r24;
	add.u32 $r28, $r7, 0x6ed9eba1;
	mov.u32 $r7, $r124;
	shl.u32 $r29, $r28, 0x00000005;
	@$p0.ne shr.u32 $r7, $r28, 0x0000001b;
	or.b32 $r7, $r29, $r7;
	xor.b32 $r29, $r24, $r27;
	xor.b32 $r29, $r25, $r29;
	add.half.u32 $r7, $r7, $r29;
	add.half.u32 $r7, $r17, $r7;
	add.half.u32 $r29, $r26, $r7;
	mov.half.u32 $r7, s[$ofs3+0x0000];
	mov.u32 s[$ofs1+0x0280], $r17;
	shl.b32 $ofs4, $r43, 0x0;
	mov.u32 $r26, s[$ofs4+0x0000];
	xor.b32 $r18, $r18, $r26;
	xor.b32 $r2, $r0, $r2;
	xor.b32 $r1, $r0, $r1;
	xor.b32 $r0, $r0, $r14;
	xor.b32 $r18, $r0, $r18;
	mov.u32 $r0, $r124;
	@$p0.ne shr.u32 $r0, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r0, $r0, $r18;
	xor.b32 $r13, $r13, $r0;
	xor.b32 $r18, $r13, $r20;
	mov.u32 $r13, s[$ofs4+0x0000];
	xor.b32 $r3, $r6, $r3;
	xor.b32 $r6, $r6, $r13;
	xor.b32 $r13, $r4, $r17;
	mov.u32 $r4, $r124;
	xor.b32 $r6, $r13, $r6;
	@$p0.ne shr.u32 $r4, $r27, 0x00000002;
	shl.u32 $r13, $r27, 0x0000001e;
	add.u32 $r26, $r29, 0x6ed9eba1;
	mov.u32 $r20, $r124;
	or.b32 $r4, $r13, $r4;
	shl.u32 $r13, $r26, 0x00000005;
	@$p0.ne shr.u32 $r20, $r26, 0x0000001b;
	or.b32 $r13, $r13, $r20;
	xor.b32 $r20, $r28, $r4;
	xor.b32 $r20, $r24, $r20;
	add.u32 $r20, $r13, $r20;
	xor.b32 $r13, $r5, $r15;
	add.u32 $r20, $r0, $r20;
	xor.b32 $r19, $r13, $r19;
	mov.u32 $r13, $r124;
	add.u32 $r25, $r25, $r20;
	mov.u32 $r20, $r124;
	@$p0.ne shr.u32 $r13, $r19, 0x0000001f;
	shl.u32 $r19, $r19, 0x00000001;
	or.b32 $r13, $r13, $r19;
	@$p0.ne shr.u32 $r20, $r28, 0x00000002;
	shl.u32 $r19, $r28, 0x0000001e;
	add.u32 $r27, $r25, 0x6ed9eba1;
	mov.u32 $r25, $r124;
	or.b32 $r19, $r19, $r20;
	shl.u32 $r20, $r27, 0x00000005;
	@$p0.ne shr.u32 $r25, $r27, 0x0000001b;
	or.b32 $r20, $r20, $r25;
	xor.b32 $r25, $r26, $r19;
	xor.b32 $r25, $r4, $r25;
	add.u32 $r20, $r20, $r25;
	xor.b32 $r25, $r16, $r13;
	mov.u32 $r16, $r124;
	xor.b32 $r3, $r25, $r3;
	@$p0.ne shr.u32 $r16, $r26, 0x00000002;
	add.u32 $r20, $r13, $r20;
	shl.u32 $r26, $r26, 0x0000001e;
	mov.u32 $r25, $r124;
	add.u32 $r20, $r24, $r20;
	or.b32 $r16, $r26, $r16;
	@$p0.ne shr.u32 $r25, $r6, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000001;
	or.b32 $r24, $r27, $r16;
	or.b32 $r6, $r25, $r6;
	and.b32 $r25, $r27, $r16;
	and.b32 $r24, $r19, $r24;
	add.u32 $r26, $r20, 0x6ed9eba1;
	mov.u32 $r20, $r124;
	or.b32 $r24, $r24, $r25;
	shl.u32 $r25, $r26, 0x00000005;
	@$p0.ne shr.u32 $r20, $r26, 0x0000001b;
	or.b32 $r25, $r25, $r20;
	mov.u32 $r20, $r124;
	add.u32 $r24, $r24, $r25;
	@$p0.ne shr.u32 $r20, $r27, 0x00000002;
	add.u32 $r24, $r6, $r24;
	shl.u32 $r27, $r27, 0x0000001e;
	mov.u32 $r25, $r124;
	add.u32 $r4, $r4, $r24;
	or.b32 $r20, $r27, $r20;
	@$p0.ne shr.u32 $r25, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r24, $r26, $r20;
	or.b32 $r18, $r25, $r18;
	and.b32 $r25, $r26, $r20;
	and.b32 $r24, $r16, $r24;
	add.u32 $r27, $r4, 0x8f1bbcdc;
	mov.u32 $r4, $r124;
	or.b32 $r24, $r24, $r25;
	shl.u32 $r25, $r27, 0x00000005;
	@$p0.ne shr.u32 $r4, $r27, 0x0000001b;
	or.b32 $r25, $r25, $r4;
	mov.u32 $r4, $r124;
	add.u32 $r24, $r24, $r25;
	@$p0.ne shr.u32 $r4, $r26, 0x00000002;
	add.u32 $r24, $r18, $r24;
	shl.u32 $r26, $r26, 0x0000001e;
	mov.u32 $r25, $r124;
	add.u32 $r19, $r19, $r24;
	or.b32 $r4, $r26, $r4;
	@$p0.ne shr.u32 $r25, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	or.b32 $r24, $r4, $r27;
	or.b32 $r3, $r25, $r3;
	and.b32 $r25, $r4, $r27;
	and.b32 $r24, $r20, $r24;
	add.u32 $r26, $r19, 0x8f1bbcdc;
	mov.u32 $r19, $r124;
	or.b32 $r24, $r24, $r25;
	shl.u32 $r25, $r26, 0x00000005;
	@$p0.ne shr.u32 $r19, $r26, 0x0000001b;
	or.b32 $r25, $r25, $r19;
	mov.u32 $r19, $r124;
	add.u32 $r24, $r24, $r25;
	@$p0.ne shr.u32 $r19, $r27, 0x00000002;
	shl.u32 $r25, $r27, 0x0000001e;
	add.u32 $r24, $r3, $r24;
	or.b32 $r19, $r25, $r19;
	add.u32 $r25, $r16, $r24;
	mov.u32 $r16, $r124;
	or.b32 $r24, $r19, $r26;
	xor.b32 $r14, $r14, $r6;
	add.u32 $r25, $r25, 0x8f1bbcdc;
	and.b32 $r27, $r19, $r26;
	and.b32 $r24, $r4, $r24;
	xor.b32 $r14, $r14, $r21;
	shl.u32 $r21, $r25, 0x00000005;
	@$p0.ne shr.u32 $r16, $r25, 0x0000001b;
	or.b32 $r27, $r27, $r24;
	mov.u32 $r24, $r124;
	or.b32 $r21, $r21, $r16;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r24, $r14, 0x0000001f;
	shl.u32 $r14, $r14, 0x00000001;
	or.b32 $r14, $r24, $r14;
	add.u32 $r21, $r27, $r21;
	@$p0.ne shr.u32 $r16, $r26, 0x00000002;
	shl.u32 $r24, $r26, 0x0000001e;
	add.u32 $r21, $r14, $r21;
	or.b32 $r16, $r24, $r16;
	add.u32 $r21, $r20, $r21;
	mov.u32 $r20, $r124;
	or.b32 $r24, $r16, $r25;
	add.u32 $r21, $r21, 0x8f1bbcdc;
	xor.b32 $r15, $r15, $r18;
	and.b32 $r26, $r16, $r25;
	and.b32 $r24, $r19, $r24;
	shl.u32 $r27, $r21, 0x00000005;
	@$p0.ne shr.u32 $r20, $r21, 0x0000001b;
	xor.b32 $r15, $r15, $r1;
	mov.u32 $r1, $r124;
	or.b32 $r24, $r24, $r26;
	or.b32 $r26, $r27, $r20;
	mov.u32 $r20, $r124;
	@$p0.ne shr.u32 $r1, $r15, 0x0000001f;
	shl.u32 $r15, $r15, 0x00000001;
	or.b32 $r1, $r1, $r15;
	add.u32 $r15, $r24, $r26;
	@$p0.ne shr.u32 $r20, $r25, 0x00000002;
	shl.u32 $r24, $r25, 0x0000001e;
	add.u32 $r15, $r1, $r15;
	or.b32 $r20, $r24, $r20;
	xor.b32 $r5, $r5, $r7;
	add.u32 $r24, $r4, $r15;
	mov.u32 $r4, $r124;
	or.b32 $r7, $r21, $r20;
	xor.b32 $r15, $r17, $r3;
	add.u32 $r17, $r24, 0x8f1bbcdc;
	and.b32 $r24, $r21, $r20;
	and.b32 $r7, $r16, $r7;
	xor.b32 $r5, $r15, $r5;
	shl.u32 $r15, $r17, 0x00000005;
	@$p0.ne shr.u32 $r4, $r17, 0x0000001b;
	or.b32 $r24, $r7, $r24;
	mov.u32 $r7, $r124;
	mov.u32 s[$ofs1+0x0300], $r0;
	or.b32 $r15, $r15, $r4;
	mov.u32 $r4, $r124;
	@$p0.ne shr.u32 $r7, $r5, 0x0000001f;
	mov.u32 s[$ofs1+0x0380], $r13;
	shl.u32 $r5, $r5, 0x00000001;
	or.b32 $r5, $r7, $r5;
	add.u32 $r7, $r24, $r15;
	mov.u32 s[$ofs1+0x0400], $r6;
	@$p0.ne shr.u32 $r4, $r21, 0x00000002;
	shl.u32 $r15, $r21, 0x0000001e;
	add.u32 $r7, $r5, $r7;
	mov.u32 s[$ofs1+0x0480], $r18;
	or.b32 $r4, $r15, $r4;
	add.u32 $r7, $r19, $r7;
	mov.u32 s[$ofs1+0x0500], $r3;
	mov.u32 $r3, $r124;
	or.b32 $r15, $r17, $r4;
	add.u32 $r7, $r7, 0x8f1bbcdc;
	xor.b32 $r0, $r0, $r14;
	and.b32 $r18, $r17, $r4;
	and.b32 $r15, $r20, $r15;
	shl.u32 $r19, $r7, 0x00000005;
	@$p0.ne shr.u32 $r3, $r7, 0x0000001b;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	or.b32 $r15, $r15, $r18;
	or.b32 $r18, $r19, $r3;
	mov.u32 $r3, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	or.b32 $r0, $r0, $r2;
	add.u32 $r2, $r15, $r18;
	mov.u32 s[$ofs1+0x0580], $r14;
	@$p0.ne shr.u32 $r3, $r17, 0x00000002;
	shl.u32 $r14, $r17, 0x0000001e;
	add.u32 $r2, $r0, $r2;
	xor.b32 $r13, $r13, $r1;
	mov.u32 s[$ofs1+0x0600], $r1;
	or.b32 $r1, $r14, $r3;
	add.u32 $r14, $r16, $r2;
	xor.b32 $r3, $r22, $r13;
	mov.u32 $r2, $r124;
	or.b32 $r15, $r1, $r7;
	add.u32 $r13, $r14, 0x8f1bbcdc;
	mov.u32 $r14, $r124;
	and.b32 $r16, $r1, $r7;
	and.b32 $r15, $r4, $r15;
	shl.u32 $r17, $r13, 0x00000005;
	@$p0.ne shr.u32 $r14, $r13, 0x0000001b;
	xor.b32 $r6, $r6, $r5;
	mov.u32 s[$ofs1+0x0680], $r5;
	or.b32 $r5, $r15, $r16;
	or.b32 $r14, $r17, $r14;
	@$p0.ne shr.u32 $r2, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	or.b32 $r3, $r2, $r3;
	mov.u32 $r2, $r124;
	add.u32 $r14, $r5, $r14;
	xor.b32 $r5, $r23, $r6;
	mov.u32 s[$ofs1+0x0700], $r0;
	@$p0.ne shr.u32 $r2, $r7, 0x00000002;
	add.u32 $r6, $r3, $r14;
	shl.u32 $r7, $r7, 0x0000001e;
	mov.u32 $r0, $r124;
	mov.u32 s[$ofs1+0x0780], $r3;
	add.u32 $r6, $r20, $r6;
	or.b32 $r3, $r7, $r2;
	@$p0.ne shr.u32 $r0, $r5, 0x0000001f;
	shl.u32 $r2, $r5, 0x00000001;
	or.b32 $r7, $r0, $r2;
	or.b32 $r14, $r3, $r13;
	add.u32 $r5, $r6, 0x8f1bbcdc;
	mov.u32 $r0, $r124;
	and.b32 $r2, $r3, $r13;
	and.b32 $r6, $r1, $r14;
	shl.u32 $r14, $r5, 0x00000005;
	@$p0.ne shr.u32 $r0, $r5, 0x0000001b;
	mov.u32 s[$ofs1+0x0000], $r7;
	or.b32 $r6, $r2, $r6;
	or.b32 $r14, $r14, $r0;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r0, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r2, s[$ofs4+0x0000];
	add.u32 $r6, $r6, $r14;
	shl.b32 $ofs4, $r47, 0x0;
	xor.b32 $r0, s[$ofs4+0x0000], $r0;
	shl.b32 $ofs4, $r45, 0x0;
	xor.b32 $r2, s[$ofs4+0x0000], $r2;
	add.u32 $r6, $r7, $r6;
	xor.b32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r4, $r4, $r6;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	@$p0.ne shr.u32 $r6, $r13, 0x00000002;
	shl.u32 $r7, $r13, 0x0000001e;
	or.b32 $r30, $r0, $r2;
	or.b32 $r0, $r7, $r6;
	mov.u32 $r6, $r124;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r15, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r7, s[$ofs4+0x0000];
	or.b32 $r2, $r0, $r5;
	add.u32 $r4, $r4, 0x8f1bbcdc;
	shl.b32 $ofs4, $r45, 0x0;
	mov.u32 $r16, s[$ofs4+0x0000];
	and.b32 $r14, $r0, $r5;
	and.b32 $r2, $r3, $r2;
	shl.u32 $r13, $r4, 0x00000005;
	@$p0.ne shr.u32 $r6, $r4, 0x0000001b;
	mov.u32 s[$ofs1+0x0080], $r30;
	or.b32 $r2, $r2, $r14;
	or.b32 $r14, $r13, $r6;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r13, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r6, s[$ofs4+0x0000];
	add.u32 $r2, $r2, $r14;
	shl.b32 $ofs4, $r42, 0x0;
	xor.b32 $r13, s[$ofs4+0x0000], $r13;
	shl.b32 $ofs4, $r50, 0x0;
	xor.b32 $r6, s[$ofs4+0x0000], $r6;
	add.u32 $r2, $r30, $r2;
	xor.b32 $r13, $r13, $r6;
	mov.u32 $r6, $r124;
	add.u32 $r2, $r1, $r2;
	mov.u32 $r1, $r124;
	@$p0.ne shr.u32 $r6, $r13, 0x0000001f;
	shl.u32 $r13, $r13, 0x00000001;
	@$p0.ne shr.u32 $r1, $r5, 0x00000002;
	shl.u32 $r5, $r5, 0x0000001e;
	or.b32 $r29, $r6, $r13;
	or.b32 $r1, $r5, $r1;
	mov.u32 $r14, $r124;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r13, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r6, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r50, 0x0;
	mov.u32 $r5, s[$ofs4+0x0000];
	or.b32 $r17, $r4, $r1;
	add.u32 $r2, $r2, 0x8f1bbcdc;
	shl.b32 $ofs4, $r49, 0x0;
	xor.b32 $r28, s[$ofs4+0x0000], $r30;
	and.b32 $r18, $r4, $r1;
	and.b32 $r17, $r0, $r17;
	shl.u32 $r19, $r2, 0x00000005;
	@$p0.ne shr.u32 $r14, $r2, 0x0000001b;
	mov.u32 s[$ofs1+0x0100], $r29;
	or.b32 $r17, $r17, $r18;
	or.b32 $r19, $r19, $r14;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r18, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r14, s[$ofs4+0x0000];
	add.u32 $r17, $r17, $r19;
	xor.b32 $r15, $r15, $r18;
	xor.b32 $r18, s[$ofs1+0x0000], $r14;
	add.u32 $r14, $r29, $r17;
	xor.b32 $r17, $r18, $r15;
	mov.u32 $r15, $r124;
	add.u32 $r3, $r3, $r14;
	mov.u32 $r14, $r124;
	@$p0.ne shr.u32 $r15, $r17, 0x0000001f;
	shl.u32 $r17, $r17, 0x00000001;
	@$p0.ne shr.u32 $r14, $r4, 0x00000002;
	shl.u32 $r4, $r4, 0x0000001e;
	or.b32 $r27, $r15, $r17;
	or.b32 $r26, $r4, $r14;
	mov.u32 $r19, $r124;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r17, s[$ofs4+0x0000];
	mov.u32 $r4, s[$ofs1+0x0000];
	or.b32 $r15, $r2, $r26;
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r18, s[$ofs4+0x0000];
	mov.u32 $r14, s[$ofs4+0x0000];
	and.b32 $r21, $r2, $r26;
	and.b32 $r20, $r1, $r15;
	add.u32 $r15, $r3, 0x8f1bbcdc;
	mov.u32 $r3, s[$ofs1+0x0000];
	xor.b32 $r25, s[$ofs1+0x0000], $r29;
	or.b32 $r20, $r20, $r21;
	shl.u32 $r21, $r15, 0x00000005;
	@$p0.ne shr.u32 $r19, $r15, 0x0000001b;
	mov.u32 s[$ofs1+0x0180], $r27;
	or.b32 $r21, $r21, $r19;
	shl.b32 $ofs4, $r53, 0x0;
	mov.u32 $r19, s[$ofs4+0x0000];
	add.u32 $r20, $r20, $r21;
	xor.b32 $r21, $r13, $r19;
	shl.b32 $ofs4, $r55, 0x0;
	xor.b32 $r13, s[$ofs4+0x0000], $r30;
	mov.u32 $r19, $r124;
	xor.b32 $r13, $r13, $r21;
	@$p0.ne shr.u32 $r19, $r2, 0x00000002;
	add.u32 $r21, $r27, $r20;
	shl.u32 $r20, $r2, 0x0000001e;
	mov.u32 $r2, $r124;
	add.u32 $r0, $r0, $r21;
	or.b32 $r24, $r20, $r19;
	@$p0.ne shr.u32 $r2, $r13, 0x0000001f;
	shl.u32 $r13, $r13, 0x00000001;
	or.b32 $r19, $r24, $r15;
	or.b32 $r23, $r2, $r13;
	and.b32 $r13, $r24, $r15;
	and.b32 $r2, $r26, $r19;
	add.u32 $r22, $r0, 0x8f1bbcdc;
	mov.u32 $r0, $r124;
	or.b32 $r2, $r2, $r13;
	shl.u32 $r13, $r22, 0x00000005;
	@$p0.ne shr.u32 $r0, $r22, 0x0000001b;
	or.b32 $r0, $r13, $r0;
	add.half.u32 $r0, $r2, $r0;
	add.half.u32 $r0, $r23, $r0;
	add.u32 $r13, $r1, $r0;
	shl.b32 $ofs4, $r53, 0x0;
	mov.u32 $r2, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r55, 0x0;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.u32 $r0, s[$ofs4+0x0000];
	mov.u32 s[$ofs1+0x0200], $r23;
	shl.b32 $ofs4, $r54, 0x0;
	mov.u32 $r19, s[$ofs4+0x0000];
	xor.b32 $r19, $r17, $r19;
	xor.b32 $r17, s[$ofs3+0x0000], $r29;
	xor.b32 $r19, $r17, $r19;
	mov.u32 $r17, $r124;
	@$p0.ne shr.u32 $r17, $r19, 0x0000001f;
	shl.u32 $r19, $r19, 0x00000001;
	or.b32 $r21, $r17, $r19;
	mov.u32 $r17, s[$ofs4+0x0000];
	xor.b32 $r20, $r16, $r18;
	xor.b32 $r19, $r16, $r17;
	mov.u32 $r16, s[$ofs3+0x0000];
	xor.b32 $r18, $r14, $r16;
	mov.u32 $r14, $r124;
	@$p0.ne shr.u32 $r14, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	or.b32 $r17, $r15, $r14;
	or.b32 $r15, $r17, $r22;
	and.b32 $r14, $r17, $r22;
	and.b32 $r15, $r24, $r15;
	or.b32 $r16, $r14, $r15;
	add.u32 $r15, $r13, 0x8f1bbcdc;
	mov.u32 $r13, $r124;
	shl.u32 $r14, $r15, 0x00000005;
	@$p0.ne shr.u32 $r13, $r15, 0x0000001b;
	or.b32 $r13, $r14, $r13;
	add.half.u32 $r13, $r16, $r13;
	add.half.u32 $r13, $r21, $r13;
	add.half.u32 $r16, $r26, $r13;
	mov.half.u32 $r13, s[$ofs3+0x0000];
	mov.u32 s[$ofs1+0x0280], $r21;
	shl.b32 $ofs4, $r43, 0x0;
	mov.u32 $r14, s[$ofs4+0x0000];
	xor.b32 $r2, $r2, $r14;
	xor.b32 $r3, $r7, $r3;
	xor.b32 $r0, $r7, $r0;
	xor.b32 $r7, $r7, $r27;
	xor.b32 $r7, $r7, $r2;
	mov.u32 $r2, $r124;
	@$p0.ne shr.u32 $r2, $r7, 0x0000001f;
	shl.u32 $r7, $r7, 0x00000001;
	or.b32 $r2, $r2, $r7;
	xor.b32 $r7, $r30, $r2;
	xor.b32 $r14, $r7, $r20;
	mov.u32 $r7, s[$ofs4+0x0000];
	xor.b32 $r1, $r5, $r1;
	xor.b32 $r7, $r5, $r7;
	mov.u32 $r5, $r124;
	@$p0.ne shr.u32 $r5, $r22, 0x00000002;
	shl.u32 $r20, $r22, 0x0000001e;
	or.b32 $r5, $r20, $r5;
	xor.b32 $r4, $r4, $r21;
	or.b32 $r20, $r5, $r15;
	xor.b32 $r4, $r4, $r7;
	and.b32 $r7, $r5, $r15;
	and.b32 $r20, $r17, $r20;
	or.b32 $r7, $r20, $r7;
	add.u32 $r20, $r16, 0x8f1bbcdc;
	mov.u32 $r16, $r124;
	shl.u32 $r22, $r20, 0x00000005;
	@$p0.ne shr.u32 $r16, $r20, 0x0000001b;
	or.b32 $r16, $r22, $r16;
	add.u32 $r16, $r7, $r16;
	xor.b32 $r7, $r6, $r23;
	xor.b32 $r19, $r7, $r19;
	mov.u32 $r7, $r124;
	@$p0.ne shr.u32 $r7, $r19, 0x0000001f;
	shl.u32 $r19, $r19, 0x00000001;
	or.b32 $r7, $r7, $r19;
	xor.b32 $r22, $r29, $r7;
	mov.u32 $r19, $r124;
	xor.b32 $r22, $r22, $r1;
	mov.u32 $r1, $r124;
	@$p0.ne shr.u32 $r19, $r4, 0x0000001f;
	shl.u32 $r4, $r4, 0x00000001;
	or.b32 $r19, $r19, $r4;
	mov.u32 $r4, $r124;
	@$p0.ne shr.u32 $r1, $r14, 0x0000001f;
	shl.u32 $r14, $r14, 0x00000001;
	or.b32 $r1, $r1, $r14;
	@$p0.ne shr.u32 $r4, $r22, 0x0000001f;
	shl.u32 $r14, $r22, 0x00000001;
	or.b32 $r4, $r4, $r14;
	xor.b32 $r14, $r27, $r19;
	xor.b32 $r6, $r6, $r13;
	xor.b32 $r13, $r23, $r1;
	xor.b32 $r21, $r21, $r4;
	xor.b32 $r18, $r14, $r18;
	mov.u32 $r14, $r124;
	xor.b32 $r0, $r13, $r0;
	xor.b32 $r13, $r21, $r6;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r14, $r18, 0x0000001f;
	shl.u32 $r18, $r18, 0x00000001;
	or.b32 $r18, $r14, $r18;
	mov.u32 $r14, $r124;
	mov.u32 s[$ofs1+0x0300], $r2;
	@$p0.ne shr.u32 $r6, $r0, 0x0000001f;
	shl.u32 $r0, $r0, 0x00000001;
	or.b32 $r0, $r6, $r0;
	@$p0.ne shr.u32 $r14, $r13, 0x0000001f;
	mov.u32 s[$ofs1+0x0380], $r7;
	shl.u32 $r6, $r13, 0x00000001;
	mov.u32 s[$ofs1+0x0400], $r19;
	xor.b32 $r13, $r2, $r18;
	or.b32 $r6, $r14, $r6;
	xor.b32 $r14, $r7, $r0;
	mov.u32 s[$ofs1+0x0480], $r1;
	xor.b32 $r3, $r13, $r3;
	xor.b32 $r13, $r19, $r6;
	xor.b32 $r21, $r28, $r14;
	mov.u32 s[$ofs1+0x0500], $r4;
	mov.u32 $r14, $r124;
	xor.b32 $r22, $r25, $r13;
	mov.u32 $r13, $r124;
	mov.u32 s[$ofs1+0x0580], $r18;
	@$p0.ne shr.u32 $r14, $r3, 0x0000001f;
	shl.u32 $r3, $r3, 0x00000001;
	or.b32 $r14, $r14, $r3;
	mov.u32 $r3, $r124;
	mov.u32 s[$ofs1+0x0600], $r0;
	@$p0.ne shr.u32 $r13, $r21, 0x0000001f;
	shl.u32 $r21, $r21, 0x00000001;
	or.b32 $r13, $r13, $r21;
	@$p0.ne shr.u32 $r3, $r22, 0x0000001f;
	mov.u32 s[$ofs1+0x0680], $r6;
	shl.u32 $r21, $r22, 0x00000001;
	mov.u32 s[$ofs1+0x0700], $r14;
	or.b32 $r3, $r3, $r21;
	mov.u32 s[$ofs1+0x0780], $r13;
	mov.u32 s[$ofs1+0x0000], $r3;
	shl.b32 $ofs4, $r44, 0x0;
	mov.u32 $r21, s[$ofs4+0x0000];
	mov.u32 $r22, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r46, 0x0;
	mov.u32 $r25, s[$ofs4+0x0000];
	mov.u32 $r23, s[$ofs4+0x0000];
	shl.b32 $ofs4, $r47, 0x0;
	xor.b32 $r21, s[$ofs4+0x0000], $r21;
	shl.b32 $ofs4, $r45, 0x0;
	mov.u32 $r26, s[$ofs4+0x0000];
	xor.b32 $r27, s[$ofs4+0x0000], $r25;
	mov.u32 $r25, $r124;
	@$p0.ne shr.u32 $r25, $r15, 0x00000002;
	shl.u32 $r15, $r15, 0x0000001e;
	or.b32 $r15, $r15, $r25;
	or.b32 $r25, $r20, $r15;
	add.u32 $r2, $r2, $r16;
	and.b32 $r16, $r20, $r15;
	and.b32 $r25, $r5, $r25;
	xor.b32 $r27, $r21, $r27;
	mov.u32 $r21, $r124;
	add.u32 $r2, $r24, $r2;
	or.b32 $r24, $r25, $r16;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r21, $r27, 0x0000001f;
	shl.u32 $r25, $r27, 0x00000001;
	add.u32 $r2, $r2, 0x8f1bbcdc;
	or.b32 $r21, $r21, $r25;
	shl.u32 $r25, $r2, 0x00000005;
	@$p0.ne shr.u32 $r16, $r2, 0x0000001b;
	mov.u32 s[$ofs1+0x0080], $r21;
	or.b32 $r16, $r25, $r16;
	shl.b32 $ofs4, $r48, 0x0;
	mov.u32 $r25, s[$ofs4+0x0000];
	mov.u32 $r27, s[$ofs4+0x0000];
	add.u32 $r24, $r24, $r16;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r16, $r20, 0x00000002;
	shl.u32 $r20, $r20, 0x0000001e;
	or.b32 $r16, $r20, $r16;
	add.u32 $r7, $r7, $r24;
	or.b32 $r20, $r2, $r16;
	add.u32 $r7, $r17, $r7;
	and.b32 $r24, $r2, $r16;
	and.b32 $r20, $r15, $r20;
	add.u32 $r17, $r7, 0x8f1bbcdc;
	mov.u32 $r7, $r124;
	or.b32 $r20, $r20, $r24;
	shl.u32 $r24, $r17, 0x00000005;
	@$p0.ne shr.u32 $r7, $r17, 0x0000001b;
	or.b32 $r24, $r24, $r7;
	mov.u32 $r7, $r124;
	add.u32 $r20, $r20, $r24;
	@$p0.ne shr.u32 $r7, $r2, 0x00000002;
	shl.u32 $r2, $r2, 0x0000001e;
	add.u32 $r19, $r19, $r20;
	or.b32 $r2, $r2, $r7;
	add.u32 $r5, $r5, $r19;
	or.b32 $r19, $r2, $r17;
	add.u32 $r7, $r5, 0x8f1bbcdc;
	mov.u32 $r5, $r124;
	and.b32 $r20, $r2, $r17;
	and.b32 $r19, $r16, $r19;
	shl.u32 $r24, $r7, 0x00000005;
	@$p0.ne shr.u32 $r5, $r7, 0x0000001b;
	or.b32 $r19, $r19, $r20;
	or.b32 $r20, $r24, $r5;
	mov.u32 $r5, $r124;
	add.u32 $r19, $r19, $r20;
	@$p0.ne shr.u32 $r5, $r17, 0x00000002;
	shl.u32 $r17, $r17, 0x0000001e;
	add.u32 $r19, $r1, $r19;
	or.b32 $r1, $r17, $r5;
	add.u32 $r5, $r15, $r19;
	or.b32 $r19, $r1, $r7;
	add.u32 $r5, $r5, 0x8f1bbcdc;
	mov.u32 $r17, $r124;
	and.b32 $r15, $r1, $r7;
	and.b32 $r20, $r2, $r19;
	shl.u32 $r19, $r5, 0x00000005;
	@$p0.ne shr.u32 $r17, $r5, 0x0000001b;
	or.b32 $r15, $r15, $r20;
	or.b32 $r17, $r19, $r17;
	shl.b32 $ofs4, $r49, 0x0;
	mov.u32 $r20, s[$ofs4+0x0000];
	mov.u32 $r19, s[$ofs4+0x0000];
	xor.b32 $r24, s[$ofs4+0x0000], $r21;
	shl.b32 $ofs4, $r42, 0x0;
	xor.b32 $r25, s[$ofs4+0x0000], $r25;
	add.u32 $r17, $r15, $r17;
	mov.u32 $r15, $r124;
	@$p0.ne shr.u32 $r15, $r7, 0x00000002;
	shl.u32 $r7, $r7, 0x0000001e;
	or.b32 $r7, $r7, $r15;
	shl.b32 $ofs4, $r50, 0x0;
	mov.u32 $r15, s[$ofs4+0x0000];
	xor.b32 $r20, s[$ofs4+0x0000], $r20;
	add.u32 $r17, $r4, $r17;
	or.b32 $r4, $r7, $r5;
	add.u32 $r17, $r16, $r17;
	and.b32 $r16, $r7, $r5;
	and.b32 $r4, $r1, $r4;
	xor.b32 $r25, $r25, $r20;
	mov.u32 $r20, $r124;
	or.b32 $r16, $r4, $r16;
	mov.u32 $r4, $r124;
	@$p0.ne shr.u32 $r20, $r25, 0x0000001f;
	shl.u32 $r25, $r25, 0x00000001;
	add.u32 $r17, $r17, 0x8f1bbcdc;
	or.b32 $r20, $r20, $r25;
	shl.u32 $r25, $r17, 0x00000005;
	@$p0.ne shr.u32 $r4, $r17, 0x0000001b;
	or.b32 $r4, $r25, $r4;
	mov.u32 s[$ofs1+0x0100], $r20;
	add.u32 $r4, $r16, $r4;
	shl.b32 $ofs4, $r51, 0x0;
	mov.u32 $r16, s[$ofs4+0x0000];
	mov.u32 $r25, s[$ofs4+0x0000];
	add.u32 $r18, $r18, $r4;
	mov.u32 $r4, $r124;
	add.u32 $r2, $r2, $r18;
	@$p0.ne shr.u32 $r4, $r5, 0x00000002;
	shl.u32 $r5, $r5, 0x0000001e;
	add.u32 $r18, $r2, 0x8f1bbcdc;
	mov.u32 $r2, $r124;
	or.b32 $r4, $r5, $r4;
	shl.u32 $r5, $r18, 0x00000005;
	@$p0.ne shr.u32 $r2, $r18, 0x0000001b;
	or.b32 $r2, $r5, $r2;
	xor.b32 $r5, $r17, $r4;
	xor.b32 $r5, $r7, $r5;
	add.half.u32 $r2, $r2, $r5;
	add.half.u32 $r2, $r0, $r2;
	mov.u32 $r0, $r124;
	add.u32 $r1, $r1, $r2;
	@$p0.ne shr.u32 $r0, $r17, 0x00000002;
	shl.u32 $r5, $r17, 0x0000001e;
	add.u32 $r2, $r1, 0xca62c1d6;
	mov.u32 $r1, $r124;
	or.b32 $r0, $r5, $r0;
	shl.u32 $r5, $r2, 0x00000005;
	@$p0.ne shr.u32 $r1, $r2, 0x0000001b;
	xor.b32 $r17, $r18, $r0;
	or.b32 $r1, $r5, $r1;
	xor.b32 $r5, $r4, $r17;
	add.half.u32 $r1, $r1, $r5;
	add.half.u32 $r5, $r6, $r1;
	mov.u32 $r1, $r124;
	add.u32 $r6, $r7, $r5;
	@$p0.ne shr.u32 $r1, $r18, 0x00000002;
	shl.u32 $r5, $r18, 0x0000001e;
	add.u32 $r6, $r6, 0xca62c1d6;
	mov.u32 $r7, $r124;
	or.b32 $r5, $r5, $r1;
	shl.u32 $r1, $r6, 0x00000005;
	@$p0.ne shr.u32 $r7, $r6, 0x0000001b;
	xor.b32 $r17, $r5, $r2;
	or.b32 $r1, $r1, $r7;
	xor.b32 $r7, $r0, $r17;
	add.u32 $r7, $r1, $r7;
	shl.b32 $ofs4, $r52, 0x0;
	mov.u32 $r17, s[$ofs4+0x0000];
	mov.u32 $r18, s[$ofs4+0x0000];
	mov.u32 $r1, s[$ofs4+0x0000];
	add.u32 $r14, $r14, $r7;
	mov.u32 $r7, $r124;
	add.u32 $r4, $r4, $r14;
	@$p0.ne shr.u32 $r7, $r2, 0x00000002;
	shl.u32 $r2, $r2, 0x0000001e;
	add.u32 $r14, $r4, 0xca62c1d6;
	mov.u32 $r4, $r124;
	or.b32 $r7, $r2, $r7;
	shl.u32 $r2, $r14, 0x00000005;
	@$p0.ne shr.u32 $r4, $r14, 0x0000001b;
	or.b32 $r2, $r2, $r4;
	xor.b32 $r4, $r6, $r7;
	xor.b32 $r4, $r5, $r4;
	add.u32 $r4, $r2, $r4;
	mov.u32 $r2, $r124;
	xor.b32 $r16, $r22, $r16;
	xor.b32 $r17, s[$ofs1+0x0000], $r17;
	add.u32 $r13, $r13, $r4;
	@$p0.ne shr.u32 $r2, $r6, 0x00000002;
	shl.u32 $r6, $r6, 0x0000001e;
	xor.b32 $r16, $r17, $r16;
	mov.u32 $r4, $r124;
	add.u32 $r0, $r0, $r13;
	or.b32 $r13, $r6, $r2;
	mov.u32 $r6, $r124;
	@$p0.ne shr.u32 $r4, $r16, 0x0000001f;
	shl.u32 $r2, $r16, 0x00000001;
	add.u32 $r16, $r0, 0xca62c1d6;
	or.b32 $r4, $r4, $r2;
	shl.u32 $r17, $r16, 0x00000005;
	@$p0.ne shr.u32 $r6, $r16, 0x0000001b;
	xor.b32 $r22, $r14, $r13;
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.half.u32 $r0, s[$ofs1+0x0000];
	or.b32 $r6, $r17, $r6;
	xor.b32 $r17, $r7, $r22;
	mov.u32 s[$ofs1+0x0180], $r4;
	add.u32 $r17, $r6, $r17;
	shl.b32 $ofs4, $r53, 0x0;
	mov.u32 $r22, s[$ofs4+0x0000];
	mov.u32 $r6, s[$ofs4+0x0000];
	add.u32 $r17, $r3, $r17;
	mov.u32 $r3, $r124;
	add.u32 $r5, $r5, $r17;
	@$p0.ne shr.u32 $r3, $r14, 0x00000002;
	shl.u32 $r17, $r14, 0x0000001e;
	add.u32 $r5, $r5, 0xca62c1d6;
	mov.u32 $r14, $r124;
	or.b32 $r3, $r17, $r3;
	shl.u32 $r17, $r5, 0x00000005;
	@$p0.ne shr.u32 $r14, $r5, 0x0000001b;
	or.b32 $r14, $r17, $r14;
	xor.b32 $r17, $r16, $r3;
	xor.b32 $r17, $r13, $r17;
	add.half.u32 $r14, $r14, $r17;
	add.half.u32 $r17, $r21, $r14;
	mov.u32 $r14, $r124;
	add.u32 $r7, $r7, $r17;
	@$p0.ne shr.u32 $r14, $r16, 0x00000002;
	shl.u32 $r17, $r16, 0x0000001e;
	add.u32 $r7, $r7, 0xca62c1d6;
	mov.u32 $r16, $r124;
	or.b32 $r14, $r17, $r14;
	shl.u32 $r17, $r7, 0x00000005;
	@$p0.ne shr.u32 $r16, $r7, 0x0000001b;
	or.b32 $r16, $r17, $r16;
	xor.b32 $r17, $r5, $r14;
	xor.b32 $r17, $r3, $r17;
	add.half.u32 $r16, $r16, $r17;
	add.half.u32 $r16, $r20, $r16;
	mov.u32 $r17, $r124;
	add.u32 $r16, $r13, $r16;
	@$p0.ne shr.u32 $r17, $r5, 0x00000002;
	shl.u32 $r13, $r5, 0x0000001e;
	add.u32 $r16, $r16, 0xca62c1d6;
	mov.u32 $r5, $r124;
	or.b32 $r13, $r13, $r17;
	shl.u32 $r17, $r16, 0x00000005;
	@$p0.ne shr.u32 $r5, $r16, 0x0000001b;
	or.b32 $r5, $r17, $r5;
	xor.b32 $r17, $r13, $r7;
	xor.b32 $r17, $r14, $r17;
	add.half.u32 $r5, $r5, $r17;
	add.half.u32 $r5, $r4, $r5;
	xor.b32 $r17, $r27, $r22;
	shl.b32 $ofs4, $r55, 0x0;
	xor.b32 $r22, s[$ofs4+0x0000], $r21;
	add.u32 $r27, $r3, $r5;
	mov.u32 $r3, s[$ofs4+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	xor.b32 $r22, $r22, $r17;
	mov.u32 $r17, $r124;
	@$p0.ne shr.u32 $r17, $r22, 0x0000001f;
	shl.u32 $r22, $r22, 0x00000001;
	or.b32 $r17, $r17, $r22;
	mov.u32 $r22, $r124;
	@$p0.ne shr.u32 $r22, $r7, 0x00000002;
	shl.u32 $r7, $r7, 0x0000001e;
	or.b32 $r7, $r7, $r22;
	add.u32 $r22, $r27, 0xca62c1d6;
	mov.u32 $r27, $r124;
	shl.u32 $r28, $r22, 0x00000005;
	@$p0.ne shr.u32 $r27, $r22, 0x0000001b;
	or.b32 $r27, $r28, $r27;
	xor.b32 $r28, $r16, $r7;
	xor.b32 $r28, $r13, $r28;
	add.half.u32 $r27, $r27, $r28;
	add.half.u32 $r27, $r17, $r27;
	mov.u32 s[$ofs1+0x0200], $r17;
	add.u32 $r27, $r14, $r27;
	shl.b32 $ofs4, $r54, 0x0;
	mov.u32 $r14, s[$ofs4+0x0000];
	xor.b32 $r25, $r25, $r14;
	xor.b32 $r14, s[$ofs3+0x0000], $r20;
	xor.b32 $r25, $r14, $r25;
	mov.u32 $r14, $r124;
	@$p0.ne shr.u32 $r14, $r25, 0x0000001f;
	shl.u32 $r25, $r25, 0x00000001;
	or.b32 $r14, $r14, $r25;
	mov.u32 $r25, s[$ofs4+0x0000];
	xor.b32 $r28, $r26, $r18;
	xor.b32 $r18, $r26, $r25;
	mov.u32 $r25, s[$ofs3+0x0000];
	xor.b32 $r25, $r1, $r25;
	mov.u32 $r1, s[$ofs3+0x0000];
	mov.u32 $r26, $r124;
	@$p0.ne shr.u32 $r26, $r16, 0x00000002;
	shl.u32 $r16, $r16, 0x0000001e;
	or.b32 $r16, $r16, $r26;
	add.u32 $r26, $r27, 0xca62c1d6;
	mov.u32 $r27, $r124;
	shl.u32 $r29, $r26, 0x00000005;
	@$p0.ne shr.u32 $r27, $r26, 0x0000001b;
	or.b32 $r27, $r29, $r27;
	xor.b32 $r29, $r22, $r16;
	xor.b32 $r29, $r7, $r29;
	add.half.u32 $r27, $r27, $r29;
	add.half.u32 $r27, $r14, $r27;
	add.u32 $r13, $r13, $r27;
	mov.u32 s[$ofs1+0x0280], $r14;
	shl.b32 $ofs4, $r43, 0x0;
	mov.u32 $r27, s[$ofs4+0x0000];
	xor.b32 $r29, $r6, $r27;
	xor.b32 $r6, $r23, $r0;
	xor.b32 $r27, $r23, $r5;
	xor.b32 $r0, $r23, $r4;
	xor.b32 $r5, $r0, $r29;
	mov.u32 $r0, $r124;
	@$p0.ne shr.u32 $r0, $r5, 0x0000001f;
	shl.u32 $r5, $r5, 0x00000001;
	or.b32 $r23, $r0, $r5;
	mov.u32 $r5, s[$ofs4+0x0000];
	xor.b32 $r0, $r21, $r23;
	xor.b32 $r0, $r0, $r28;
	xor.b32 $r2, $r2, $r14;
	xor.b32 $r21, $r15, $r5;
	mov.u32 $r5, $r124;
	xor.b32 $r2, $r2, $r21;
	@$p0.ne shr.u32 $r5, $r22, 0x00000002;
	shl.u32 $r21, $r22, 0x0000001e;
	add.u32 $r22, $r13, 0xca62c1d6;
	mov.u32 $r13, $r124;
	or.b32 $r21, $r21, $r5;
	shl.u32 $r5, $r22, 0x00000005;
	@$p0.ne shr.u32 $r13, $r22, 0x0000001b;
	or.b32 $r5, $r5, $r13;
	xor.b32 $r13, $r26, $r21;
	xor.b32 $r13, $r16, $r13;
	add.u32 $r13, $r5, $r13;
	xor.b32 $r5, $r19, $r17;
	add.u32 $r28, $r23, $r13;
	xor.b32 $r13, $r5, $r18;
	mov.u32 $r5, $r124;
	add.u32 $r18, $r7, $r28;
	mov.u32 $r28, $r124;
	@$p0.ne shr.u32 $r5, $r13, 0x0000001f;
	shl.u32 $r7, $r13, 0x00000001;
	or.b32 $r7, $r5, $r7;
	@$p0.ne shr.u32 $r28, $r26, 0x00000002;
	shl.u32 $r13, $r26, 0x0000001e;
	add.u32 $r18, $r18, 0xca62c1d6;
	mov.u32 $r5, $r124;
	or.b32 $r13, $r13, $r28;
	shl.u32 $r26, $r18, 0x00000005;
	@$p0.ne shr.u32 $r5, $r18, 0x0000001b;
	or.b32 $r5, $r26, $r5;
	xor.b32 $r26, $r22, $r13;
	xor.b32 $r26, $r21, $r26;
	add.half.u32 $r5, $r5, $r26;
	add.half.u32 $r26, $r7, $r5;
	mov.u32 $r5, $r124;
	add.u32 $r26, $r16, $r26;
	mov.u32 $r16, $r124;
	@$p0.ne shr.u32 $r5, $r2, 0x0000001f;
	shl.u32 $r2, $r2, 0x00000001;
	or.b32 $r5, $r5, $r2;
	@$p0.ne shr.u32 $r16, $r22, 0x00000002;
	shl.u32 $r22, $r22, 0x0000001e;
	add.u32 $r26, $r26, 0xca62c1d6;
	mov.u32 $r2, $r124;
	or.b32 $r22, $r22, $r16;
	shl.u32 $r16, $r26, 0x00000005;
	@$p0.ne shr.u32 $r2, $r26, 0x0000001b;
	or.b32 $r2, $r16, $r2;
	xor.b32 $r16, $r22, $r18;
	xor.b32 $r16, $r13, $r16;
	add.half.u32 $r2, $r2, $r16;
	add.half.u32 $r16, $r5, $r2;
	mov.u32 $r2, $r124;
	add.u32 $r21, $r21, $r16;
	mov.u32 $r28, $r124;
	@$p0.ne shr.u32 $r2, $r0, 0x0000001f;
	shl.u32 $r0, $r0, 0x00000001;
	or.b32 $r16, $r2, $r0;
	@$p0.ne shr.u32 $r28, $r18, 0x00000002;
	shl.u32 $r2, $r18, 0x0000001e;
	add.u32 $r21, $r21, 0xca62c1d6;
	mov.u32 $r0, $r124;
	or.b32 $r18, $r2, $r28;
	shl.u32 $r2, $r21, 0x00000005;
	@$p0.ne shr.u32 $r0, $r21, 0x0000001b;
	or.b32 $r0, $r2, $r0;
	xor.b32 $r2, $r26, $r18;
	xor.b32 $r2, $r22, $r2;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r28, $r16, $r0;
	xor.b32 $r2, $r15, $r3;
	xor.b32 $r0, $r20, $r7;
	add.u32 $r3, $r13, $r28;
	mov.u32 $r13, $r124;
	xor.b32 $r2, $r0, $r2;
	add.u32 $r3, $r3, 0xca62c1d6;
	mov.u32 $r15, $r124;
	@$p0.ne shr.u32 $r13, $r26, 0x00000002;
	shl.u32 $r26, $r26, 0x0000001e;
	shl.u32 $r20, $r3, 0x00000005;
	@$p0.ne shr.u32 $r15, $r3, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r13, $r26, $r13;
	or.b32 $r20, $r20, $r15;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	xor.b32 $r15, $r21, $r13;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r26, $r18, $r15;
	or.b32 $r15, $r0, $r2;
	add.half.u32 $r0, $r20, $r26;
	add.half.u32 $r2, $r15, $r0;
	xor.b32 $r0, $r4, $r5;
	add.u32 $r4, $r22, $r2;
	mov.u32 $r20, $r124;
	xor.b32 $r2, $r0, $r25;
	add.u32 $r4, $r4, 0xca62c1d6;
	mov.u32 $r22, $r124;
	@$p0.ne shr.u32 $r20, $r21, 0x00000002;
	shl.u32 $r21, $r21, 0x0000001e;
	shl.u32 $r25, $r4, 0x00000005;
	@$p0.ne shr.u32 $r22, $r4, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r20, $r21, $r20;
	or.b32 $r22, $r25, $r22;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	xor.b32 $r21, $r3, $r20;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r25, $r13, $r21;
	or.b32 $r21, $r0, $r2;
	add.half.u32 $r0, $r22, $r25;
	add.half.u32 $r2, $r21, $r0;
	xor.b32 $r0, $r17, $r16;
	add.u32 $r17, $r18, $r2;
	mov.u32 $r22, $r124;
	xor.b32 $r2, $r0, $r27;
	add.u32 $r17, $r17, 0xca62c1d6;
	mov.u32 $r18, $r124;
	@$p0.ne shr.u32 $r22, $r3, 0x00000002;
	shl.u32 $r3, $r3, 0x0000001e;
	shl.u32 $r25, $r17, 0x00000005;
	@$p0.ne shr.u32 $r18, $r17, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r3, $r3, $r22;
	or.b32 $r22, $r25, $r18;
	@$p0.ne shr.u32 $r0, $r2, 0x0000001f;
	xor.b32 $r18, $r4, $r3;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r25, $r20, $r18;
	or.b32 $r18, $r0, $r2;
	add.half.u32 $r0, $r22, $r25;
	add.half.u32 $r2, $r18, $r0;
	xor.b32 $r1, $r19, $r1;
	xor.b32 $r0, $r14, $r15;
	add.u32 $r2, $r13, $r2;
	mov.u32 $r14, $r124;
	xor.b32 $r1, $r0, $r1;
	add.u32 $r13, $r2, 0xca62c1d6;
	mov.u32 $r2, $r124;
	@$p0.ne shr.u32 $r14, $r4, 0x00000002;
	shl.u32 $r4, $r4, 0x0000001e;
	shl.u32 $r19, $r13, 0x00000005;
	@$p0.ne shr.u32 $r2, $r13, 0x0000001b;
	mov.u32 $r0, $r124;
	or.b32 $r4, $r4, $r14;
	or.b32 $r2, $r19, $r2;
	@$p0.ne shr.u32 $r0, $r1, 0x0000001f;
	xor.b32 $r14, $r4, $r17;
	shl.u32 $r1, $r1, 0x00000001;
	xor.b32 $r19, $r3, $r14;
	or.b32 $r14, $r0, $r1;
	add.u32 $r0, $r2, $r19;
	mov.u32 s[$ofs1+0x0300], $r23;
	add.u32 $r0, $r14, $r0;
	mov.u32 s[$ofs1+0x0380], $r7;
	xor.b32 $r1, $r23, $r21;
	add.u32 $r19, $r20, $r0;
	mov.u32 s[$ofs1+0x0400], $r5;
	mov.u32 $r0, $r124;
	xor.b32 $r2, $r1, $r6;
	add.u32 $r6, $r19, 0xca62c1d6;
	mov.u32 $r5, $r124;
	@$p0.ne shr.u32 $r0, $r17, 0x00000002;
	shl.u32 $r19, $r17, 0x0000001e;
	shl.u32 $r17, $r6, 0x00000005;
	@$p0.ne shr.u32 $r5, $r6, 0x0000001b;
	mov.u32 $r1, $r124;
	or.b32 $r0, $r19, $r0;
	mov.u32 s[$ofs1+0x0480], $r16;
	or.b32 $r5, $r17, $r5;
	@$p0.ne shr.u32 $r1, $r2, 0x0000001f;
	xor.b32 $r16, $r13, $r0;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r17, $r4, $r16;
	or.b32 $r16, $r1, $r2;
	add.u32 $r1, $r5, $r17;
	mov.u32 s[$ofs1+0x0500], $r15;
	add.u32 $r2, $r16, $r1;
	mov.u32 s[$ofs1+0x0580], $r21;
	xor.b32 $r1, $r7, $r18;
	add.u32 $r3, $r3, $r2;
	mov.u32 s[$ofs1+0x0600], $r18;
	mov.u32 $r5, $r124;
	xor.b32 $r2, $r24, $r1;
	add.u32 $r3, $r3, 0xca62c1d6;
	mov.u32 $r7, $r124;
	@$p0.ne shr.u32 $r5, $r13, 0x00000002;
	shl.u32 $r15, $r13, 0x0000001e;
	shl.u32 $r13, $r3, 0x00000005;
	@$p0.ne shr.u32 $r7, $r3, 0x0000001b;
	mov.u32 $r1, $r124;
	or.b32 $r5, $r15, $r5;
	mov.u32 s[$ofs1+0x0680], $r14;
	or.b32 $r7, $r13, $r7;
	@$p0.ne shr.u32 $r1, $r2, 0x0000001f;
	xor.b32 $r13, $r6, $r5;
	shl.u32 $r2, $r2, 0x00000001;
	xor.b32 $r13, $r0, $r13;
	or.b32 $r1, $r1, $r2;
	add.u32 $r2, $r7, $r13;
	mov.u32 s[$ofs1+0x0700], $r16;
	add.half.u32 $r2, $r1, $r2;
	add.half.u32 $r41, $r41, $r0;
	mov.u32 s[$ofs1+0x0780], $r1;
	add.u32 $r0, $r4, $r2;
	mov.u32 $r1, $r124;
	add.u32 $r39, $r39, $r3;
	@$p0.ne shr.u32 $r1, $r6, 0x00000002;
	shl.u32 $r2, $r6, 0x0000001e;
	add.u32 $r0, $r0, 0xca62c1d6;
	add.u32 $r40, $r40, $r5;
	or.b32 $r1, $r2, $r1;
	add.u32 $r36, $r36, 0x00000001;
	add.u32 $r12, $r12, $r0;
	set.ne.s32.s32 $p0/$o127, $r32, $r36;
	add.u32 $r38, $r38, $r1;
	@$p0.ne bra l0x00000140;
	bra l0x00004678;
	l0x00004670: mov.u32 $r12, 0x67452301;
	l0x00004678: shl.u32 $r0, $r11, 0x00000002;
	shr.u32 $r2, $r12, 0x00000018;
	add.half.u32 $r1, s[0x0028], $r0;
	mov.half.u16 $r0.lo, $r2.lo;
	st.global.u8 [$r1], $r0;
	shr.u32 $r0, $r12, 0x00000010;
	shr.u32 $r3, $r12, 0x00000008;
	add.u32 $r2, $r1, 0x00000001;
	st.global.u8 [$r2], $r0;
	add.u32 $r2, $r1, 0x00000002;
	mov.u16 $r0.lo, $r3.lo;
	st.global.u8 [$r2], $r0;
	add.u32 $r1, $r1, 0x00000003;
	mov.u16 $r0.lo, $r12.lo;
	st.global.u8 [$r1], $r0;

	l_exit: exit;
}

.entry  _Z11md5_overlapPhiiiiS_ (
	.param  .u64 __cudaparm__Z11md5_overlapPhiiiiS__input ,
	.param  .s32 __cudaparm__Z11md5_overlapPhiiiiS____val_paramchunkSize ,
	.param  .s32 __cudaparm__Z11md5_overlapPhiiiiS__offset ,
	.param  .s32 __cudaparm__Z11md5_overlapPhiiiiS__totalThreads ,
	.param  .s32 __cudaparm__Z11md5_overlapPhiiiiS__padSize ,
	.param  .u64 __cudaparm__Z11md5_overlapPhiiiiS__output )
{
	.reg .u32 $r<34>;
	.reg .u32 $ofs<4>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	mov.u32 $r1, $r0;
	mov.u16 $r0.lo, %ntid.x;
	cvt.u32.u16 $r3, $r1.lo;
	mad.wide.u16 $r6, %ctaid.x, $r0.lo, $r3;
	set.gt.s32.s32 $p0/$o127, s[0x0020], $r6;
	@$p0.equ retp;
	add.u32 $r0, s[0x0020], 0xffffffff;
	set.eq.s32.s32 $p0/$o127, $r0, $r6;
	mov.half.u32 $r2, s[0x0018];
	mov.half.u32 $r0, s[0x0018];
	@$p0.ne add.u32 $r0, -s[0x0024], $r2;
	shr.s32 $r2, $r0, 0x0000001f;
	and.b32 $r2, $r2, constant1_Z11md5_overlapPhiiiiS_[0x0000];
	add.u32 $r2, $r0, $r2;
	shr.s32 $r8, $r2, 0x00000006;
	add.u32 $r9, $r8, 0x00000001;
	set.le.s32.s32 $p0/$o127, $r9, $r124;
	ssy 0x00001e10;
	@$p0.ne bra l0x00001e08;
	mov.u32 $r2, s[0x001c];
	shr.u32 $r4, $r3, 0x00000005;
	cvt.u32.u16 $r1, $r1.lo;
	mul.wide.u16 $r5, $r2.lo, $r6.hi;
	shl.u32 $r10, $r4, 0x0000000b;
	and.b32 $r4, $r1, constant1_Z11md5_overlapPhiiiiS_[0x0004];
	and.b32 $r1, $r3, constant1_Z11md5_overlapPhiiiiS_[0x0004];
	mad.wide.u16 $r5, $r2.hi, $r6.lo, $r5;
	add.u32 $r11, $r10, 0x00000030;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r3, $r1, 0x00000002;
	shl.u32 $r5, $r5, 0x00000010;
	add.half.u32 $r4, $r11, $r4;
	add.half.u32 $r3, $r3, $r11;
	mad.wide.u16 $r5, $r2.lo, $r6.lo, $r5;
	shl.b32 $ofs2, $r4, 0x0;
	shl.b32 $ofs1, $r3, 0x0;
	mov.u32 $r13, $r124;
	mov.u32 $r14, 0x10325476;
	mov.u32 $r15, 0x98badcfe;
	mov.u32 $r16, 0xefcdab89;
	mov.u32 $r7, 0x67452301;
	add.u32 $r2, $r1, 0x000001a0;
	add.u32 $r12, s[0x0010], $r5;
	l0x00000148: set.ne.s32.s32 $p0/$o127, $r8, $r13;
	ssy 0x000004c0;
	@$p0.ne bra l0x00000338;
	shl.u32 $r3, $r8, 0x00000006;
	add.u32 $r3, $r3, -$r0;
	shr.s32 $r4, $r3, 0x0000001f;
	add.u32 $p0|$r3, $r3, constant1_Z11md5_overlapPhiiiiS_[0x0008];
	addp.u32 $r4, $r4, $r124, $p0;
	shr.u32 $r3, $r3, 0x00000002;
	shl.u32 $r4, $r4, 0x0000001e;
	or.b32 $r3, $r3, $r4;
	cvt.u32.u32 $p0|$o127, $r124;
	@$p0.ne mov.u32 $r3, $r124;
	set.le.s32.s32 $p0/$o127, $r3, $r124;
	ssy 0x00000240;
	@$p0.ne bra l0x00000238;
	shl.u32 $r4, $r3, 0x00000005;
	add.u32 $r5, $r1, -$r4;
	ssy 0x00000228;
	mov.u32 $r4, $r2;
	add.u32 $r5, $r5, 0x000001a0;
	l0x000001f0: shl.u32 $r17, $r4, 0x00000002;
	add.u32 $r17, $r10, $r17;
	shl.b32 $ofs3, $r17, 0x0;
	mov.u32 s[$ofs3+0x0030], $r124;
	add.u32 $r4, $r4, 0xffffffe0;
	set.ne.s32.s32 $p0/$o127, $r4, $r5;
	@$p0.ne bra l0x000001f0;
	mov.u32 $r4, $r3;
	bra l0x00000240;
	l0x00000238: mov.u32 $r4, $r124;
	l0x00000240: nop;
	ssy 0x000002d0;
	add.u32 $r3, -$r3, 0x0000000d;
	set.le.s32.s32 $p0/$o127, $r3, $r124;
	@$p0.ne bra l0x000002d0;
	shl.u32 $r17, $r3, 0x00000005;
	shl.u32 $r5, $r13, 0x00000006;
	mov.half.u32 $r3, $r1;
	add.half.u32 $r17, $r1, $r17;
	add.u32 $r5, $r12, $r5;
	l0x00000288: ld.global.u32 $r18, [$r5];
	shl.u32 $r19, $r3, 0x00000002;
	add.u32 $r19, $r10, $r19;
	shl.b32 $ofs3, $r19, 0x0;
	mov.u32 s[$ofs3+0x0030], $r18;
	add.u32 $r3, $r3, 0x00000020;
	set.ne.s32.s32 $p0/$o127, $r3, $r17;
	add.u32 $r5, $r5, 0x00000004;
	@$p0.ne bra l0x00000288;
	l0x000002d0: shl.u32 $r3, $r4, 0x00000005;
	add.u32 $r3, $r1, -$r3;
	add.u32 $r3, $r3, 0x000001a0;
	shl.u32 $r3, $r3, 0x00000002;
	add.u32 $r3, $r11, $r3;
	shl.b32 $ofs3, $r3, 0x0;
	mov.u32 $r3, 0x00000080;
	mov.u32 s[$ofs3+0x0000], $r3;
	shl.u32 $r3, $r0, 0x00000003;
	mov.u32 s[$ofs1+0x0700], $r3;
	shr.s32 $r3, $r0, 0x0000001d;
	mov.u32 s[$ofs1+0x0780], $r3;
	bra l0x000004c0;
	l0x00000338: shl.u32 $r3, $r13, 0x00000006;
	add.u32 $r3, $r12, $r3;
	ld.global.u32 $r18, [$r3];
	add.u32 $r4, $r3, 0x00000004;
	ld.global.u32 $r17, [$r4];
	add.u32 $r4, $r3, 0x00000008;
	ld.global.u32 $r5, [$r4];
	add.u32 $r4, $r3, 0x0000000c;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs2+0x0000], $r18;
	mov.u32 s[$ofs1+0x0080], $r17;
	mov.u32 s[$ofs1+0x0100], $r5;
	mov.u32 s[$ofs1+0x0180], $r4;
	add.u32 $r4, $r3, 0x00000010;
	ld.global.u32 $r18, [$r4];
	add.u32 $r4, $r3, 0x00000014;
	ld.global.u32 $r17, [$r4];
	add.u32 $r4, $r3, 0x00000018;
	ld.global.u32 $r5, [$r4];
	add.u32 $r4, $r3, 0x0000001c;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs1+0x0200], $r18;
	mov.u32 s[$ofs1+0x0280], $r17;
	mov.u32 s[$ofs1+0x0300], $r5;
	mov.u32 s[$ofs1+0x0380], $r4;
	add.u32 $r4, $r3, 0x00000020;
	ld.global.u32 $r18, [$r4];
	add.u32 $r4, $r3, 0x00000024;
	ld.global.u32 $r17, [$r4];
	add.u32 $r4, $r3, 0x00000028;
	ld.global.u32 $r5, [$r4];
	add.u32 $r4, $r3, 0x0000002c;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs1+0x0400], $r18;
	mov.u32 s[$ofs1+0x0480], $r17;
	mov.u32 s[$ofs1+0x0500], $r5;
	mov.u32 s[$ofs1+0x0580], $r4;
	add.u32 $r4, $r3, 0x00000030;
	ld.global.u32 $r17, [$r4];
	add.u32 $r4, $r3, 0x00000034;
	ld.global.u32 $r5, [$r4];
	add.u32 $r4, $r3, 0x00000038;
	ld.global.u32 $r4, [$r4];
	add.u32 $r3, $r3, 0x0000003c;
	ld.global.u32 $r3, [$r3];
	mov.u32 s[$ofs1+0x0600], $r17;
	mov.u32 s[$ofs1+0x0680], $r5;
	mov.u32 s[$ofs1+0x0700], $r4;
	mov.u32 s[$ofs1+0x0780], $r3;
	l0x000004c0: cvt.u32.u8 $r4, s[$ofs2+0x0001];
	cvt.u32.u8 $r5, s[$ofs2+0x0002];
	cvt.u32.u8 $r17, s[$ofs2+0x0003];
	cvt.u32.u8 $r3, s[$ofs2+0x0000];
	shl.u32 $r4, $r4, 0x00000008;
	shl.u32 $r5, $r5, 0x00000010;
	shl.u32 $r17, $r17, 0x00000018;
	or.b32 $r3, $r3, $r4;
	or.b32 $r4, $r5, $r17;
	or.b32 $r3, $r3, $r4;
	mov.u32 s[$ofs2+0x0000], $r3;
	add.u32 $ofs3, $ofs1, 0x00000080;
	cvt.u32.u8 $r4, s[$ofs3+0x0001];
	cvt.u32.u8 $r5, s[$ofs3+0x0002];
	cvt.u32.u8 $r17, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r4, $r4, 0x00000008;
	shl.u32 $r5, $r5, 0x00000010;
	shl.u32 $r17, $r17, 0x00000018;
	or.b32 $r3, $r3, $r4;
	or.b32 $r4, $r5, $r17;
	or.b32 $r22, $r3, $r4;
	add.u32 $ofs3, $ofs1, 0x00000100;
	mov.u32 s[$ofs1+0x0080], $r22;
	cvt.u32.u8 $r4, s[$ofs3+0x0001];
	cvt.u32.u8 $r5, s[$ofs3+0x0002];
	cvt.u32.u8 $r17, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r4, $r4, 0x00000008;
	shl.u32 $r5, $r5, 0x00000010;
	shl.u32 $r17, $r17, 0x00000018;
	or.b32 $r3, $r3, $r4;
	or.b32 $r4, $r5, $r17;
	or.b32 $r5, $r3, $r4;
	add.u32 $ofs3, $ofs1, 0x00000180;
	mov.u32 s[$ofs1+0x0100], $r5;
	cvt.u32.u8 $r4, s[$ofs3+0x0001];
	cvt.u32.u8 $r17, s[$ofs3+0x0002];
	cvt.u32.u8 $r18, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r4, $r4, 0x00000008;
	shl.u32 $r17, $r17, 0x00000010;
	shl.u32 $r18, $r18, 0x00000018;
	or.b32 $r3, $r3, $r4;
	or.b32 $r4, $r17, $r18;
	or.b32 $r24, $r3, $r4;
	add.u32 $ofs3, $ofs1, 0x00000200;
	mov.u32 s[$ofs1+0x0180], $r24;
	cvt.u32.u8 $r4, s[$ofs3+0x0001];
	cvt.u32.u8 $r17, s[$ofs3+0x0002];
	cvt.u32.u8 $r18, s[$ofs3+0x0003];
	cvt.u32.u8 $r3, s[$ofs3+0x0000];
	shl.u32 $r4, $r4, 0x00000008;
	shl.u32 $r17, $r17, 0x00000010;
	shl.u32 $r18, $r18, 0x00000018;
	or.b32 $r3, $r3, $r4;
	or.b32 $r4, $r17, $r18;
	or.b32 $r3, $r3, $r4;
	add.u32 $ofs3, $ofs1, 0x00000280;
	mov.u32 s[$ofs1+0x0200], $r3;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r18, s[$ofs3+0x0002];
	cvt.u32.u8 $r19, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r18, $r18, 0x00000010;
	shl.u32 $r19, $r19, 0x00000018;
	or.b32 $r4, $r4, $r17;
	or.b32 $r17, $r18, $r19;
	or.b32 $r26, $r4, $r17;
	add.u32 $ofs3, $ofs1, 0x00000300;
	mov.u32 s[$ofs1+0x0280], $r26;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r18, s[$ofs3+0x0002];
	cvt.u32.u8 $r19, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r18, $r18, 0x00000010;
	shl.u32 $r19, $r19, 0x00000018;
	or.b32 $r4, $r4, $r17;
	or.b32 $r17, $r18, $r19;
	or.b32 $r19, $r4, $r17;
	add.u32 $ofs3, $ofs1, 0x00000380;
	mov.u32 s[$ofs1+0x0300], $r19;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r18, s[$ofs3+0x0002];
	cvt.u32.u8 $r20, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r18, $r18, 0x00000010;
	shl.u32 $r20, $r20, 0x00000018;
	or.b32 $r4, $r4, $r17;
	or.b32 $r17, $r18, $r20;
	or.b32 $r28, $r4, $r17;
	add.u32 $ofs3, $ofs1, 0x00000400;
	mov.u32 s[$ofs1+0x0380], $r28;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r18, s[$ofs3+0x0002];
	cvt.u32.u8 $r20, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r18, $r18, 0x00000010;
	shl.u32 $r20, $r20, 0x00000018;
	or.b32 $r4, $r4, $r17;
	or.b32 $r17, $r18, $r20;
	or.b32 $r21, $r4, $r17;
	add.u32 $ofs3, $ofs1, 0x00000480;
	mov.u32 s[$ofs1+0x0400], $r21;
	cvt.u32.u8 $r17, s[$ofs3+0x0001];
	cvt.u32.u8 $r18, s[$ofs3+0x0002];
	cvt.u32.u8 $r20, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r17, $r17, 0x00000008;
	shl.u32 $r18, $r18, 0x00000010;
	shl.u32 $r20, $r20, 0x00000018;
	or.b32 $r4, $r4, $r17;
	or.b32 $r17, $r18, $r20;
	or.b32 $r17, $r4, $r17;
	add.u32 $ofs3, $ofs1, 0x00000500;
	mov.u32 s[$ofs1+0x0480], $r17;
	cvt.u32.u8 $r18, s[$ofs3+0x0001];
	cvt.u32.u8 $r20, s[$ofs3+0x0002];
	cvt.u32.u8 $r23, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r18, $r18, 0x00000008;
	shl.u32 $r20, $r20, 0x00000010;
	shl.u32 $r23, $r23, 0x00000018;
	or.b32 $r4, $r4, $r18;
	or.b32 $r18, $r20, $r23;
	or.b32 $r23, $r4, $r18;
	add.u32 $ofs3, $ofs1, 0x00000580;
	mov.u32 s[$ofs1+0x0500], $r23;
	cvt.u32.u8 $r18, s[$ofs3+0x0001];
	cvt.u32.u8 $r20, s[$ofs3+0x0002];
	cvt.u32.u8 $r25, s[$ofs3+0x0003];
	cvt.u32.u8 $r4, s[$ofs3+0x0000];
	shl.u32 $r18, $r18, 0x00000008;
	shl.u32 $r20, $r20, 0x00000010;
	shl.u32 $r25, $r25, 0x00000018;
	or.b32 $r4, $r4, $r18;
	or.b32 $r18, $r20, $r25;
	or.b32 $r4, $r4, $r18;
	add.u32 $ofs3, $ofs1, 0x00000600;
	mov.u32 s[$ofs1+0x0580], $r4;
	cvt.u32.u8 $r20, s[$ofs3+0x0001];
	cvt.u32.u8 $r25, s[$ofs3+0x0002];
	cvt.u32.u8 $r27, s[$ofs3+0x0003];
	cvt.u32.u8 $r18, s[$ofs3+0x0000];
	shl.u32 $r20, $r20, 0x00000008;
	shl.u32 $r25, $r25, 0x00000010;
	shl.u32 $r27, $r27, 0x00000018;
	or.b32 $r18, $r18, $r20;
	or.b32 $r20, $r25, $r27;
	or.b32 $r25, $r18, $r20;
	add.u32 $ofs3, $ofs1, 0x00000680;
	mov.u32 s[$ofs1+0x0600], $r25;
	cvt.u32.u8 $r20, s[$ofs3+0x0001];
	cvt.u32.u8 $r27, s[$ofs3+0x0002];
	cvt.u32.u8 $r29, s[$ofs3+0x0003];
	cvt.u32.u8 $r18, s[$ofs3+0x0000];
	shl.u32 $r20, $r20, 0x00000008;
	shl.u32 $r27, $r27, 0x00000010;
	shl.u32 $r29, $r29, 0x00000018;
	or.b32 $r18, $r18, $r20;
	or.b32 $r20, $r27, $r29;
	or.b32 $r18, $r18, $r20;
	add.u32 $ofs3, $ofs1, 0x00000700;
	mov.u32 s[$ofs1+0x0680], $r18;
	cvt.u32.u8 $r27, s[$ofs3+0x0001];
	cvt.u32.u8 $r29, s[$ofs3+0x0002];
	cvt.u32.u8 $r30, s[$ofs3+0x0003];
	cvt.u32.u8 $r20, s[$ofs3+0x0000];
	shl.u32 $r27, $r27, 0x00000008;
	shl.u32 $r29, $r29, 0x00000010;
	shl.u32 $r30, $r30, 0x00000018;
	or.b32 $r20, $r20, $r27;
	or.b32 $r27, $r29, $r30;
	or.b32 $r27, $r20, $r27;
	add.u32 $ofs3, $ofs1, 0x00000780;
	mov.u32 s[$ofs1+0x0700], $r27;
	cvt.u32.u8 $r29, s[$ofs3+0x0001];
	cvt.u32.u8 $r30, s[$ofs3+0x0002];
	cvt.u32.u8 $r31, s[$ofs3+0x0003];
	cvt.u32.u8 $r20, s[$ofs3+0x0000];
	shl.u32 $r29, $r29, 0x00000008;
	shl.u32 $r30, $r30, 0x00000010;
	shl.u32 $r31, $r31, 0x00000018;
	or.b32 $r20, $r20, $r29;
	xor.b32 $r32, $r14, $r15;
	or.b32 $r29, $r30, $r31;
	and.b32 $r30, $r16, $r32;
	or.b32 $r20, $r20, $r29;
	xor.b32 $r29, $r14, $r30;
	mov.u32 s[$ofs1+0x0780], $r20;
	add.u32 $r29, s[$ofs2+0x0000], $r29;
	mov.u32 $r31, 0xffffffff;
	add.u32 $r30, $r7, $r29;
	cvt.u32.u32 $p0|$o127, $r31;
	mov.u32 $r29, $r124;
	add.u32 $r30, $r30, 0xd76aa478;
	@$p0.ne shr.u32 $r29, $r30, 0x00000019;
	shl.u32 $r30, $r30, 0x00000007;
	or.b32 $r29, $r30, $r29;
	xor.b32 $r30, $r16, $r15;
	add.u32 $r29, $r16, $r29;
	and.b32 $r30, $r29, $r30;
	xor.b32 $r30, $r15, $r30;
	add.half.u32 $r30, $r22, $r30;
	add.half.u32 $r31, $r14, $r30;
	mov.u32 $r30, $r124;
	add.u32 $r31, $r31, 0xe8c7b756;
	@$p0.ne shr.u32 $r30, $r31, 0x00000014;
	shl.u32 $r31, $r31, 0x0000000c;
	or.b32 $r30, $r31, $r30;
	xor.b32 $r31, $r29, $r16;
	add.u32 $r30, $r29, $r30;
	and.b32 $r31, $r30, $r31;
	xor.b32 $r31, $r16, $r31;
	add.half.u32 $r31, $r5, $r31;
	add.half.u32 $r32, $r15, $r31;
	mov.u32 $r31, $r124;
	add.u32 $r32, $r32, 0x242070db;
	@$p0.ne shr.u32 $r31, $r32, 0x0000000f;
	shl.u32 $r32, $r32, 0x00000011;
	or.b32 $r31, $r32, $r31;
	xor.b32 $r32, $r30, $r29;
	add.u32 $r31, $r30, $r31;
	and.b32 $r32, $r31, $r32;
	xor.b32 $r32, $r29, $r32;
	add.half.u32 $r32, $r24, $r32;
	add.half.u32 $r33, $r16, $r32;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xc1bdceee;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000a;
	shl.u32 $r33, $r33, 0x00000016;
	or.b32 $r32, $r33, $r32;
	xor.b32 $r33, $r31, $r30;
	add.u32 $r32, $r31, $r32;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r3, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xf57c0faf;
	@$p0.ne shr.u32 $r29, $r33, 0x00000019;
	shl.u32 $r33, $r33, 0x00000007;
	or.b32 $r29, $r33, $r29;
	xor.b32 $r33, $r32, $r31;
	add.u32 $r29, $r32, $r29;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r26, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0x4787c62a;
	@$p0.ne shr.u32 $r30, $r33, 0x00000014;
	shl.u32 $r33, $r33, 0x0000000c;
	or.b32 $r30, $r33, $r30;
	xor.b32 $r33, $r29, $r32;
	add.u32 $r30, $r29, $r30;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r19, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xa8304613;
	@$p0.ne shr.u32 $r31, $r33, 0x0000000f;
	shl.u32 $r33, $r33, 0x00000011;
	or.b32 $r31, $r33, $r31;
	xor.b32 $r33, $r30, $r29;
	add.u32 $r31, $r30, $r31;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r28, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xfd469501;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000a;
	shl.u32 $r33, $r33, 0x00000016;
	or.b32 $r32, $r33, $r32;
	xor.b32 $r33, $r31, $r30;
	add.u32 $r32, $r31, $r32;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r21, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0x698098d8;
	@$p0.ne shr.u32 $r29, $r33, 0x00000019;
	shl.u32 $r33, $r33, 0x00000007;
	or.b32 $r29, $r33, $r29;
	xor.b32 $r33, $r32, $r31;
	add.u32 $r29, $r32, $r29;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r17, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0x8b44f7af;
	@$p0.ne shr.u32 $r30, $r33, 0x00000014;
	shl.u32 $r33, $r33, 0x0000000c;
	or.b32 $r30, $r33, $r30;
	xor.b32 $r33, $r29, $r32;
	add.u32 $r30, $r29, $r30;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r23, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xffff5bb1;
	@$p0.ne shr.u32 $r31, $r33, 0x0000000f;
	shl.u32 $r33, $r33, 0x00000011;
	or.b32 $r31, $r33, $r31;
	xor.b32 $r33, $r30, $r29;
	add.u32 $r31, $r30, $r31;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r4, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0x895cd7be;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000a;
	shl.u32 $r33, $r33, 0x00000016;
	or.b32 $r32, $r33, $r32;
	xor.b32 $r33, $r31, $r30;
	add.u32 $r32, $r31, $r32;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r25, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0x6b901122;
	@$p0.ne shr.u32 $r29, $r33, 0x00000019;
	shl.u32 $r33, $r33, 0x00000007;
	or.b32 $r29, $r33, $r29;
	xor.b32 $r33, $r32, $r31;
	add.u32 $r29, $r32, $r29;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r18, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0xfd987193;
	@$p0.ne shr.u32 $r30, $r33, 0x00000014;
	shl.u32 $r33, $r33, 0x0000000c;
	or.b32 $r30, $r33, $r30;
	xor.b32 $r33, $r29, $r32;
	add.u32 $r30, $r29, $r30;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r27, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xa679438e;
	@$p0.ne shr.u32 $r31, $r33, 0x0000000f;
	shl.u32 $r33, $r33, 0x00000011;
	or.b32 $r31, $r33, $r31;
	xor.b32 $r33, $r30, $r29;
	add.u32 $r31, $r30, $r31;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r20, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0x49b40821;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000a;
	shl.u32 $r33, $r33, 0x00000016;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r22, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xf61e2562;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001b;
	shl.u32 $r33, $r33, 0x00000005;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r19, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0xc040b340;
	@$p0.ne shr.u32 $r30, $r33, 0x00000017;
	shl.u32 $r33, $r33, 0x00000009;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r4, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0x265e5a51;
	@$p0.ne shr.u32 $r31, $r33, 0x00000012;
	shl.u32 $r33, $r33, 0x0000000e;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, s[$ofs2+0x0000], $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xe9b6c7aa;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000c;
	shl.u32 $r33, $r33, 0x00000014;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r26, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xd62f105d;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001b;
	shl.u32 $r33, $r33, 0x00000005;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r23, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0x02441453;
	@$p0.ne shr.u32 $r30, $r33, 0x00000017;
	shl.u32 $r33, $r33, 0x00000009;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r20, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xd8a1e681;
	@$p0.ne shr.u32 $r31, $r33, 0x00000012;
	shl.u32 $r33, $r33, 0x0000000e;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r3, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xe7d3fbc8;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000c;
	shl.u32 $r33, $r33, 0x00000014;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r17, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0x21e1cde6;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001b;
	shl.u32 $r33, $r33, 0x00000005;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r27, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0xc33707d6;
	@$p0.ne shr.u32 $r30, $r33, 0x00000017;
	shl.u32 $r33, $r33, 0x00000009;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r24, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xf4d50d87;
	@$p0.ne shr.u32 $r31, $r33, 0x00000012;
	shl.u32 $r33, $r33, 0x0000000e;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r21, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0x455a14ed;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000c;
	shl.u32 $r33, $r33, 0x00000014;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	and.b32 $r33, $r30, $r33;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r18, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xa9e3e905;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001b;
	shl.u32 $r33, $r33, 0x00000005;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	and.b32 $r33, $r31, $r33;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r5, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0xfcefa3f8;
	@$p0.ne shr.u32 $r30, $r33, 0x00000017;
	shl.u32 $r33, $r33, 0x00000009;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	and.b32 $r33, $r32, $r33;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r28, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0x676f02d9;
	@$p0.ne shr.u32 $r31, $r33, 0x00000012;
	shl.u32 $r33, $r33, 0x0000000e;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	and.b32 $r33, $r29, $r33;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r25, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0x8d2a4c8a;
	@$p0.ne shr.u32 $r32, $r33, 0x0000000c;
	shl.u32 $r33, $r33, 0x00000014;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r26, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xfffa3942;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001c;
	shl.u32 $r33, $r33, 0x00000004;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r21, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0x8771f681;
	@$p0.ne shr.u32 $r30, $r33, 0x00000015;
	shl.u32 $r33, $r33, 0x0000000b;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r4, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0x6d9d6122;
	@$p0.ne shr.u32 $r31, $r33, 0x00000010;
	shl.u32 $r33, $r33, 0x00000010;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r27, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xfde5380c;
	@$p0.ne shr.u32 $r32, $r33, 0x00000009;
	shl.u32 $r33, $r33, 0x00000017;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r22, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xa4beea44;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001c;
	shl.u32 $r33, $r33, 0x00000004;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r3, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0x4bdecfa9;
	@$p0.ne shr.u32 $r30, $r33, 0x00000015;
	shl.u32 $r33, $r33, 0x0000000b;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r28, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xf6bb4b60;
	@$p0.ne shr.u32 $r31, $r33, 0x00000010;
	shl.u32 $r33, $r33, 0x00000010;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r23, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xbebfbc70;
	@$p0.ne shr.u32 $r32, $r33, 0x00000009;
	shl.u32 $r33, $r33, 0x00000017;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r18, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0x289b7ec6;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001c;
	shl.u32 $r33, $r33, 0x00000004;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, s[$ofs2+0x0000], $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0xeaa127fa;
	@$p0.ne shr.u32 $r30, $r33, 0x00000015;
	shl.u32 $r33, $r33, 0x0000000b;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r24, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0xd4ef3085;
	@$p0.ne shr.u32 $r31, $r33, 0x00000010;
	shl.u32 $r33, $r33, 0x00000010;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r19, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0x04881d05;
	@$p0.ne shr.u32 $r32, $r33, 0x00000009;
	shl.u32 $r33, $r33, 0x00000017;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	xor.b32 $r33, $r32, $r31;
	xor.b32 $r33, $r30, $r33;
	add.half.u32 $r33, $r17, $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xd9d4d039;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001c;
	shl.u32 $r33, $r33, 0x00000004;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	xor.b32 $r33, $r29, $r32;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, $r25, $r33;
	add.half.u32 $r33, $r30, $r33;
	mov.u32 $r30, $r124;
	add.u32 $r33, $r33, 0xe6db99e5;
	@$p0.ne shr.u32 $r30, $r33, 0x00000015;
	shl.u32 $r33, $r33, 0x0000000b;
	or.b32 $r30, $r33, $r30;
	add.u32 $r30, $r29, $r30;
	xor.b32 $r33, $r30, $r29;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r33, $r20, $r33;
	add.half.u32 $r33, $r31, $r33;
	mov.u32 $r31, $r124;
	add.u32 $r33, $r33, 0x1fa27cf8;
	@$p0.ne shr.u32 $r31, $r33, 0x00000010;
	shl.u32 $r33, $r33, 0x00000010;
	or.b32 $r31, $r33, $r31;
	add.u32 $r31, $r30, $r31;
	xor.b32 $r33, $r31, $r30;
	xor.b32 $r33, $r29, $r33;
	add.half.u32 $r33, $r5, $r33;
	add.half.u32 $r33, $r32, $r33;
	mov.u32 $r32, $r124;
	add.u32 $r33, $r33, 0xc4ac5665;
	@$p0.ne shr.u32 $r32, $r33, 0x00000009;
	shl.u32 $r33, $r33, 0x00000017;
	or.b32 $r32, $r33, $r32;
	add.u32 $r32, $r31, $r32;
	or.b32 $r33, $r32, $r30;
	xor.b32 $r33, $r31, $r33;
	add.half.u32 $r33, s[$ofs2+0x0000], $r33;
	add.half.u32 $r33, $r29, $r33;
	mov.u32 $r29, $r124;
	add.u32 $r33, $r33, 0xf4292244;
	@$p0.ne shr.u32 $r29, $r33, 0x0000001a;
	shl.u32 $r33, $r33, 0x00000006;
	or.b32 $r29, $r33, $r29;
	add.u32 $r29, $r32, $r29;
	or.b32 $r33, $r29, $r31;
	xor.b32 $r33, $r32, $r33;
	add.half.u32 $r28, $r28, $r33;
	add.half.u32 $r30, $r30, $r28;
	mov.u32 $r28, $r124;
	add.u32 $r30, $r30, 0x432aff97;
	@$p0.ne shr.u32 $r28, $r30, 0x00000016;
	shl.u32 $r30, $r30, 0x0000000a;
	or.b32 $r28, $r30, $r28;
	add.u32 $r28, $r29, $r28;
	or.b32 $r30, $r28, $r32;
	xor.b32 $r30, $r29, $r30;
	add.half.u32 $r27, $r27, $r30;
	add.half.u32 $r30, $r31, $r27;
	mov.u32 $r27, $r124;
	add.u32 $r30, $r30, 0xab9423a7;
	@$p0.ne shr.u32 $r27, $r30, 0x00000011;
	shl.u32 $r30, $r30, 0x0000000f;
	or.b32 $r27, $r30, $r27;
	add.u32 $r27, $r28, $r27;
	or.b32 $r30, $r27, $r29;
	xor.b32 $r30, $r28, $r30;
	add.half.u32 $r26, $r26, $r30;
	add.half.u32 $r30, $r32, $r26;
	mov.u32 $r26, $r124;
	add.u32 $r30, $r30, 0xfc93a039;
	@$p0.ne shr.u32 $r26, $r30, 0x0000000b;
	shl.u32 $r30, $r30, 0x00000015;
	or.b32 $r26, $r30, $r26;
	add.u32 $r26, $r27, $r26;
	or.b32 $r30, $r26, $r28;
	xor.b32 $r30, $r27, $r30;
	add.half.u32 $r25, $r25, $r30;
	add.half.u32 $r29, $r29, $r25;
	mov.u32 $r25, $r124;
	add.u32 $r29, $r29, 0x655b59c3;
	@$p0.ne shr.u32 $r25, $r29, 0x0000001a;
	shl.u32 $r29, $r29, 0x00000006;
	or.b32 $r25, $r29, $r25;
	add.u32 $r25, $r26, $r25;
	or.b32 $r29, $r25, $r27;
	xor.b32 $r29, $r26, $r29;
	add.half.u32 $r24, $r24, $r29;
	add.half.u32 $r28, $r28, $r24;
	mov.u32 $r24, $r124;
	add.u32 $r28, $r28, 0x8f0ccc92;
	@$p0.ne shr.u32 $r24, $r28, 0x00000016;
	shl.u32 $r28, $r28, 0x0000000a;
	or.b32 $r24, $r28, $r24;
	add.u32 $r24, $r25, $r24;
	or.b32 $r28, $r24, $r26;
	xor.b32 $r28, $r25, $r28;
	add.half.u32 $r23, $r23, $r28;
	add.half.u32 $r27, $r27, $r23;
	mov.u32 $r23, $r124;
	add.u32 $r27, $r27, 0xffeff47d;
	@$p0.ne shr.u32 $r23, $r27, 0x00000011;
	shl.u32 $r27, $r27, 0x0000000f;
	or.b32 $r23, $r27, $r23;
	add.u32 $r23, $r24, $r23;
	or.b32 $r27, $r23, $r25;
	xor.b32 $r27, $r24, $r27;
	add.half.u32 $r22, $r22, $r27;
	add.half.u32 $r26, $r26, $r22;
	mov.u32 $r22, $r124;
	add.u32 $r26, $r26, 0x85845dd1;
	@$p0.ne shr.u32 $r22, $r26, 0x0000000b;
	shl.u32 $r26, $r26, 0x00000015;
	or.b32 $r22, $r26, $r22;
	add.u32 $r22, $r23, $r22;
	or.b32 $r26, $r22, $r24;
	xor.b32 $r26, $r23, $r26;
	add.half.u32 $r21, $r21, $r26;
	add.half.u32 $r25, $r25, $r21;
	mov.u32 $r21, $r124;
	add.u32 $r25, $r25, 0x6fa87e4f;
	@$p0.ne shr.u32 $r21, $r25, 0x0000001a;
	shl.u32 $r25, $r25, 0x00000006;
	or.b32 $r21, $r25, $r21;
	add.u32 $r21, $r22, $r21;
	or.b32 $r25, $r21, $r23;
	xor.b32 $r25, $r22, $r25;
	add.half.u32 $r20, $r20, $r25;
	add.half.u32 $r24, $r24, $r20;
	mov.u32 $r20, $r124;
	add.u32 $r24, $r24, 0xfe2ce6e0;
	@$p0.ne shr.u32 $r20, $r24, 0x00000016;
	shl.u32 $r24, $r24, 0x0000000a;
	or.b32 $r20, $r24, $r20;
	add.u32 $r20, $r21, $r20;
	or.b32 $r24, $r20, $r22;
	xor.b32 $r24, $r21, $r24;
	add.half.u32 $r19, $r19, $r24;
	add.half.u32 $r23, $r23, $r19;
	mov.u32 $r19, $r124;
	add.u32 $r23, $r23, 0xa3014314;
	@$p0.ne shr.u32 $r19, $r23, 0x00000011;
	shl.u32 $r23, $r23, 0x0000000f;
	or.b32 $r19, $r23, $r19;
	add.u32 $r19, $r20, $r19;
	or.b32 $r23, $r19, $r21;
	xor.b32 $r23, $r20, $r23;
	add.half.u32 $r18, $r18, $r23;
	add.half.u32 $r22, $r22, $r18;
	mov.u32 $r18, $r124;
	add.u32 $r22, $r22, 0x4e0811a1;
	@$p0.ne shr.u32 $r18, $r22, 0x0000000b;
	shl.u32 $r22, $r22, 0x00000015;
	or.b32 $r18, $r22, $r18;
	add.u32 $r18, $r19, $r18;
	or.b32 $r22, $r18, $r20;
	xor.b32 $r22, $r19, $r22;
	add.half.u32 $r3, $r3, $r22;
	add.half.u32 $r21, $r21, $r3;
	mov.u32 $r3, $r124;
	add.u32 $r21, $r21, 0xf7537e82;
	@$p0.ne shr.u32 $r3, $r21, 0x0000001a;
	shl.u32 $r21, $r21, 0x00000006;
	or.b32 $r3, $r21, $r3;
	add.u32 $r3, $r18, $r3;
	or.b32 $r21, $r3, $r19;
	xor.b32 $r21, $r18, $r21;
	add.half.u32 $r4, $r4, $r21;
	add.half.u32 $r20, $r20, $r4;
	mov.u32 $r4, $r124;
	add.u32 $r20, $r20, 0xbd3af235;
	@$p0.ne shr.u32 $r4, $r20, 0x00000016;
	shl.u32 $r20, $r20, 0x0000000a;
	or.b32 $r4, $r20, $r4;
	add.u32 $r4, $r3, $r4;
	or.b32 $r20, $r18, $r4;
	xor.b32 $r20, $r3, $r20;
	add.half.u32 $r5, $r5, $r20;
	add.half.u32 $r19, $r19, $r5;
	mov.u32 $r5, $r124;
	add.u32 $r19, $r19, 0x2ad7d2bb;
	@$p0.ne shr.u32 $r5, $r19, 0x00000011;
	shl.u32 $r19, $r19, 0x0000000f;
	or.b32 $r5, $r19, $r5;
	add.u32 $r5, $r4, $r5;
	or.b32 $r19, $r3, $r5;
	xor.b32 $r19, $r4, $r19;
	add.half.u32 $r17, $r17, $r19;
	add.half.u32 $r18, $r18, $r17;
	mov.u32 $r17, $r124;
	add.u32 $r18, $r18, 0xeb86d391;
	@$p0.ne shr.u32 $r17, $r18, 0x0000000b;
	shl.u32 $r18, $r18, 0x00000015;
	add.u32 $r14, $r14, $r4;
	or.b32 $r4, $r18, $r17;
	add.u32 $r7, $r7, $r3;
	add.u32 $r13, $r13, 0x00000001;
	add.half.u32 $r3, $r5, $r4;
	add.half.u32 $r15, $r15, $r5;
	set.ne.s32.s32 $p0/$o127, $r9, $r13;
	add.u32 $r16, $r16, $r3;
	@$p0.ne bra l0x00000148;
	bra l0x00001e10;
	l0x00001e08: mov.u32 $r7, 0x67452301;
	l0x00001e10: shl.u32 $r0, $r6, 0x00000002;
	add.half.u32 $r1, s[0x0028], $r0;
	mov.half.u16 $r0.lo, $r7.lo;
	shr.u32 $r2, $r7, 0x00000008;
	st.global.u8 [$r1], $r0;
	add.u32 $r3, $r1, 0x00000001;
	mov.u16 $r0.lo, $r2.lo;
	st.global.u8 [$r3], $r0;
	shr.u32 $r0, $r7, 0x00000010;
	shr.u32 $r3, $r7, 0x00000018;
	add.u32 $r2, $r1, 0x00000002;
	st.global.u8 [$r2], $r0;
	add.u32 $r1, $r1, 0x00000003;
	mov.u16 $r0.lo, $r3.lo;
	st.global.u8 [$r1], $r0;

	l_exit: exit;
}
//END INSTRUCTIONS
