

        *** GPGPU-Sim Simulator Version 3.2.2  [build 17315] ***


GPGPU-Sim PTX: simulation mode 0 (can change with PTX_SIM_MODE_FUNC environment variable:
               1=functional simulation only, 0=detailed performance simulator)
GPGPU-Sim: Configuration options:

-network_mode                           1 # Interconnection network mode
-inter_config_file   config_fermi_islip.icnt # Interconnection network config file
-gpgpu_ptx_use_cuobjdump                    1 # Use cuobjdump to extract ptx and sass from binaries
-gpgpu_experimental_lib_support                    0 # Try to extract code from cuda libraries [Broken because of unknown cudaGetExportTable]
-gpgpu_ptx_convert_to_ptxplus                    1 # Convert SASS (native ISA) to ptxplus and run ptxplus
-gpgpu_ptx_force_max_capability                   20 # Force maximum compute capability
-gpgpu_ptx_inst_debug_to_file                    0 # Dump executed instructions' debug information to file
-gpgpu_ptx_inst_debug_file       inst_debug.txt # Executed instructions' debug output file
-gpgpu_ptx_inst_debug_thread_uid                    1 # Thread UID for executed instructions' debug output
-gpgpu_simd_model                       1 # 1 = post-dominator
-gpgpu_shader_core_pipeline              1536:32 # shader core pipeline config, i.e., {<nthread>:<warpsize>}
-gpgpu_tex_cache:l1  4:128:24,L:R:m:N,F:128:4,128:2 # per-shader L1 texture cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>:<rf>}
-gpgpu_const_cache:l1 64:64:2,L:R:f:N,A:2:32,4 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:il1     4:128:4,L:R:f:N,A:2:32,4 # shader L1 instruction cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:dl1     32:128:4,L:L:m:N,A:32:8,8 # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PrefL1                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PreShared                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gmem_skip_L1D                          0 # global memory access skip L1D cache (implements -Xptxas -dlcm=cg, default=no skip)
-gpgpu_perfect_mem                      0 # enable perfect memory mode (no cache miss)
-n_regfile_gating_group                    4 # group of lanes that should be read/written together)
-gpgpu_clock_gated_reg_file                    0 # enable clock gated reg file for power calculations
-gpgpu_clock_gated_lanes                    0 # enable clock gated lanes for power calculations
-gpgpu_shader_registers                32768 # Number of registers per shader core. Limits number of concurrent CTAs. (default 8192)
-gpgpu_shader_cta                       8 # Maximum number of concurrent CTAs in shader (default 8)
-gpgpu_n_clusters                      14 # number of processing clusters
-gpgpu_n_cores_per_cluster                    1 # number of simd cores per cluster
-gpgpu_n_cluster_ejection_buffer_size                    8 # number of packets in ejection buffer
-gpgpu_n_ldst_response_buffer_size                    2 # number of response packets in ld/st unit ejection buffer
-gpgpu_shmem_size                   16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size                   49152 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefL1                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefShared                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_num_banks                   32 # Number of banks in the shared memory in each shader core (default 16)
-gpgpu_shmem_limited_broadcast                    0 # Limit shared memory to do one broadcast per cycle (default on)
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_warpdistro_shader                   -1 # Specify which shader core to collect the warp size distribution from
-gpgpu_warp_issue_shader                    0 # Specify which shader core to collect the warp issue distribution from
-gpgpu_local_mem_map                    1 # Mapping from local memory space address to simulated GPU physical address space (default = enabled)
-gpgpu_num_reg_banks                   16 # Number of register banks (default = 8)
-gpgpu_reg_bank_use_warp_id                    0 # Use warp ID in mapping registers to banks (default = off)
-gpgpu_operand_collector_num_units_sp                    6 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_sfu                    8 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_mem                    2 # number of collector units (default = 2)
-gpgpu_operand_collector_num_units_gen                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_in_ports_sp                    2 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_gen                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sp                    2 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_gen                    0 # number of collector unit in ports (default = 0)
-gpgpu_coalesce_arch                   13 # Coalescing arch (default = 13, anything else is off for now)
-gpgpu_num_sched_per_core                    2 # Number of warp schedulers per core
-gpgpu_max_insn_issue_per_warp                    1 # Max number of instructions that can be issued per warp in one cycle by scheduler
-gpgpu_simt_core_sim_order                    1 # Select the simulation order of cores in a cluster (0=Fix, 1=Round-Robin)
-gpgpu_pipeline_widths        2,1,1,2,1,1,2 # Pipeline widths ID_OC_SP,ID_OC_SFU,ID_OC_MEM,OC_EX_SP,OC_EX_SFU,OC_EX_MEM,EX_WB
-gpgpu_num_sp_units                     2 # Number of SP units (default=1)
-gpgpu_num_sfu_units                    1 # Number of SF units (default=1)
-gpgpu_num_mem_units                    1 # Number if ldst units (default=1) WARNING: not hooked up to anything
-gpgpu_scheduler                      owf # Scheduler configuration: < lrr | gto | two_level_active > If two_level_active:<num_active_warps>:<inner_prioritization>:<outer_prioritization>For complete list of prioritization values see shader.h enum scheduler_prioritization_typeDefault: gto
-gpgpu_reg_sharing_approach                    4 # Approach used register sharing (default=3)
-gpgpu_reg_share_thersh_hold                  0.1 # Thresh hold factor used for sharing (default=0.5)
-gpgpu_dram_scheduler                    1 # 0 = fifo, 1 = FR-FCFS (defaul)
-gpgpu_dram_partition_queues              8:8:8:8 # i2$:$2d:d2$:$2i
-l2_ideal                               0 # Use a ideal L2 cache that always hit
-gpgpu_cache:dl2     64:128:8,L:B:m:W,A:32:4,4:0,32 # unified banked L2 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>}
-gpgpu_cache:dl2_texture_only                    0 # L2 cache used for texture only
-gpgpu_n_mem                            6 # number of memory modules (e.g. memory controllers) in gpu
-gpgpu_n_sub_partition_per_mchannel                    2 # number of memory subpartition in each memory module
-gpgpu_n_mem_per_ctrlr                    2 # number of memory chips per memory controller
-gpgpu_memlatency_stat                    0 # track and display latency statistics 0x2 enables MC, 0x4 enables queue logs
-gpgpu_frfcfs_dram_sched_queue_size                   16 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_return_queue_size                  114 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_buswidth                    4 # default = 4 bytes (8 bytes per cycle at DDR)
-gpgpu_dram_burst_length                    8 # Burst length of each DRAM request (default = 4 data bus cycle)
-dram_data_command_freq_ratio                    4 # Frequency ratio between DRAM data bus and command bus (default = 2 times, i.e. DDR)
-gpgpu_dram_timing_opt nbk=16:CCD=2:RRD=6:RCD=12:RAS=28:RP=12:RC=40: CL=12:WL=4:CDLR=5:WR=12:nbkgrp=4:CCDL=3:RTPL=2 # DRAM timing parameters = {nbk:tCCD:tRRD:tRCD:tRAS:tRP:tRC:CL:WL:tCDLR:tWR:nbkgrp:tCCDL:tRTPL}
-rop_latency                          120 # ROP queue latency (default 85)
-dram_latency                         100 # DRAM latency (default 30)
-gpgpu_mem_addr_mapping dramid@8;00000000.00000000.00000000.00000000.0000RRRR.RRRRRRRR.BBBCCCCB.CCSSSSSS # mapping memory address to dram model {dramid@<start bit>;<memory address map>}
-gpgpu_mem_addr_test                    0 # run sweep test to check address mapping for aliased address
-gpgpu_mem_address_mask                    1 # 0 = old addressing mask, 1 = new addressing mask, 2 = new add. mask + flipped bank sel and chip sel bits
-gpuwattch_xml_file         gpuwattch.xml # GPUWattch XML file
-power_simulation_enabled                    0 # Turn on power simulator (1=On, 0=Off)
-power_per_cycle_dump                    0 # Dump detailed power output each cycle
-power_trace_enabled                    0 # produce a file for the power trace (1=On, 0=Off)
-power_trace_zlevel                     6 # Compression level of the power trace output log (0=no comp, 9=highest)
-steady_power_levels_enabled                    0 # produce a file for the steady power levels (1=On, 0=Off)
-steady_state_definition                  8:4 # allowed deviation:number of samples
-gpgpu_max_cycle                        0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_insn                         0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_cta                          0 # terminates gpu simulation early (0 = no limit)
-gpgpu_runtime_stat             5000000:0 # display runtime statistics such as dram utilization {<freq>:<flag>}
-liveness_message_freq                    1 # Minimum number of seconds between simulation liveness messages (0 = always print)
-gpgpu_flush_l1_cache                    0 # Flush L1 cache at the end of each kernel call
-gpgpu_flush_l2_cache                    0 # Flush L2 cache at the end of each kernel call
-gpgpu_deadlock_detect                    1 # Stop the simulation at deadlock (1=on (default), 0=off)
-gpgpu_ptx_instruction_classification                    0 # if enabled will classify ptx instruction types per kernel (Max 255 kernels now)
-gpgpu_ptx_sim_mode                     0 # Select between Performance (default) or Functional simulation (1)
-gpgpu_clock_domains 575.0:575.0:575.0:750.0 # Clock Domain Frequencies in MhZ {<Core Clock>:<ICNT Clock>:<L2 Clock>:<DRAM Clock>}
-gpgpu_max_concurrent_kernel                    8 # maximum kernels that can run concurrently on GPU
-gpgpu_cflog_interval                    0 # Interval between each snapshot in control flow logger
-visualizer_enabled                     0 # Turn on visualizer output (1=On, 0=Off)
-visualizer_outputfile                 NULL # Specifies the output log file for visualizer
-visualizer_zlevel                      6 # Compression level of the visualizer output log (0=no comp, 9=highest)
-trace_enabled                          0 # Turn on traces
-trace_components                    none # comma seperated list of traces to enable. Complete list found in trace_streams.tup. Default none
-trace_sampling_core                    0 # The core which is printed using CORE_DPRINTF. Default 0
-trace_sampling_memory_partition                   -1 # The memory partition which is printed using MEMPART_DPRINTF. Default -1 (i.e. all)
-enable_ptx_file_line_stats                    0 # Turn on PTX source line statistic profiling. (1 = On)
-ptx_line_stats_filename gpgpu_inst_stats.txt # Output file for PTX source line statistics.
-save_embedded_ptx                      0 # saves ptx files embedded in binary as <n>.ptx
-keep                                   0 # keep intermediate files created by GPGPU-Sim when interfacing with external programs
-gpgpu_ptx_save_converted_ptxplus                    1 # Saved converted ptxplus to a file
-ptx_opcode_latency_int         4,13,4,5,145 # Opcode latencies for integers <ADD,MAX,MUL,MAD,DIV>Default 1,1,19,25,145
-ptx_opcode_latency_fp          4,13,4,5,39 # Opcode latencies for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,30
-ptx_opcode_latency_dp         8,19,8,8,330 # Opcode latencies for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,335
-ptx_opcode_initiation_int            1,2,2,1,8 # Opcode initiation intervals for integers <ADD,MAX,MUL,MAD,DIV>Default 1,1,4,4,32
-ptx_opcode_initiation_fp            1,2,1,1,4 # Opcode initiation intervals for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,5
-ptx_opcode_initiation_dp         8,16,8,8,130 # Opcode initiation intervals for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,130
DRAM Timing Options:
nbk                                    16 # number of banks
CCD                                     2 # column to column delay
RRD                                     6 # minimal delay between activation of rows in different banks
RCD                                    12 # row to column delay
RAS                                    28 # time needed to activate row
RP                                     12 # time needed to precharge (deactivate) row
RC                                     40 # row cycle time
CDLR                                    5 # switching from write to read (changes tWTR)
WR                                     12 # last data-in to row precharge
CL                                     12 # CAS latency
WL                                      4 # Write latency
nbkgrp                                  4 # number of bank groups
CCDL                                    3 # column to column delay between accesses to different bank groups
RTPL                                    2 # read to precharge delay between accesses to different bank groups
Total number of memory sub partition = 12
addr_dec_mask[CHIP]  = 0000000000000000 	high:64 low:0
addr_dec_mask[BK]    = 000000000000e100 	high:16 low:8
addr_dec_mask[ROW]   = 000000000fff0000 	high:28 low:16
addr_dec_mask[COL]   = 0000000000001eff 	high:13 low:0
addr_dec_mask[BURST] = 000000000000003f 	high:6 low:0
sub_partition_id_mask = 0000000000000100
GPGPU-Sim uArch: clock freqs: 575000000.000000:575000000.000000:575000000.000000:750000000.000000
GPGPU-Sim uArch: clock periods: 0.00000000173913043478:0.00000000173913043478:0.00000000173913043478:0.00000000133333333333
*** Initializing Memory Statistics ***
GPGPU-Sim uArch: interconnect node map (shaderID+MemID to icntID)
GPGPU-Sim uArch: Memory nodes ID start from index: 14
GPGPU-Sim uArch:    0   1   2   3   4
GPGPU-Sim uArch:    5   6   7   8   9
GPGPU-Sim uArch:   10  11  12  13  14
GPGPU-Sim uArch:   15  16  17  18  19
GPGPU-Sim uArch:   20  21  22  23  24
GPGPU-Sim uArch:   25
GPGPU-Sim uArch: interconnect node reverse map (icntID to shaderID+MemID)
GPGPU-Sim uArch: Memory nodes start from ID: 14
GPGPU-Sim uArch:    0   1   2   3   4
GPGPU-Sim uArch:    5   6   7   8   9
GPGPU-Sim uArch:   10  11  12  13  14
GPGPU-Sim uArch:   15  16  17  18  19
GPGPU-Sim uArch:   20  21  22  23  24
GPGPU-Sim uArch:   25
565d394b495a4606576d0508c6454f8c  /home/vishwesh/Desktop/Register_Sharing_Pbm/ispass2009-benchmarks/bin/release/MUM
GPGPU-Sim uArch: performance model initialization complete.
GPGPU-Sim PTX: __cudaRegisterFatBinary, fat_cubin_handle = 1, filename=mummergpu.cu
self exe links to: /home/vishwesh/Desktop/Register_Sharing_Pbm/ispass2009-benchmarks/bin/release/MUM
Running md5sum using "md5sum /home/vishwesh/Desktop/Register_Sharing_Pbm/ispass2009-benchmarks/bin/release/MUM "
Running cuobjdump using "$CUDA_INSTALL_PATH/bin/cuobjdump -ptx -elf -sass /home/vishwesh/Desktop/Register_Sharing_Pbm/ispass2009-benchmarks/bin/release/MUM > _cuobjdump_complete_output_WlEMQ2"
Parsing file _cuobjdump_complete_output_WlEMQ2
######### cuobjdump parser ########
## Adding new section PTX
Adding ptx filename: _cuobjdump_1.ptx
Adding arch: sm_10
Adding identifier: mummergpu.cu
## Adding new section ELF
Adding arch: sm_10
Adding identifier: mummergpu.cu
## Adding new section ELF
Adding arch: sm_20
Adding identifier: mummergpu.cu
## Adding new section PTX
Adding ptx filename: _cuobjdump_2.ptx
Adding arch: sm_20
Adding identifier: mummergpu.cu
Done parsing!!!
GPGPU-Sim: WARNING: Capability >= 20 are not supported in PTXPlus
	Setting forced_max_capability to 19
GPGPU-Sim PTX: __cudaRegisterFunction _Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii : hostFun 0x0x409660, fat_cubin_handle = 1
GPGPU-Sim PTX: converting EMBEDDED .ptx file to ptxplus 
GPGPU-Sim PTX: DONE converting EMBEDDED .ptx file to ptxplus 
GPGPU-Sim PTX: encountered texture directive nodetex.
GPGPU-Sim PTX: encountered texture directive childrentex.
GPGPU-Sim PTX: encountered texture directive reftex.
GPGPU-Sim PTX: allocating constant region for "constant1_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii" from 0x100 to 0x12c (global memory space) 1
GPGPU-Sim PTX: allocating constant region for "constant1_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii" from 0x180 to 0x1b0 (global memory space) 2
GPGPU-Sim PTX: allocating local region for "l1" from 0x0 to 0x0 (local memory space)
GPGPU-Sim PTX: allocating local region for "l2" from 0x0 to 0x0 (local memory space)
GPGPU-Sim PTX: PTX uses two scalar type intruction with literal operand.
GPGPU-Sim PTX: instruction assembly for function '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Warning detected predicated return/exit.
GPGPU-Sim PTX: Warning detected predicated return/exit.
GPGPU-Sim PTX: Finding dominators for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Finding postdominators for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: reconvergence points for _Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x124 (_1.ptx:84) @$p0.ne bra l0x00000170;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x134 (_1.ptx:86) @$p0.ne bra l0x00000180;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x144 (_1.ptx:88) @$p0.ne bra l0x00000190;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x154 (_1.ptx:90) @$p0.ne bra l0x000001a0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x164 (_1.ptx:92) @$p0.ne bra l0x000001b0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x16c (_1.ptx:93) bra l0x000001b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x17c (_1.ptx:95) bra l0x000001b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x18c (_1.ptx:97) bra l0x000001b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x19c (_1.ptx:99) bra l0x000001b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x1ac (_1.ptx:101) bra l0x000001b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bc (_1.ptx:103) l0x000001b8: set.eq.s32.s32 $p0/$o127, $r0, $r124;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x1d4 (_1.ptx:106) @$p0.ne bra l0x000006a8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x21c (_1.ptx:115) @$p0.ne bra l0x00000260;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x22c (_1.ptx:117) @$p0.ne bra l0x00000270;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x23c (_1.ptx:119) @$p0.ne bra l0x00000280;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x24c (_1.ptx:121) @$p0.ne bra l0x00000288;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x25c (_1.ptx:123) bra l0x00000290;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x26c (_1.ptx:125) bra l0x00000290;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x27c (_1.ptx:127) bra l0x00000290;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x284 (_1.ptx:128) l0x00000280: bra l0x00000290;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x294 (_1.ptx:130) l0x00000290: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x29c (_1.ptx:131) @$p0.ne bra l0x00000338;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x2c4 (_1.ptx:137) @$p0.ne bra l0x00000318;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31c (_1.ptx:148) l0x00000318: nop;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x334 (_1.ptx:151) bra l0x00000768;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 23 (potential) branch divergence @  PC=0x38c (_1.ptx:162) @$p0.ne bra l0x000003f0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x404 (_1.ptx:179) l0x00000400: add.u32 $r0, $r4, -$r8;
GPGPU-Sim PTX: 24 (potential) branch divergence @  PC=0x3ac (_1.ptx:166) @$p0.ne bra l0x000003d8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x404 (_1.ptx:179) l0x00000400: add.u32 $r0, $r4, -$r8;
GPGPU-Sim PTX: 25 (potential) branch divergence @  PC=0x3d4 (_1.ptx:172) bra l0x00000400;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x404 (_1.ptx:179) l0x00000400: add.u32 $r0, $r4, -$r8;
GPGPU-Sim PTX: 26 (potential) branch divergence @  PC=0x3ec (_1.ptx:176) bra l0x00000400;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x404 (_1.ptx:179) l0x00000400: add.u32 $r0, $r4, -$r8;
GPGPU-Sim PTX: 27 (potential) branch divergence @  PC=0x43c (_1.ptx:186) @$p0.ne bra l0x00000488;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 28 (potential) branch divergence @  PC=0x44c (_1.ptx:188) @$p0.ne bra l0x00000498;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 29 (potential) branch divergence @  PC=0x45c (_1.ptx:190) @$p0.ne bra l0x000004a8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 30 (potential) branch divergence @  PC=0x46c (_1.ptx:192) @$p0.ne bra l0x000004b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 31 (potential) branch divergence @  PC=0x47c (_1.ptx:194) @$p0.ne bra l0x000004c8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 32 (potential) branch divergence @  PC=0x484 (_1.ptx:195) bra l0x000004d0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 33 (potential) branch divergence @  PC=0x494 (_1.ptx:197) bra l0x000004d0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 34 (potential) branch divergence @  PC=0x4a4 (_1.ptx:199) bra l0x000004d0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 35 (potential) branch divergence @  PC=0x4b4 (_1.ptx:201) bra l0x000004d0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 36 (potential) branch divergence @  PC=0x4c4 (_1.ptx:203) bra l0x000004d0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4d4 (_1.ptx:205) l0x000004d0: set.lt.s32.s32 $p1/$o127, $r3, $r13;
GPGPU-Sim PTX: 37 (potential) branch divergence @  PC=0x4f4 (_1.ptx:209) @$p1.ne bra l0x00000688;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 38 (potential) branch divergence @  PC=0x4fc (_1.ptx:210) @$p0.eq bra l0x00000688;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 39 (potential) branch divergence @  PC=0x55c (_1.ptx:222) @$p0.ne bra l0x00000570;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 40 (potential) branch divergence @  PC=0x56c (_1.ptx:224) bra l0x000006c0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x6c4 (_1.ptx:268) l0x000006c0: set.ge.s32.s32 $p0/$o127, s[0x0034], $r8;
GPGPU-Sim PTX: 41 (potential) branch divergence @  PC=0x5b4 (_1.ptx:234) @$p0.ne bra l0x00000600;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 42 (potential) branch divergence @  PC=0x5c4 (_1.ptx:236) @$p0.ne bra l0x00000610;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 43 (potential) branch divergence @  PC=0x5d4 (_1.ptx:238) @$p0.ne bra l0x00000620;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 44 (potential) branch divergence @  PC=0x5e4 (_1.ptx:240) @$p0.ne bra l0x00000630;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 45 (potential) branch divergence @  PC=0x5f4 (_1.ptx:242) @$p0.ne bra l0x00000640;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 46 (potential) branch divergence @  PC=0x5fc (_1.ptx:243) bra l0x00000648;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 47 (potential) branch divergence @  PC=0x60c (_1.ptx:245) bra l0x00000648;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 48 (potential) branch divergence @  PC=0x61c (_1.ptx:247) bra l0x00000648;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 49 (potential) branch divergence @  PC=0x62c (_1.ptx:249) bra l0x00000648;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 50 (potential) branch divergence @  PC=0x63c (_1.ptx:251) bra l0x00000648;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x64c (_1.ptx:253) l0x00000648: set.lt.s32.s32 $p0/$o127, $r3, $r13;
GPGPU-Sim PTX: 51 (potential) branch divergence @  PC=0x65c (_1.ptx:255) @$p0.ne bra l0x00000680;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 52 (potential) branch divergence @  PC=0x674 (_1.ptx:258) @$p1.ne bra l0x00000500;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 53 (potential) branch divergence @  PC=0x67c (_1.ptx:259) bra l0x00000688;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x68c (_1.ptx:261) l0x00000688: nop;
GPGPU-Sim PTX: 54 (potential) branch divergence @  PC=0x694 (_1.ptx:262) @$p0.ne bra l0x000001d8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 55 (potential) branch divergence @  PC=0x6a4 (_1.ptx:264) bra l0x000006c0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x6c4 (_1.ptx:268) l0x000006c0: set.ge.s32.s32 $p0/$o127, s[0x0034], $r8;
GPGPU-Sim PTX: 56 (potential) branch divergence @  PC=0x6dc (_1.ptx:271) @$p0.ne bra l0x00000740;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x744 (_1.ptx:284) l0x00000740: add.u32 $r1, -$r9, $r8;
GPGPU-Sim PTX: 57 (potential) branch divergence @  PC=0x764 (_1.ptx:288) bra l0x00000768;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x76c (_1.ptx:289) l0x00000768: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 58 (potential) branch divergence @  PC=0x7ac (_1.ptx:297) @$p0.ne bra l0x000000b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x7b4 (_1.ptx:298) nop;
GPGPU-Sim PTX: ... end of reconvergence points for _Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii'.
GPGPU-Sim PTX: instruction assembly for function '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Warning detected predicated return/exit.
GPGPU-Sim PTX: Warning detected predicated return/exit.
GPGPU-Sim PTX: Finding dominators for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Finding postdominators for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'...
GPGPU-Sim PTX: reconvergence points for _Z15mummergpuKernelP10MatchCoordPcPKiS3_ii...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x8ec (_1.ptx:372) @$p0.eq bra l0x000004a0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x934 (_1.ptx:381) @$p0.ne bra l0x000001b0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x944 (_1.ptx:383) @$p0.ne bra l0x000001c0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x954 (_1.ptx:385) @$p0.ne bra l0x000001d0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x964 (_1.ptx:387) @$p0.ne bra l0x000001d8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x974 (_1.ptx:389) bra l0x000001e0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x984 (_1.ptx:391) bra l0x000001e0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x994 (_1.ptx:393) bra l0x000001e0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x99c (_1.ptx:394) l0x000001d0: bra l0x000001e0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9ac (_1.ptx:396) l0x000001e0: set.ne.u32.u32 $p0/$o127, $r2, $r124;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x9b4 (_1.ptx:397) @$p0.ne bra l0x00000290;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x9dc (_1.ptx:403) @$p0.ne bra l0x00000270;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xa3c (_1.ptx:416) l0x00000270: nop;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0xa54 (_1.ptx:419) bra l0x00000568;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0xaac (_1.ptx:430) @$p0.ne bra l0x00000350;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xb34 (_1.ptx:447) l0x00000368: add.u32 $r0, $r11, $r10;
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0xb14 (_1.ptx:443) bra l0x00000368;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xb34 (_1.ptx:447) l0x00000368: add.u32 $r0, $r11, $r10;
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0xb64 (_1.ptx:453) @$p1.ne bra l0x00000480;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0xb6c (_1.ptx:454) @$p0.eq bra l0x00000480;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0xbcc (_1.ptx:466) @$p0.ne bra l0x00000418;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0xbdc (_1.ptx:468) bra l0x000004b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xc84 (_1.ptx:489) l0x000004b8: set.ge.s32.s32 $p0/$o127, s[0x0034], $r5;
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0xc1c (_1.ptx:476) @$p0.ne bra l0x00000478;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0xc34 (_1.ptx:479) @$p1.ne bra l0x000003a8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0xc3c (_1.ptx:480) bra l0x00000480;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xc4c (_1.ptx:482) l0x00000480: nop;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0xc54 (_1.ptx:483) @$p0.ne bra l0x00000128;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 23 (potential) branch divergence @  PC=0xc64 (_1.ptx:485) bra l0x000004b8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xc84 (_1.ptx:489) l0x000004b8: set.ge.s32.s32 $p0/$o127, s[0x0034], $r5;
GPGPU-Sim PTX: 24 (potential) branch divergence @  PC=0xc9c (_1.ptx:492) @$p0.ne bra l0x00000540;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd0c (_1.ptx:507) l0x00000540: add.u32 $r2, -$r6, $r5;
GPGPU-Sim PTX: 25 (potential) branch divergence @  PC=0xd2c (_1.ptx:511) bra l0x00000568;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd34 (_1.ptx:512) l0x00000568: cvt.f32.u32 $r0, $r0;
GPGPU-Sim PTX: 26 (potential) branch divergence @  PC=0xd6c (_1.ptx:519) @$p0.ne bra l0x000000c0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0xd74 (_1.ptx:520) nop;
GPGPU-Sim PTX: ... end of reconvergence points for _Z15mummergpuKernelP10MatchCoordPcPKiS3_ii
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii'.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file _1.ptx
Adding _cuobjdump_1.ptx with cubin handle 1
GPGPU-Sim PTX: extracting embedded .ptx to temporary file "_ptx_1kCJ0Q"
Running: cat _ptx_1kCJ0Q | sed 's/.version 1.5/.version 1.4/' | sed 's/, texmode_independent//' | sed 's/\(\.extern \.const\[1\] .b8 \w\+\)\[\]/\1\[1\]/' | sed 's/const\[.\]/const\[0\]/g' > _ptx2_UHzHaF
GPGPU-Sim PTX: generating ptxinfo using "$CUDA_INSTALL_PATH/bin/ptxas --gpu-name=sm_20 -v _ptx2_UHzHaF --output-file  /dev/null 2> _ptx_1kCJ0Qinfo"
GPGPU-Sim PTX: Kernel '_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii' : regs=18, lmem=0, smem=0, cmem=72
GPGPU-Sim PTX: Kernel '_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii' : regs=26, lmem=0, smem=0, cmem=72
GPGPU-Sim PTX: removing ptxinfo using "rm -f _ptx_1kCJ0Q _ptx2_UHzHaF _ptx_1kCJ0Qinfo"
GPGPU-Sim PTX: loading globals with explicit initializers... 
GPGPU-Sim PTX: finished loading globals (0 bytes total).
GPGPU-Sim PTX: loading constants with explicit initializers...  done.
GPGPU-Sim PTX: __cudaRegisterFunction _Z15mummergpuKernelP10MatchCoordPcPKiS3_ii : hostFun 0x0x409750, fat_cubin_handle = 1
GPGPU-Sim PTX: in __cudaRegisterTexture:
GPGPU-Sim PTX:   int dim = 2
GPGPU-Sim PTX:   int norm = 0
GPGPU-Sim PTX:   int ext = 0
GPGPU-Sim PTX:   Execution warning: Not finished implementing "void __cudaRegisterTexture(void**, const textureReference*, const void**, const char*, int, int, int)"
GPGPU-Sim PTX: in __cudaRegisterTexture:
GPGPU-Sim PTX:   int dim = 2
GPGPU-Sim PTX:   int norm = 0
GPGPU-Sim PTX:   int ext = 0
GPGPU-Sim PTX:   Execution warning: Not finished implementing "void __cudaRegisterTexture(void**, const textureReference*, const void**, const char*, int, int, int)"
GPGPU-Sim PTX: in __cudaRegisterTexture:
GPGPU-Sim PTX:   int dim = 2
GPGPU-Sim PTX:   int norm = 0
GPGPU-Sim PTX:   int ext = 0
GPGPU-Sim PTX:   Execution warning: Not finished implementing "void __cudaRegisterTexture(void**, const textureReference*, const void**, const char*, int, int, int)"
