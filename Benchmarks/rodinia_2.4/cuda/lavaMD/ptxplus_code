//HEADER
.version 1.4+
.target sm_13
//END HEADER


//INSTRUCTIONS

.const .u32 constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[10] = {
          0x00000063, 0xc0874911, 0x40862e42, 0x000007f8, 
          0x00000064, 0x00000014, 0x00000000, 0x40000000, 
          0x03700000, 0x3c900000
};





.entry  _Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_ (
	.param  .b8 __cudaparm__Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4__d_par_gpu [ 8 ] ,
	.param  .b8 __cudaparm__Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4__d_dim_gpu [ 56 ] ,
	.param  .u64 __cudaparm__Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4__d_box_gpu ,
	.param  .u64 __cudaparm__Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4__d_rv_gpu ,
	.param  .u64 __cudaparm__Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4__d_qv_gpu ,
	.param  .u64 __cudaparm__Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4__d_fv_gpu )
{
	.reg .u32 $r<25>;
	.reg .u32 $ofs<4>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r16, %ctaid.x;
	shr.s32 $r1, $r16, 0x0000001f;
	set.eq.s32.s32 $p0/$o127, s[0x002c], $r1;
	@$p0.ne set.le.u32.u32 $p0/$o127, s[0x0028], $r16;
	cvt.u32.u16 $r0, $r0.lo;
	@$p0.eq set.lt.s32.s32 $p0/$o127, s[0x002c], $r1;
	mov.half.u32 $r1, $r16;
	mov.half.u32 $r17, $r0;
	@$p0.ne retp;
	mov.u32 $r2, 0x00000290;
	mul.wide.u16 $r3, $r1.lo, $r2.hi;
	mad.wide.u16 $r3, $r1.hi, $r2.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r1, $r1.lo, $r2.lo, $r3;
	add.u32 $r18, s[0x0050], $r1;
	set.le.s32.s32 $p1/$r2, $r17, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0000];
	add.u32 $r1, $r18, 0x00000010;
	ld.global.u32 $r8, [$r1];
	cvt.s32.s32 $p0|$o127, $r2;
	ssy 0x00000168;
	@$p1.eq bra l0x00000168;
	shl.u32 $r1, $r17, 0x00000005;
	shl.u32 $r2, $r8, 0x00000005;
	add.u32 $r3, $r1, 0x00000070;
	add.u32 $r2, s[0x0058], $r2;
	shl.b32 $ofs1, $r3, 0x0;
	add.u32 $r1, $r1, $r2;
	l0x000000d0: ld.global.v2.u32 {$r2,$r3}, [$r1];
	add.u32 $r4, $r1, 0x00000008;
	ld.global.v2.u32 {$r4,$r5}, [$r4];
	add.u32 $r6, $r1, 0x00000010;
	ld.global.v2.u32 {$r6,$r7}, [$r6];
	add.u32 $r9, $r1, 0x00000018;
	ld.global.v2.u32 {$r10,$r11}, [$r9];
	mov.u32 s[$ofs1+=0x0004], $r2;
	mov.u32 s[$ofs1+=0x0004], $r3;
	mov.u32 s[$ofs1+=0x0004], $r4;
	mov.u32 s[$ofs1+=0x0004], $r5;
	mov.u32 s[$ofs1+=0x0004], $r6;
	mov.u32 s[$ofs1+=0x0004], $r7;
	add.u32 $r0, $r0, 0x00000080;
	mov.u32 s[$ofs1+=0x0004], $r10;
	mov.u32 s[$ofs1+=0x0fe4], $r11;
	set.le.s32.s32 $p1/$o127, $r0, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0000];
	add.u32 $r1, $r1, 0x00001000;
	@$p1.ne bra l0x000000d0;
	l0x00000168: nop;
	bar.sync 0x00000000;
	add.u32 $r0, $r18, 0x00000018;
	ld.global.u32 $r0, [$r0];
	add.u32 $r0, $r0, 0x00000001;
	set.le.s32.s32 $p1/$o127, $r0, $r124;
	@$p1.ne retp;
	mov.half.u32 $r0, s[0x0010];
	mov.half.u32 $r1, s[0x0014];
	add.ff64 {$r4,$r5}, {$r0,$r1}, {$r0,$r1};
	shl.u32 $r2, $r8, 0x00000005;
	mul.ff64 {$r6,$r7}, {$r0,$r1}, {$r4,$r5};
	mov.u32 $r20, $r124;
	add.u32 $r19, s[0x0068], $r2;
	l0x000001d0: set.ne.s32.s32 $p1/$o127, $r20, $r124;
	mov.u32 $r0, $r17;
	@$p1.equ mov.u32 $r1, $r16;
	@$p1.ne shl.u32 $r1, $r20, 0x00000004;
	@$p1.ne shl.u32 $r2, $r20, 0x00000003;
	@$p1.ne add.u32 $r1, $r1, $r2;
	@$p1.ne add.u32 $r1, $r18, $r1;
	@$p1.ne add.u32 $r1, $r1, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0014];
	@$p1.ne ld.global.u32 $r1, [$r1];
	mov.u32 $r2, 0x00000290;
	mul.wide.u16 $r3, $r1.lo, $r2.hi;
	mad.wide.u16 $r3, $r1.hi, $r2.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r1, $r1.lo, $r2.lo, $r3;
	add.u32 $r1, s[0x0050], $r1;
	add.u32 $r1, $r1, 0x00000010;
	ld.global.u32 $r1, [$r1];
	ssy 0x00000378;
	@$p0.eq bra l0x00000378;
	shl.u32 $r3, $r17, 0x00000005;
	add.u32 $r5, $r17, 0x0000019e;
	shl.u32 $r4, $r1, 0x00000005;
	shl.u32 $r2, $r1, 0x00000003;
	add.u32 $r8, $r3, 0x00001010;
	shl.u32 $r1, $r17, 0x00000003;
	add.u32 $r4, s[0x0058], $r4;
	add.u32 $r2, s[0x0060], $r2;
	shl.b32 $ofs2, $r8, 0x0;
	shl.b32 $ofs1, $r5, 0x00000003;
	add.half.u32 $r10, $r3, $r4;
	add.half.u32 $r1, $r1, $r2;
	l0x000002c0: ld.global.v2.u32 {$r2,$r3}, [$r10];
	add.u32 $r4, $r10, 0x00000008;
	ld.global.v2.u32 {$r8,$r9}, [$r4];
	mov.u32 s[$ofs2+=0x0004], $r2;
	mov.u32 s[$ofs2+=0x0004], $r3;
	add.u32 $r2, $r10, 0x00000010;
	ld.global.v2.u32 {$r4,$r5}, [$r2];
	ld.global.v2.u32 {$r2,$r3}, [$r1];
	mov.u32 s[$ofs2+=0x0004], $r8;
	mov.u32 s[$ofs2+=0x0004], $r9;
	add.u32 $r8, $r10, 0x00000018;
	ld.global.v2.u32 {$r8,$r9}, [$r8];
	mov.u32 s[$ofs2+=0x0004], $r4;
	mov.u32 s[$ofs2+=0x0004], $r5;
	mov.u32 s[$ofs2+=0x0004], $r8;
	mov.u32 s[$ofs2+=0x0fe4], $r9;
	add.u32 $r0, $r0, 0x00000080;
	mov.u32 s[$ofs1+=0x0004], $r2;
	mov.u32 s[$ofs1+=0x03fc], $r3;
	add.u32 $r1, $r1, 0x00000400;
	set.le.s32.s32 $p1/$o127, $r0, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0000];
	add.u32 $r10, $r10, 0x00001000;
	@$p1.ne bra l0x000002c0;
	l0x00000378: nop;
	bar.sync 0x00000000;
	ssy 0x00000808;
	mov.u32 $r21, $r17;
	@$p0.eq bra l0x00000808;
	shl.u32 $r0, $r17, 0x00000005;
	add.u32 $r1, $r0, 0x00000070;
	shl.b32 $ofs1, $r1, 0x0;
	add.u32 $r22, $r19, $r0;
	l0x000003c0: mov.u32 $r0, 0x00000cf0;
	mov.u32 $r1, 0x00001010;
	add.u32 $r2, $r22, 0x00000018;
	ld.global.v2.u32 {$r8,$r9}, [$r2];
	shl.b32 $ofs2, $r0, 0x0;
	shl.b32 $ofs3, $r1, 0x0;
	mov.u32 $r23, $r124;
	l0x000003f8: mov.half.u32 $r2, s[$ofs3+0x0000];
	mov.half.u32 $r3, s[$ofs3+0x0004];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	mov.half.u32 $r11, s[$ofs1+0x0004];
	mov.half.u32 $r0, s[$ofs3+0x0010];
	mov.half.u32 $r1, s[$ofs3+0x0014];
	mov.half.u32 $r4, s[$ofs1+0x0010];
	mov.half.u32 $r5, s[$ofs1+0x0014];
	add.ff64 {$r10,$r11}, {$r2,$r3}, {$r10,$r11};
	mov.half.u32 $r2, s[$ofs3+0x0008];
	mov.half.u32 $r3, s[$ofs3+0x000c];
	mov.half.u32 $r12, s[$ofs1+0x0008];
	mov.half.u32 $r13, s[$ofs1+0x000c];
	mul.ff64 {$r4,$r5}, {$r0,$r1}, {$r4,$r5};
	fma.rz.ff64 {$r12,$r13}, {$r2,$r3}, {$r12,$r13}, {$r4,$r5};
	mov.half.u32 $r4, s[$ofs3+0x0018];
	mov.half.u32 $r5, s[$ofs3+0x001c];
	mov.half.u32 $r14, s[$ofs1+0x0018];
	mov.half.u32 $r15, s[$ofs1+0x001c];
	fma.rz.ff64 {$r12,$r13}, {$r4,$r5}, {$r14,$r15}, {$r12,$r13};
	add.ff64 {$r10,$r11}, {$r10,$r11}, -{$r12,$r13};
	mul.ff64 {$r14,$r15}, {$r6,$r7}, {$r10,$r11};
	cvt.f64.f64 $r10, -$r14;
	mov.half.u32 $r12, $r10;
	mov.half.u32 $r13, $r11;
	set.lt.s32.s32 $p1/$o127, $r13, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0004];
	@$p1.eq set.le.u32.u32 $p1/$o127, $r13, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0008];
	ssy 0x000006f8;
	mov.u32 $r12, $r13;
	@$p1.eq bra l0x000006a8;
	mov.u32 $r12, 0x652b82fe;
	mov.u32 $r13, 0x3ff71547;
	mul.ff64 {$r12,$r13}, {$r10,$r11}, {$r12,$r13};
	mov.u32 $r14, 0xfefa39ef;
	mov.u32 $r15, 0xbfe62e42;
	cvt.f64.f64 $r12, $r12;
	fma.rz.ff64 {$r10,$r11}, {$r12,$r13}, {$r14,$r15}, {$r10,$r11};
	mov.u32 $r14, 0x3b39803f;
	mov.u32 $r15, 0xbc7abc9e;
	cvt.rz.s32.f64 $r24, $r12;
	fma.rz.ff64 {$r10,$r11}, {$r12,$r13}, {$r14,$r15}, {$r10,$r11};
	mov.u32 $r12, 0x9c0686c0;
	mov.u32 $r13, 0x3e5ae644;
	mov.u32 $r14, 0xe30f5561;
	mov.u32 $r15, 0x3e928a27;
	fma.rz.ff64 {$r12,$r13}, {$r10,$r11}, {$r12,$r13}, {$r14,$r15};
	mov.u32 $r14, 0xe6486d6b;
	mov.u32 $r15, 0x3ec71de8;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x6b2464c5;
	mov.u32 $r15, 0x3efa019a;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x171064a5;
	mov.u32 $r15, 0x3f2a01a0;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x17f29c8d;
	mov.u32 $r15, 0x3f56c16c;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x1111a24e;
	mov.u32 $r15, 0x3f811111;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x5555211d;
	mov.u32 $r15, 0x3fa55555;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x55555530;
	mov.u32 $r15, 0x3fc55555;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x00000005;
	mov.u32 $r15, 0x3fe00000;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	mov.u32 $r14, 0x00000000;
	mov.u32 $r15, 0x3ff00000;
	fma.rz.ff64 {$r12,$r13}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	fma.rz.ff64 {$r10,$r11}, {$r12,$r13}, {$r10,$r11}, {$r14,$r15};
	add.u32 $r12, $r24, 0x000003fc;
	set.gt.u32.u32 $p1/$o127, $r12, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x000c];
	shl.u32 $r12, $r24, 0x00000014;
	ssy 0x00000698;
	add.u32 $r14, $r12, 0x3ff00000;
	@$p1.ne bra l0x00000650;
	mov.u32 $r12, $r124;
	mov.u32 $r13, $r14;
	mul.ff64 {$r10,$r11}, {$r10,$r11}, {$r12,$r13};
	bra l0x00000698;
	l0x00000650: set.ge.s32.s32 $p1/$o127, $r24, $r124;
	@$p1.equ add.u32 $r14, $r14, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0020];
	@$p1.equ mov.u32 $r13, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0024];
	@$p1.ne mov.u32 $r13, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x001c];
	mov.u32 $r12, $r124;
	mul.ff64 {$r12,$r13}, {$r10,$r11}, {$r12,$r13};
	add.u32 $r11, $r14, 0xfff00000;
	mov.u32 $r10, $r124;
	mul.ff64 {$r10,$r11}, {$r10,$r11}, {$r12,$r13};
	l0x00000698: nop;
	bra l0x000006f8;
	l0x000006a8: set.ge.s32.s32 $p1/$o127, $r12, $r124;
	mov.u32 $r12, 0x00000000;
	mov.u32 $r13, 0x7ff00000;
	mov.u32 $r10, 0x00000000;
	mov.u32 $r11, 0x00000000;
	@$p1.ne mov.u32 $r11, $r13;
	@$p1.ne mov.u32 $r10, $r12;
	set.abs.le.f64.f64 $p1/$o127, $r14, $r12;
	add.ff64 {$r12,$r13}, {$r14,$r15}, {$r14,$r15};
	@$p1.equ cvt.f64.f64 $r10, -$r12;
	l0x000006f8: ld.global.v2.u32 {$r12,$r13}, [$r22];
	mov.half.u32 $r14, s[$ofs2+=0x0004];
	mov.half.u32 $r15, s[$ofs2+=0x0004];
	fma.rz.ff64 {$r12,$r13}, {$r14,$r15}, {$r10,$r11}, {$r12,$r13};
	st.global.v2.u32 [$r22], {$r12,$r13};
	mov.half.u32 $r12, s[$ofs1+0x0008];
	mov.half.u32 $r13, s[$ofs1+0x000c];
	add.ff64 {$r2,$r3}, {$r12,$r13}, -{$r2,$r3};
	add.ff64 {$r12,$r13}, {$r10,$r11}, {$r10,$r11};
	add.u32 $r24, $r22, 0x00000008;
	ld.global.v2.u32 {$r10,$r11}, [$r24];
	mul.ff64 {$r2,$r3}, {$r12,$r13}, {$r2,$r3};
	fma.rz.ff64 {$r2,$r3}, {$r14,$r15}, {$r2,$r3}, {$r10,$r11};
	st.global.v2.u32 [$r24], {$r2,$r3};
	mov.half.u32 $r2, s[$ofs1+0x0010];
	mov.half.u32 $r3, s[$ofs1+0x0014];
	add.ff64 {$r2,$r3}, {$r2,$r3}, -{$r0,$r1};
	add.u32 $r10, $r22, 0x00000010;
	ld.global.v2.u32 {$r0,$r1}, [$r10];
	mul.ff64 {$r2,$r3}, {$r12,$r13}, {$r2,$r3};
	fma.rz.ff64 {$r0,$r1}, {$r14,$r15}, {$r2,$r3}, {$r0,$r1};
	st.global.v2.u32 [$r10], {$r0,$r1};
	mov.half.u32 $r0, s[$ofs1+0x0018];
	mov.half.u32 $r1, s[$ofs1+0x001c];
	add.ff64 {$r0,$r1}, {$r0,$r1}, -{$r4,$r5};
	mul.ff64 {$r0,$r1}, {$r12,$r13}, {$r0,$r1};
	fma.rz.ff64 {$r8,$r9}, {$r14,$r15}, {$r0,$r1}, {$r8,$r9};
	add.u32 $r23, $r23, 0x00000001;
	add.u32 $r0, $r22, 0x00000018;
	set.ne.s32.s32 $p1/$o127, $r23, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0010];
	st.global.v2.u32 [$r0], {$r8,$r9};
	add.u32 $ofs3, $ofs3, 0x00000020;
	@$p1.ne bra l0x000003f8;
	add.u32 $r21, $r21, 0x00000080;
	set.le.s32.s32 $p1/$o127, $r21, constant1_Z15kernel_gpu_cuda7par_str7dim_strP7box_strP11FOUR_VECTORPdS4_[0x0000];
	add.u32 $ofs1, $ofs1, 0x00001000;
	add.u32 $r22, $r22, 0x00001000;
	@$p1.ne bra l0x000003c0;
	l0x00000808: nop;
	bar.sync 0x00000000;
	add.u32 $r0, $r18, 0x00000018;
	ld.global.u32 $r0, [$r0];
	add.u32 $r20, $r20, 0x00000001;
	add.u32 $r0, $r0, 0x00000001;
	set.lt.s32.s32 $p1/$o127, $r20, $r0;
	@$p1.ne bra l0x000001d0;
	nop;

	l_exit: exit;
}
//END INSTRUCTIONS
